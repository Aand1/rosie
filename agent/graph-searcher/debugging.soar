#sp {print-store
# #interrupt
#   (state <s> ^smem.command.store <store>)
#   (<store> ^id <id>)
#-->
####(write (crlf) |Store: | <store> | id: | <id>)
#}
#
#sp {print-store-no-id
# #interrupt
#   (state <s> ^smem.command.store <store>)
#  -(<store> ^id <id>)
#-->
####(write (crlf) |*****Store: | <store>)
#}
#
sp {print-current-location*print
   (state <s> ^superstate nil
              ^current-location <loc>)
   (<loc> ^id <id>)
-->
    (write (crlf) |Current location: | <loc> | ID: | <id> )
}

sp {detect-error
   :interrupt
   (state <s> ^current-location <x>)
   (<x> ^class object
        ^id <id>)
-->
###(write (crlf) |Object location confusion - current location.| <x> |: | <id>)
}
sp {detect-error*next
   :interrupt
   (state <s> ^current-location.next <x>)
   (<x> ^class object)
-->
###(write (crlf) |Object location confusion - next location.|)
}

sp {detect-error*neighbor
   :interrupt
   (state <s> ^current-location.neighbor <x>)
   (<x> ^class object)
-->
###(write (crlf) |Object location confusion - neighbor location.|)
 #  (interrupt)
}

sp {detect-error*smem
   (state <s> ^smem.result <x>)
   (<x> ^class object
        ^wall <x>)
-->
###(write (crlf) |Object location confusion - smem.|)
   (interrupt)
}


#sp {watch-operators
#   (state <s> ^operator.name { <name> <<  get-object goto-unvisited-area retrieve-objects record-object re-record-object record-area retrieve-neighbor-area go-to-seen-block >> })
#-->
####(write (crlf) |Operator: | <name> |: | (cmd stats -d))
#}
#deposit-object
#
sp {interrupt-wall-gateway
   :o-support
   :interrupt
   (state <s> ^superstate nil
              ^current-location <cl>)
   (<cl> ^gateway <gw>)
   (<gw> ^type wall)
-->
 #  (<cl> ^gateway <gw> -)
    (write |Wall as gateway:| <gw>)
}

sp {interrupt-wall-gateway*next
   :interrupt
   :o-support
   (state <s> ^superstate nil
              ^current-location.<< neighbor-area next >> <cl>)
   (<cl> ^gateway <gw>)
   (<gw> ^type wall)
-->
 #  (<cl> ^gateway <gw> -)
###(write |NEXT: | <cl> | Wall as gateway:| <gw>)
}

sp {interrupt-wall-neighbor
   :o-support
   (state <s> ^superstate nil
             ^current-location <cl>)
   (<cl> ^neighbor-area <gw>)
   (<gw> ^type wall)
-->
###(write |Wall as neighbor:| <gw>)
   (interrupt)
}

sp {interrupt-wall-next
   :o-support
   (state <s> ^superstate nil
              ^current-location <cl>)
   (<cl> ^next <gw>)
   (<gw> ^type wall)
-->
###(write |Wall as next:| <gw>)
   (interrupt)
}

sp {interrupt-double-gateway
   (state <s> ^superstate nil
              ^current-location <cl>)
   (<cl> ^gateway <g1> { <> <g1> <g2> }
         ^id <cid>)
   (<g1> ^id <id>)
   (<g2> ^id <id>)
-->
###(write |Duplicate gateways: | <id> | location: | <cid>)
  # (interrupt)
}

#sp {interrupt-double-gateway
#   (state <s> ^current-location <cl>)
#   (<cl> ^id 38)
#-->
####(write |Gateways: 38|)
#   (interrupt)
#}

#
###### JELJEL Try to cause blow up in matches
#sp {explode1
#   (state <s> ^superstate nil
#              ^objects.object <obj>
#              ^current-location <a1>
#              ^top-state.areas.area { <> <a1> <a2> } {<> <a1> <> <a2> <a3> } )
#   (<a1> ^id <id>
#         ^type <type>
#         ^<< wall gateway >>.to <id2>
#         ^<< wall gateway >>.to <id3>)
#   (<a2> ^id <id2>
#         ^type <> <type>
#         ^<< wall gateway >>.to <id>)
#   (<obj> ^area.id <id>
#          ^type block)
#(<a3> ^id <id3>
#         ^type <> <type>
#         ^<< wall gateway >>.to <id>)
#
#-->
#   (<a1> ^test true)
#}
#
#sp {deposit-object*propose*find-block-in-areassss
#   (state <s> ^name << get-object deposit-object >>
#              ^current-location <ca>)
#   (<ca> ^id << 41 43 >>)
#-->
####(write (crlf) |Room 41/42/43.|)
#   (interrupt)
#}
# #
#sp {deposit-object*propose*find-block-in-areassss*next
#   :interrupt
#   (state <s> ^current-location <ca>
#          ^smem.command.store <store> )
#   (<ca> ^id 43)
#-->
####(write (crlf) |Room 43 store:|  <store>)
#}

#TODO for now only handle world objects as parameters
#sp {find-action*build-action-options
#   (state <s> ^name find-action
#              ^game.actions.action <a>
#              ^topstate.<thing> <obj>
#              ^game-name <game>)
#   (<a> ^parameters <p>)
#   (<p> ^<arg>.{<param> <> type} <pa> ^<arg>.type.world.<thing> <atr>)
#   (<obj> ^<atr> <param>)
#-->
#   (<s> ^option.<arg> <obj>)
#}

# TODO this is a hack to use the compositve verbs
sp {find-action*propose*lookup-preposition
   (state <s> ^name find-action
             -^found-prep)
#              ^valid-arg)
#              ^game.actions.action <a>)
#   (<a> ^parameters <p> ^conditions <c>)
#   (<c> ^<arg> <conda>)
#   (<conda> ^prep <prep>)
#   (<prep> ^name in ^a this)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-preposition
        ^category svs
        ^type on)
}

#sp {find-action*propose*find-parameters
#   (state <s> ^name find-action
##              ^found-prep <fprep>
#             -^valid-arg.<arg> <something>
#              ^game.actions.action <a>)
#   (<a> ^parameters <p> ^conditions <c>)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name find-parameters
#        ^category svs
#        ^params <p>
#        ^conds <c>)
#}


#sp {fdsfdfind-action*propose*find-parameters
#   (state <s> ^name find-action
#              ^game-name <name>
#              ^svs <svs>)
#   (<svs> ^spatial-scene <sc>
#          ^command <cmd>)
#   (<sc> ^child <C>)
#   (<C> ^id <obja> ^id-int 7) 
#-->
#   (interrupt)
#   (<cmd> ^extract_once <E11>)
#   (<E11> ^a <N7> ^b <N8> ^c <N9> ^type linear-with)
#   (<N7> ^type node ^id <obja>)
#   (<N8> ^type all_nodes)
#   (<N9> ^type all_nodes)
#}
sp {find-action*propose*found-next-action
   (state <s> ^name find-action
              ^game-name <name>
             -^found-prep
              ^topstate <ts> 
              ^topstate.flound-action <fa>
              -^valid-arg)
   (<fa> ^obj1 <oa> ^obj2 <ob> ^dcount <dc> -^mark)
  -{(<ts> ^flound-action <fa2>)
    (<fa2> -^mark ^dcount < <dc>)}          
-->
#   (interrupt)
   (<s> ^operator <o> +)
   (<o> ^name found-next-action
        ^category svs
        ^action <fa>)
}


sp {find-action*apply*found-next-action
   (state <s> ^name find-action
              ^game-name <name>
              ^topstate <ts>
              ^topstate.flound-action <fa>
              ^operator <o>)
   (<o> ^name found-next-action ^action <fa>)
   (<fa> ^obj1 <oa> ^obj2 <ob> ^dcount <dc>)          
-->
   (<s> ^action <a>
        ^valid-arg <va>
        ^done <dc>
        ^valid-arg <vb>)
   (<va> ^1 <oa>)
   (<vb> ^2 <ob>)
   (<a> ^verb move)
   (<fa> ^mark done)
#   (<ts> ^flound-action <fa> -)
}

sp {find-action*propose*find-parameters
   (state <s> ^name find-action
              ^found-prep
              ^game-name <name> 
             -^valid-arg)
-->
   (<s> ^operator <o> +)
   (<o> ^name find-parameters
        ^category svs
        ^game-name <name>)
}


sp {find-action*propose*complete-find-action
   (state <s> ^name find-action       
              ^found-prep.predicate <p1>
              ^action <a>
              ^valid-arg <va>
              ^valid-arg <vb>)
   (<va> ^1 <o1>)
   (<vb> ^2 <o2>)
-->
#   (interrupt)
   (<s> ^operator <o> + =)
   (<o> ^name complete-find-action
        ^category svs
        ^action <a>
        ^predicate <p1>
        ^obja <o1>
        ^objb <o2>)
}

sp {find-action*apply*complete-find-action
   (state <s> ^name find-action
              ^operator <o>
              ^object <o1>
              ^object <o2>
              ^superstate <ss>)
   (<o1> ^id <id1>)
   (<o2> ^id <id2>)
   (<o> ^name complete-find-action
        ^obja <id1>
        ^objb <id2>
        ^predicate <p>
        ^action <a>)
-->
   (<ss> ^action <a>
         ^predicate <p>
         ^obj1 <o1>
         ^obj2 <o2>)
}

sp {find-action*apply*complete-find-action*solved
   (state <s> ^name find-action
              ^operator <o>
              ^object <o1>
              ^object <o2>
              ^solved <t>
              ^superstate <ss>)
   (<o1> ^id <id1>)
   (<o2> ^id <id2>)
   (<o> ^name complete-find-action
        ^obja <id1>
        ^objb <id2>
        ^predicate <p>
        ^action <a>)
-->
   (<ss> ^solved <t>)
}




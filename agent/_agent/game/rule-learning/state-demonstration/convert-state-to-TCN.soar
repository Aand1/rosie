
sp {convert-state-to-TCN*propose*create-parameter
   (state <s> ^name convert-state-to-TCN
              ^arg <arg>
             -^tcn.parameters.<arg>
             -^param.<something>.id <id>
              ^state-rep.objects.object <obj>)
   (<obj> ^id <id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-parameter
        ^obj <obj>
        ^category svs)
}
sp {convert-state-to-TCN*apply*create-parameter
   (state <s> ^name convert-state-to-TCN
              ^arg <arg>
              ^tcn.parameters <pa>
              ^state-rep.objects.object <obj>
              ^operator <o>)
   (<obj> ^category <type> ^id <id>)
   (<o> ^name create-parameter
        ^obj <obj>)
-->
   (<pa> ^<arg>.type <type>)
   (<s> ^param.<arg>.id <id>)
   (<s> ^arg <arg> -)
   (<s> ^arg (+ <arg> 1))
}
sp {convert-state-to-TCN*propose*create-condition
   (state <s> ^name convert-state-to-TCN
              ^tcn.parameters.<arg>
#              ^param.<arg>.id <id>
             -^tcn.conditions.<arg>)
#             -^tcn.conditions.cond.prep.<< a b c >> <id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-condition
        ^arg <arg>
        ^category svs)
}

sp {convert-state-to-TCN*apply*create-condition
   (state <s> ^name convert-state-to-TCN
              ^param.<arg>.id <id>
              ^tcn.conditions <co>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
-->
   (<co> ^<arg> <cond>)
}
#sp {convert-state-to-TCN*apply*create-condition*objdesc
#   (state <s> ^name convert-state-to-TCN
#              ^param.<arg>.id <id>
#              ^tcn.conditions.<arg> <co>
#              ^state-rep.objects.object <obj>
#              ^operator <o>)
#   (<o> ^name create-condition
#        ^arg <arg>)
#   (<obj> ^id <id> ^property.word <word>)
#-->
#   (<co> ^attribute.attr <word>)
#}
sp {convert-state-to-TCN*apply*create-condition*rels
   (state <s> ^name convert-state-to-TCN
              ^param.<arg>.id <id>
              ^param.<arg2>.id <idb>
              ^tcn.conditions.cond <co>
              ^state-rep.objects.object <obj>
              ^state-rep.relationships.relations <rel>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
   (<obj> ^id <idb> ^category <type>)
   (<rel> ^name <name> ^pair <pair>)
   (<pair> ^a <id> ^b <idb> -^c)
-->
   (<co> ^prep <prep>)
   (<prep> ^name <name> ^a <arg> ^b <arg2> ^btype <type> ^negative false)
}

sp {convert-state-to-TCN*apply*create-condition*rels*3args
   (state <s> ^name convert-state-to-TCN
              ^param.<arg>.id <id>
              ^param.<arg2>.id <idb>
              ^param.<arg3>.id <idc>
              ^tcn.conditions.cond <co>
              ^state-rep.objects.object <obj>
              ^state-rep.objects.object <obj2>
              ^state-rep.relationships.relations <rel>
              ^operator <o>)
   (<o> ^name create-condition
        ^arg <arg>)
   (<obj> ^id <idb> ^category <type>)
   (<obj2> ^id <idc>)
   (<rel> ^name <name> ^pair <pair>)
   (<pair> ^a <id> ^b <idb> ^c <idc>)
-->
   (<co> ^prep <prep>)
   (<prep> ^name <name> ^a <arg> ^b <arg2> ^c <arg3> ^btype <type> ^negative false)
}


sp {convert-state-to-TCN*propose*complete-state
   (state <s> ^name convert-state-to-TCN)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-state
        ^category svs)
}

sp {convert-state-to-TCN*apply*complete-state*copyrels
   (state <s> ^name convert-state-to-TCN
              ^tcn <tcn>
              ^arg <arg>
              ^operator.name complete-state)
-->
   (<tcn> ^cond-args (- <arg> 1))
}

sp {convert-state-to-TCN*apply*complete-state
   (state <s> ^name convert-state-to-TCN
              ^superstate.operator <op>
              ^tcn <tcn>
              ^operator.name complete-state)
   (<tcn> ^cond-args)
-->
   (<op> ^result <tcn>)
}
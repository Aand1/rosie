sp {topstate*elaborate*smem-query-cue*on
   (state <s> ^topstate <s>)
-->
   (<s> ^smem-query-cue.name on1)
   (<s> ^smem-query-cue.name in1)
   (<s> ^smem-query-cue.name right-of1)
   (<s> ^smem-query-cue.name left-of1)
}

sp {topstate*elaborate*world*predicates*on
   (state <s> ^topstate <s>
              ^retrieved-lti-cue.retrieved-lti <on>
              ^retrieved-lti-cue.retrieved-lti <in>
              ^retrieved-lti-cue.retrieved-lti <right>
              ^retrieved-lti-cue.retrieved-lti <left>
              ^world.predicates <preds>)
   (<on> ^name on1)
   (<in> ^name in1)
   (<right> ^name right-of1)
   (<left> ^name left-of1)
-->
   (<preds> ^predicate <p1> <p2> <p3> <p4>)
   (<p1> ^name on1
         ^predicate-info <on>)
   (<p2> ^name in1
         ^predicate-info <in>)
   (<p3> ^name right-of1
         ^predicate-info <right>)
   (<p4> ^name left-of1
         ^predicate-info <left>)
}
           

#sp {topstate*propose*find-projection
#   (state <s> ^topstate <s>
#              ^retrieved-lti-cue.retrieved-lti <pred>
#              ^world.objects.object <obj1>
#              ^world.objects.object <obj2>
#             -^projection-result)
#   (<pred> ^name on1)
#   (<obj1> ^id 11)
#   (<obj2> ^id 1)
#-->
#   (<s> ^operator <o> + <)
#   (<o> ^name find-projection
#        ^arg-list <args>
#        ^predicate <pred>)
#   (<args> ^1 <obj1> ^2 <obj2>)
#}

     
sp {add-new-default*apply*add-new-default*relation
   (state <s> ^name add-new-default
   	      ^superstate.operator <op>
	      ^smem.command <scomm>)
   (<op> ^name add-new-default
   	 ^default-value.smem-rep <val>
	 ^smem-object <sobj>
	 ^argument relation)
-->
   (<sobj> ^default <def>)
   (<def> ^value <val>)
   (<s> ^default <def>)
   (<scomm> ^store <sobj> <def> <val>)
}

sp {add-new-default*apply*add-new-default*object
   (state <s> ^name add-new-default
   	      ^superstate.operator <op>
	      ^smem.command <scomm>)
   (<op> ^name add-new-default
   	 ^default-value <val>
	 ^smem-object <sobj>
	 ^argument {<arg> << p1 p2 >>} )
-->
   (<sobj> ^default <def>)
   (<def> ^value <nval>)
   (<s> ^default <def>)
   (<scomm> ^store <sobj> <def> <nval>)
}

sp {add-new-default*apply*add-new-default*object*features
   (state <s> ^name add-new-default
   	      ^superstate.operator <op>
	      ^smem.command <scomm>
	      ^default <def>)
   (<op> ^name add-new-default
   	 ^default-value.property <prop>
	 ^smem-object <sobj>
	 ^argument {<arg> << p1 p2 >>})
   (<def> ^value <nval>)
   (<prop> ^label <label>
   	   ^name <name>)
-->
   (<nval> ^<name> <label>)
   (<scomm> ^store <nval>)
}

###################################################################

sp {add-new-default*store*other*arguments
   (state <s> ^name add-new-default
   	      ^default <def>
	      ^superstate <ss>
	      ^smem.command <scomm>
	      ^superstate <ss>) 
   (<ss> ^grounded-predicate <gp>
   	 ^operator.argument <arg>)
   (<gp> ^{<arg2> <> <arg> << p1 p2 >> } <obj>)
-->
   (<def> ^<arg2> <nobj>)
   (<scomm> ^store <def> <nobj>)
}

sp {add-new-default*store*argument*features
   (state <s> ^name add-new-default
   	      ^default <def>
	      ^superstate <ss>
	      ^smem.command <scomm>)
   (<ss> ^grounded-predicate.{<arg2> <> <arg> << p1 p2 >>} <obj>
	 ^operator.argument <arg>)
   (<def> ^<arg2> <nval>)
   (<obj> ^property <prop>)
   (<prop> ^label <label>
   	   ^name <name>)
-->
   (<nval> ^<name> <label>)
   (<scomm> ^store <nval>)
}
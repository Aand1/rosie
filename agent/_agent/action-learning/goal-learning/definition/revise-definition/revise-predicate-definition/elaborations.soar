sp {revise-predicate-defintion*elaborate*partial-grounds	
   (state <s> ^name revise-predicate-definition
   	      ^superstate.operator <sop>)
   (<sop> ^name revise-predicate-definition
   	  ^revision-details <rd>)
-->
   (<s> ^revision-details <rd>
   	^pairs <pair>)
}

sp {revise-predicate-definition*elaborate*procedural-definition
   (state <s> ^name revise-predicate-definition
   	      ^grounded-action._metadata.map-id <map>)
   (<map> ^procedural <pid>)
-->
   (<s> ^procedural-definition <pid>)
}

sp {revised-predicate-definition*elaborate*state
   (state <s> ^name revise-predicate-definition
   	      ^revision-details <rd>)
   (<rd> ^failure-details <fd>
   	 ^grounded-predicate <gp>)
   (<fd> ^predicate-definition <def>
   	 ^partial-grounds <pg>)
-->
   (<s> ^predicate-definition <def>
   	^grounded-predicate <gp>
	^partial-grounds <pg>)
}


sp {revise-predicate-definition*elaborate*grounded-action
   (state <s> ^name revise-predicate-definition
   	      ^superstate.operator <sop>)
   (<sop> ^grounded-action <ga>)
-->
   (<s> ^grounded-action <ga>)
}


sp {revise-predicate-definition*copy*generalizable
   (state <s> ^name revise-predicate-definition
   	      ^superstate <ss>)
   (<gen> ^grounded-predicate <pred>)
   (<ss> ^generalizable <gen> 
   	 ^operator.revision-details.grounded-predicate <pred>)
-->
   (<s> ^generalizable <gen>)
}


##################### elaborate generalizable ######################
sp {revise-definition*elaborate*generalizable*level1
   (state <s> ^name revise-predicate-definition
   	      ^grounded-predicate <pred>
	      ^grounded-action <ga>)
   (<pred> ^<garg> <val>)
   (<ga> ^<aarg> <val>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wmem-object <val>
   	  ^procedural-argument <aarg>
	  ^goal-argument <garg>
	  ^features <ft>
	  ^level one
	  ^grounded-predicate <pred>)
}

sp {revise-definition*elaborate*generalizable*level2*object
   (state <s> ^name revise-predicate-definition
   	      ^grounded-predicate <pred>
	      ^grounded-action <ga>)
   (<pred> ^<garg> <val>)
   (<ga> ^<aarg>.<< argument >> <val>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wmem-object <val>
   	  ^procedural-argument <aarg>
	  ^goal-argument <garg>
	  ^features <ft>
	  ^level two
	  ^type argument)
}

sp {revise-definition*elaborate*generalizable*level2*relation
   (state <s> ^name revise-predicate-definition
   	      ^grounded-predicate <pred>
	      ^grounded-action <ga>)
   (<pred> ^<garg> <val>)
   (<ga> ^<aarg>.<< relation >> <val>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wmem-object <val>
   	  ^procedural-argument <aarg>
	  ^goal-argument relation
	  ^level two
	  ^type relation)
}

sp {revise-definition*elaborate*features*generalizables*level1
   (state <s> ^name revise-predicate-definition
   	      ^generalizable <gen>)
   (<gen> ^procedural-argument <arg>
   	  ^features <ft>
	  ^wmem-object.property <wprop>)
   (<wprop> ^label <val>	
   	    ^name <attr>)
-->
   (<ft> ^<attr> <val>)
}

#### elaborate relax filters ################################################
sp {revise-predicate-definition*elaborate*relax-filters*relations
   (state <s> ^name revise-predicate-definition
   	      ^predicate-definition <def>
	      ^grounded-predicate <gp>
	      ^partial-grounds <pg>
	      ^topstate.found-prep <fp>)
   (<fp> ^type <prep-name>)
   (<def> ^relation <rel-node>)
   (<rel-node> ^default <rel-def>)
   (<rel-def> ^value.prep-name <prep-name>)
   (<gp> ^relation <relp>)
   (<relp> ^type <prep-name>)
   (<pg> -^relation <any>)
-->
   (<s> ^relax-filters <rxf>)
   (<rxf> ^type relation-node
   	  ^default-value-node <rel-def>
	  ^grounded-predicate <gp>
	  ^_node <rel-node>)
}

sp {revise-predicate-definition*elaborate*relax-filters*state
   (state <s> ^name revise-predicate-definition
   	      ^predicate-definition <def>
	      ^grounded-predicate <gp>
	      ^partial-grounds <pg>)
   (<def> ^state <st-node>)
   (<st-node> ^default <st-def>)
   (<st-def> ^value <state-label>)
   (<gp> ^state <state-label>)
   (<pg> -^state <any>)
-->
   (<s> ^relax-filters <rxf>)
   (<rxf> ^type state-node
   	  ^default-value-node <st-def>
	  ^grounded-predicate <gp>
	  ^_node <st-node>)
}

sp {revise-predicate-definition*elaborate*relax-filters*p1*p2
   (state <s> ^name revise-predicate-definition
   	      ^predicate-definition <def>
	      ^grounded-predicate <gp>	
	      ^grounded-action <ga>
	      ^partial-grounds <pg>)
   (<def> ^{<arg> << p1 p2 >>} <pnode>)
   (<pnode> ^default <p-def>)
   (<gp> ^<arg> <gobj>)
   (<pg> -^<arg> <any>)
 -->
   (<s> ^relax-filters <rxf>)
   (<rxf> ^type p1-p2-node
   	  ^default-value-node <p-def>
	  ^goal-argument <arg>
	  ^grounded-predicate <gp>
	  ^grounded-action <ga>
	  ^_node <pnode>)
}


sp {revise-predicate-definition*elaborate*relax-filters*non-existant*state
   (state <s> ^name revise-predicate-definition
   	      ^grounded-predicate non-existant
	      ^predicate-definition <gid>
	      ^grounded-action <ga>)
   (<gid> ^state <st-node>
   	  ^p1 <p1-node>)
   (<p1-node> ^default <pdef>)
   (<pdef> ^value non-existant)
-->
   (<s> ^relax-filters <rxf>)
   (<rxf> ^type p1-p2-node
   	  ^default-value-node <pdef>
	  ^goal-argument p1
	  ^grounded-predicate non-existant
	  ^grounded-action <ga>
	  ^_node <p1-node>)

}

### elaborate add new defaults ##############################################


### elaborate merge nodes ####################################################
sp {revise-predicate-definition*elaborate*merge-nodes*level1
   (state <s> ^name revise-predicate-definition
   	      ^procedural-definition <pid>
	      ^predicate-definition <gid>
	      ^generalizable <gen>)
   (<gen> ^procedural-argument <parg>
   	  ^goal-argument <garg>)
   (<pid> ^<parg> <node>)
   (<node> -^argument)
   (<gid> ^<garg> {<node2> <> <node>})
-->
   (<s> ^merge-nodes <mn>)
   (<mn> ^node1 <node>
   	 ^node2 <node2>)
}

sp {revise-predicate-definition*elaborate*merge-nodes*level2
   (state <s> ^name revise-predicate-definition
   	      ^procedural-definition <pid>
	      ^predicate-definition <gid>
	      ^generalizable <gen>)
   (<gen> ^procedural-argument <parg>
   	  ^goal-argument <garg>
	  ^type <type>)
   (<pid> ^<parg>.<type> <node>)
   (<gid> ^<garg> {<node2> <> <node>})
-->
   (<s> ^merge-nodes <mn>)
   (<mn> ^node1 <node>
   	 ^node2 <node2>)
}


############# elaborate add defaults #############################
sp {revise-predicate-definition*elaborate*add-default*nodes*non-existant*state
   (state <s> ^name revise-predicate-definition
   	      ^grounded-predicate non-existant
	      ^predicate-definition <gid>
	      ^grounded-action <ga>
	      -^relax-filters.goal-argument p1
	      -^updated-node <p1-node>)
   (<gid> ^state <st-node>
   	  ^p1 <p1-node>)
-->
   (<s> ^add-default <adf1> <adf2>)
   (<adf2> ^default-value-node <p1-node>
   	   ^value non-existant
	   ^grounded-action <ga>
	   ^goal-argument p1
	   ^_node <p1-node>)
}
   
sp {revise-predicate-definition*elaborate*add-default*relation
   (state <s> ^name revise-predicate-definition
   	      ^predicate-definition <def>
   	      ^grounded-predicate <gp>
	      ^partial-grounds <pg>
	      -^relax-filters.type relation-node
	      -^updated-node <rel-node>)
   (<def> ^relation <rel-node>)
   (<rel-node> ^default <rel-def>)
   (<rel-def> ^value.prep-name <prep-name>)
   (<gp> ^relation <relp>)
   (<relp> ^type {<prep-name2> <> <prep-name>})
   (<pg> -^relation <any>)
-->
   (<s> ^add-default <adf>)
   (<adf> ^default-value-node <rel-node>
   	  ^value <relp>
	  ^goal-argument relation
	  ^grounded-predicate <gp>
	  ^_node <rel-node>)
}
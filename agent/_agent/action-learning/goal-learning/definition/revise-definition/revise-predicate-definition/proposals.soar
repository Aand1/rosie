sp {revise-definition*propose*relax-filters
   (state <s> ^name revise-predicate-definition
   	      ^change-default <cd>
	      ^predicate-definition <def>
	      ^grounded-predicate <gp>
	      ^partial-grounds <pg>
	      -^relaxed-filters <sobj>
	      ^pairs.<cd> <pg>)
   (<cd> ^argument <arg>
   	 ^features <ft>)
   (<def> ^<arg> <sval>)
   (<sval> ^default <sobj>)
   (<gp> ^<arg> <val>)
   (<pg> ^<arg> <val>
   	 ^default-values.<arg> <sobj>)
-->
   (<s> ^operator <op> +, =)
   (<op> ^name relax-filters
   	 ^smem-object <sobj>)
}

sp {revise-definition*propose*add-new-default1
   (state <s> ^name revise-predicate-definition
   	      ^change-default <cd>
	      ^predicate-definition <def>
	      ^grounded-predicate <gp>
	      ^partial-grounds <pg>
	      -^added-new-default <sval>)
   (<cd> ^argument <arg>
   	 ^object <obj>)
   (<def> ^<arg> <sval>)
   (<gp> ^<arg> <val>)
   (<pg> ^<arg> {<oval> <> <val>})
   -{(<s> ^change-default <cd>
   	  ^partial-grounds <pg1>
	  ^pairs.<cd> <pg1>)}
-->
   (<s> ^operator <op> +, =)
   (<op> ^name add-new-default
   	 ^smem-object <sval>
	 ^default-value <obj>
	 ^argument <arg>)
}

sp {revise-predicate-definition*propose*merge-nodes
   (state <s> ^name revise-predicate-definition
   	      ^merge-nodes <mn>
	      ^procedural-definition <pid>
	      ^linguistic-definition <lid>)
-->
   (<s> ^operator <op> +, =)
   (<op> ^name merge-nodes 
   	 ^nodes <mn>
	 ^procedural-definition <pid>
	 ^linguistic-definition <lid>)
}

sp {revise-predicate-definition*propose*add-defaults
   (state <s> ^name revise-predicate-definition
   	      ^add-default <add>
	      -^added-new-default <sobj>)
   (<add> ^node <sobj>
   	  ^value <val>
	  ^argument <arg>)
-->
   (<s> ^operator <op> +, =)
   (<op> ^name add-new-default
   	 ^default-value <val>
	 ^smem-object <sobj>
	 ^argument <arg>)
}
   


sp {revise-definition*propose*complete-revise-predicate-pefinition
   (state <s> ^name revise-predicate-definition)
-->
   (<s> ^operator <op> + <)
   (<op> ^name complete-revise-predicate-definition)
}


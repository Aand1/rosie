### if pairing for an argument exists, ground that
sp {generate-grounded-relation-predicate*ground*paired-arguments*objects 
   (state <s> ^name generate-grounded-predicate
   	      ^grounded-predicate <gp>
	      ^predicate-definition <pred>
	      ^pairing <pair>)
   (<pair> ^smem-object <sobj>
   	   ^wmem-object <wobj>
	   ^matched yes)
   (<pred> ^{<arg> <> relation} <sobj>)
-->
   (<gp> ^<arg> <wobj>)
}

sp {generate-grounded-relation-predicate*ground*paired-arguments*relation
   (state <s> ^name generate-grounded-predicate
   	      ^grounded-predicate <gp>
	      ^predicate-definition <pred>
	      ^pairing <pair>)
   (<pair> ^smem-object <sobj>
   	   ^wmem-object <wobj>)
   (<pred> ^relation <sobj>)
-->
   (<gp> ^relation <wobj>)
}


### if pairing for an argument does-not exist, associate default
sp {generate-grounded-relation*ground*not-paired*relation
   (state <s> ^name generate-grounded-predicate
 #  	      ^topstate.verb-parameters.use-default-argumentation true ### model variation  
 	      ^topstate.found-prep <fp>
   	      ^grounded-predicate <gp>
	      ^not-matched <pobj>
	      ^predicate-definition.relation <pobj>)
   (<fp> ^smem-rep <rel-def>)
   (<pobj> ^default <rel-def>)
-->
   (<gp> ^relation <fp>)
}

sp {generate-grounded-relation*ground*state
   (state <s> ^name generate-grounded-predicate
   	      ^grounded-predicate <gp>
	      ^predicate-definition <pred>)
   (<pred> ^state <val>)
-->
   (<gp> ^state <val>)
}


sp {generate-grounded-relation*ground*not-paired*objects*retrieve
   (state <s> ^name generate-grounded-predicate
#              ^topstate.verb-parameters.use-default-argumentation true ### model variation
   	      ^grounded-predicate <gp>
	      ^not-matched <pobj>
	      ^predicate-definition <pred>
	      ^object <obj>)
   (<pred> ^{<arg> <> relation} <pobj>)
   (<pobj> ^default <smem-rep-def>)
   (<smem-rep-def> -^<sub>)
-->
   (<s> ^nretrieve-lti <smem-rep-def>)
}

sp {generate-grounded-relation*ground*not-paired*objects*1attribute
   (state <s> ^name generate-grounded-predicate
#   	      ^topstate.verb-parameters.use-default-argumentation true ### model variation
   	      ^grounded-predicate <gp>
	      ^not-matched <pobj>
	      ^predicate-definition <pred>
	      ^object <obj>)
   (<pred> ^{<arg> <> relation} <pobj>)
   (<pobj> ^default <smem-rep-def>)
   (<smem-rep-def> ^attribute <label1>
   		   -^attribute <label2> <> <label1>)
   (<obj> ^property.label <label1>)
-->
   (<gp> ^<arg> <obj>)
}

sp {generate-grounded-relation*ground*not-paired*objects*2attribute
   (state <s> ^name generate-grounded-predicate
#   	      ^topstate.verb-parameters.use-default-argumentation true ### model variation
   	      ^grounded-predicate <gp>
	      ^not-matched <pobj>
	      ^predicate-definition <pred>
	      ^object <obj>)
   (<pred> ^{<arg> <> relation} <pobj>)
   (<pobj> ^default <smem-rep-def>)
   (<smem-rep-def> ^attribute <label1>
   		   ^attribute {<label2> <> <label1>}
		   -^attribute {<label3> <> <label1> <> <label2>})
   (<obj> ^property.label <label1>
   	  ^property.label <label2>)
-->
   (<gp> ^<arg> <obj>)
}


sp {generate-grounded-relation*ground*not-paired*objects*3attribute
   (state <s> ^name generate-grounded-predicate
#   	      ^topstate.verb-parameters.use-default-argumentation true ### model variation
   	      ^grounded-predicate <gp>
	      ^not-matched <pobj>
	      ^predicate-definition <pred>
	      ^object <obj>)
   (<pred> ^{<arg> <> relation} <pobj>)
   (<pobj> ^default <smem-rep-def>)
   (<smem-rep-def> ^attribute <label1>
   		   ^attribute {<label2> <> <label1>}
		   ^attribute {<label3> <> <label1> <> <label2>}
		   -^attribute {<label4> <> <label3> <> <label1> <> <label2>})
   (<obj> ^property.label <label1>
   	  ^property.label <label2>
	  ^property.label <label3>)
-->
   (<gp> ^<arg> <obj>)
}


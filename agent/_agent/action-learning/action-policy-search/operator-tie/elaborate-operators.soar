sp {learning*elaborate*put-down*relation
   (state <s> ^name {<sname> <> evaluate-operator}
   	      ^desired <des>
	      ^operator <op> +)
   (<des> ^track-relation <tr>)
   (<tr> ^relation <prep>
   	 ^p2 <trval>)
   (<op> ^<arg2> <op-arg>
   	  ^name op_put-down-object-location)
   (<op-arg> ^<arg> <val2>)
   (<val2> ^focus <fval2>)
   (<trval> ^focus <fval2>)
-->
   (<op-arg> ^relation <prep>)
}

# special handling for the operator op_wait 
# sp {mark*operators*match*op_wait*learning
#    (state <s> ^problemspace learning
#    	      ^problemspace action
#    	      ^operator <op> +
# 	      ^indexed-action <ia>
# 	      ^superstate.object <obj>)
#    (<op> ^superoperator <sop>)
#    (<ia> ^argument1 <val>
#    	 ^name op_wait)

#    (<sop> ^name op_wait)
# -->
#    (<op> ^matched argument1)
# }


### copy state if matched
# sp {prefer*match*epmem*elaborate*state*copy
#    (state <s> ^name selection
# 	      ^superstate <ss>
#    	      ^operator <o>)
#    (<ss> ^desired <des>
#    	 ^object <obj>)
#    (<o> -^not-matched <any>
#    	^superoperator <sop>)
#    (<obj> ^focus <f1>)
#    (<des> ^achieve-state <astate>)
#    (<astate> ^p1 <val1>
#       	     ^state <st>)
#    (<val1> ^focus <f1>)
#    (<sop> ^name op_wait)
# -->
#    (<sop> ^argument1 <new-arg-struct>)
#    (<new-arg-struct> ^argument <obj>
#    		     ^state <st>)
# }


sp {prefer*match*epmem*elaborate*spatial-rel
   (state <s> ^name selection
	      ^superstate.desired <des>
   	      ^operator <o>)
   (<o> -^not-matched <any>
   	^superoperator <sop>)
   (<des> ^track-relation <tr>)
   (<tr> ^relation <prep>
   	 ^p2 <trval>)
   (<sop> ^<arg2> <sop-arg>
   	  ^name op_put-down-object-location)
   (<sop-arg> ^<arg> <val2>)
   (<val2> ^focus <fval2>)
   (<trval> ^focus <fval2>)
   -->
   (<sop-arg> ^relation <prep>)
   (<s> ^copied-relation-from-desired <sop-arg>)
}

# sp {prefer*match*epmem*elaborate*spatial-rel*not-in-desired
#    (state <s> ^name selection
#    	      ^operator <o>
# #	      ^indexed-action <ia>
# 	      -^copied-relation-from-desired <sop-arg>)
#    (<o> -^not-matched <any>
#    	^superoperator <sop>)
#  #  (<ia> ^<arg2> <ia-val>)
# #   (<ia-val> ^relation.smem-rep <rel>)
#    (<sop> ^<arg2> <sop-arg>
#    	  ^name <op-name>)
#    (<sop-arg> ^<arg>.focus <any-focus>)
# -->
#    (<sop-arg> ^relation <nrel>)
#    (<nrel> ^smem-rep @P2)
#  }

# special handling for the operator op_wait 
sp {mark*operators*match*op_wait*learning
   (state <s> ^problemspace learning
   	      ^problemspace action
   	      ^operator <op> +
	      ^indexed-action <ia>
	      ^superstate.object <obj>)
   (<op> ^superoperator <sop>)
   (<ia> ^argument1 <val>
   	 ^name op_wait)

   (<sop> ^name op_wait)
-->
   (<op> ^matched argument1)
}


### copy state if matched
sp {prefer*match*epmem*elaborate*state*copy
   (state <s> ^name selection
	      ^superstate <ss>
   	      ^operator <o>)
   (<ss> ^desired <des>
   	 ^object <obj>)
   (<o> -^not-matched <any>
   	^superoperator <sop>)
   (<obj> ^focus <f1>)
   (<des> ^achieve-state <astate>)
   (<astate> ^p1 <val1>
      	     ^state <st>)
   (<val1> ^focus <f1>)
   (<sop> ^name op_wait)
-->
   (<sop> ^argument1 <new-arg-struct>)
   (<new-arg-struct> ^argument <obj>
   		     ^state <st>)
}


### elaborate problemspce
sp {elaborate*action-policy*problemspace
   (state <s> ^name retrospective-learning
   	      ^problemspace <ps>)
-->
   (<ps> ^action <act>
   	 ^state <st>
	 ^learning <l>)
   (<act> ^type project)
   (<st> ^dont-copy io
   	 ^dont-copy object
	 ^dont-copy environment
	 ^type retrospective)
   (<l> ^type exploitation)
}

### elaborate segment
sp {elaborate*retrospective-learning*segment
   (state <s> ^name retrospective-learning
   	      ^superstate.operator <op>)
   (<op> ^segment <seg>)
-->
   (<s> ^segment <seg>
   	^duplicates <d>
	^name action)
}

### elaborate indexed-action
sp {retrospective-learning*copy*superstate*indexed-action
   (state <s> ^name retrospective-learning
   	      ^superstate.indexed-action <ia>)
-->
   (<s> ^indexed-action <ia>)
}
   	      

### elaborate indexed-action
sp {retrospective-learning-learning*elaborate*segment-information
   (state <s> ^name retrospective-learning
   	      ^segment.purpose.parameters.indexable <pi>)
   (<pi> ^result <ia>
   	 ^lexical <lex>)
   (<ia> ^_metadata.map-id <map-id>)
-->
   (<s> ^topstate-indexed-action <ia>
   	^lexical-information <lex>
	^relevant-map-id <map-id>)
}

##
sp {elaborate*correct*episode*segment*id*retrospective-learning
   (state <s> ^name retrospective-learning
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>)
   (<ret> ^interaction.stack.segment.id <id>)
-->
   (<s> ^relevant-segment-id (* <id> 100))
}


sp {composite-success*detect*attribute*success*goal
   (state <s>    	      ^desired <d>
   	      ^nsuccess <d>)
#	      -^action-status learning)
-->
   (<s> ^success <d>)
}
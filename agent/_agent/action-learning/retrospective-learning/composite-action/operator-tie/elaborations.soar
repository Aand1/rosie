### elaborate the selection state
sp {selection*elaborate*instructed*action
   (state <s> ^name selection
   	      ^epmem.result.retrieved <ret>)
   (<ret> ^interaction.stack.segment <seg>)
   (<seg> ^purpose.parameters.indexable.result <ia>
   	  ^id <id>)
-->
   (<s> ^indexed-action <ia>
   	^relevant-segment-id <id>)
}

### copy action-space-id
sp {selection*copy*action-space-id
   (state <s> ^name selection
   	      ^superstate.action-space-id <id>)
-->
   (<s> ^action-space-id <id>)
}


### copy relevant map-id
sp {selection*elaborate*instructed*action*map-id
   (state <s> ^name selection
   	      ^superstate.superstate.relevant-map-id <map>)
-->
   (<s> ^relevant-map-id <map>)
}



#### elaborate problem-space 

## moved this to composite_operator/operator-tie
# sp {new-operator*elaborate*problem-space
#    (state <s> ^name {<sname> <> evaluate-operator <> operator-tie <> selection <> action-policy <> find-parameters})
# -->  
#    (<s> ^problem-space <p>)
#    (<p> ^name <sname>
#    	^default-state-copy yes
# 	^two-level-attributes object
# 	^two-level-attributes self
# 	^one-level-attributes grabbed on off closed open track-relation cooked action-space-id not-tracking not-achieved-state 
# 	^deep-copy action-space-operator track-relation
# 	^dont-copy vpredicates)
# }

## elaborate learning type
# sp {operator-tie*elaborate*learning-type*retrospective-explanation
#    (state <s> ^configuration.learning-type retrospective
#    	      ^problem-space <ps>)
# -->
#    (<ps> ^learning-type retrospective)
# }

sp {retrospective-explanation*selection*configuration
   (state <s> ^action-type composite
   	      ^superstate.name action-policy
	      ^configuration <conf>
	      ^quiescence t)
-->
   (<conf> ^learning-type exploitation)
}
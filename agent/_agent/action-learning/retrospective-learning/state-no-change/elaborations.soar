sp {retrospective-learning*composite-action*state-no-change
   (state <s> ^attribute state
   	      ^impasse no-change
	      ^superstate.name action)
-->
   (<s> ^name learn-proposal-rule)
}


sp {learn-proposal-rule*elaborate*problemspace
   (state <s> ^name learn-proposal-rule
   	      ^problemspace <ps>)
-->
   (<ps> ^learning <l> 
   	 ^action.type project)
   (<l> ^use chunking
   	^type exploitation)
}

sp {learn-proposal-rule*copy*indexed-action
   (state <s> ^name learn-proposal-rule
   	      ^superstate <ss>)
   (<ss> ^indexed-action <ia>)
-->
   (<s> ^indexed-action <ia>)
}

sp {learn-proposal-rule*propose*action*superstate
   (state <s> ^name learn-proposal-rule
   	      ^superstate <ss>
	      ^indexed-action <ia>
	      ^successful-application <ia>)
-->
   (<ss> ^operator <ia> +)
}

##
sp {elaborate*correct*episode*segment*id*learn-proposal-rule
   (state <s> ^name learn-proposal-rule
   	      ^epmem.result <res>)
   (<res> ^retrieved <ret>)
   (<ret> ^interaction.stack.segment.id <id>)
-->
   (<s> ^relevant-segment-id (* <id> 100))
}


sp {elaborate*learn-proposal-rule*retrieve*relevant*episode
   (state <s> ^name learn-proposal-rule
   	      ^superstate.superstate.operator.segment <seg>
	      ^epmem.command <epcomm>)
   (<seg> ^epmem-id <id>)
-->
   (<epcomm> ^retrieve <id>)
}

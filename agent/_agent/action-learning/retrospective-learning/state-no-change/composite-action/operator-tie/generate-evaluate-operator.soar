# sp {selection*propose*generate-new-operator
#    (state <s> ^name selection
#    	      -^new-operator)
# -->
#    (<s> ^operator <op> +)
#    (<op> ^name generate-new-operator)
# }


# sp {selection*generate-new-operator*required
#    (state <s> ^name selection
#    	      ^action-space-id <aid>
# 	      -^retrieved-action.name <name>
# 	      ^operator <op> +)
#    (<aid> ^_operator.op_name <name>)
#    (<op> ^name generate-new-operator)
# -->
#    (<s> ^operator <op> -)
# }

#### propose evaluate-operator with highest preference
sp {selection*propose*evaluate-operator*new-operator
   (state <s> ^name selection
   	      ^new-operator <nop>)
-->
   (<s> ^operator <op> +)
   (<op> ^name evaluate-operator
   	 ^superoperator <nop>)
}

sp {selection*prefer*generate-new-operator
   (state <s> ^name selection
   	      ^operator <op1> +
	      ^operator <op2> +)
   (<op1> ^name generate-new-operator)
   (<op2> ^name evaluate-operator)
-->
   (<s> ^operator <op1> > <op2>)
}


### if operator is composite, propose it
sp {selection*propose*success-evaluation*composite-action
   :default
   (state <s> ^name selection
              ^superstate <ss>
              ^evaluation <e1>)
   (<ss> ^desired <eb>)
   (<e1> ^symbolic-value << partial-success success >>
         ^desired <eb>
         ^superoperator <o1>)
   (<o1> ^action-type composite)
-->
   (<ss> ^operator <o1> +)}
### copy desired goal state
sp {elaborate*learn-termination-rule*copy*goal
   (state <s> ^name learn-termination-rule
   	      ^superstate <ss>)
   (<ss> ^segment-desired <des>)
-->
   (<s> ^segment-desired <des>)
}


### copy action to be executed
sp {copy*indexed-action*from*segment
   (state <s> ^name learn-termination-rule
   	      ^topstate.interaction.stack.segment.next.purpose.parameters.indexable.result <iop>)
-->
   (<s> ^indexed-action <iop>)
}


#### copy relation predicate
sp {copy*relation-predicate
   (state <s> ^name learn-termination-rule
   	      ^segment-desired <des>)
   (<des> ^relation-predicate <pred>)
   (<pred> ^relation <rel>
   	   ^p1 <obj1>
	   ^p2 <obj2>)
   (<rel> ^smem-rep.name <prep-name>)
   (<obj1> ^focus <id1>)
   (<obj2> ^focus <id2>)
-->
   (<s> ^track-relation <nprep>)
   (<nprep> ^object1 <nobj1>
   	    ^object2 <nobj2>
	    ^complete success
	    ^vpredicate <rel>)
   (<nobj1> ^focus <id1>)
   (<nobj2> ^focus <id2>)
}

### copy state predicate
sp {copy*state-predicate
   (state <s> ^name learn-termination-rule
   	      ^segment-desired <des>)
   (<des> ^achieve-state <dtr>)
   (<dtr> ^p1 <obj>
   	  ^state <state>)
   (<obj> ^focus <id>)
-->
   (<s> ^<state> <nobj>)
   (<nobj> ^focus <id>)
}


### write success on superstate

sp {write*nsuccess*superstate*learn-termination-rule
   (state <s> ^name learn-termination-rule
   	      ^nsuccess <ny>
	      ^superstate <ss>)
-->
   (<ss> ^nsuccess <ny>)
}

# ### copy desired
sp {copy*desired*TEMP*OP1
   (state <s> ^action-type composite
   	      ^attribute operator
	      ^superstate <ss>)
   (<ss> ^desired <des>
   	 ^name learn-termination-rule)
-->
   (<s> ^desired <des>)
}

sp {copy*success*TEMP*OP1
   (state <s> ^action-type composite
   	      ^attribute operator
	      ^nsuccess <des>
	      ^desired <des>
	      ^superstate <ss>)
   (<ss> ^name learn-termination-rule)
-->
   (<ss> ^nsuccess <des>)
}
   	      
sp {topstate*elaborate*attend-to-all-scene-changes*true
   (state <s> ^topstate <s>)
-->
   (<s> ^attend-to-all-scene-changes true)
}


sp {topstate*elaborate*scene-changes*change-info
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>)
-->
   (<sc> ^change-info <info>)
   (<info> ^change <new-obj> <stale-obj> <chg-prop> <higher-conf> <diff-best> <stability-timer-satisfied> <unidentified-object>
           ^parameter attend-to-all-scene-changes attend-to-create-delete-only attend-to-properties-only
           ^parameter attend-to-object attend-to-property)
   (<new-obj> ^name new-object
              ^op-name attend-to-new-object)
   (<stale-obj> ^name stale-object 
                ^op-name attend-to-stale-object)
   (<chg-prop> ^name changed-property
               ^op-name attend-to-changed-property)
   (<higher-conf> ^name higher-confidence
                  ^op-name attend-to-higher-confidence)
   (<diff-best> ^name different-best
                ^op-name attend-to-different-best)
   (<stability-timer-satisfied> ^name stability-timer-satisfied
                     	  	    ^op-name evaluate-stability)
   (<unidentified-object> ^name unidentified-object
                          ^op-name evaluate-new-object)
}


#########################################################
# Change: new-object
#   Occurs when a new object comes on the svs link
#########################################################
sp {monitor-scene-changes*elaborate*scene-changes*new-object
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^svs-obj <svs-obj>
         -^wm-obj)
   (<svs-obj> -^stale true)
-->
   (<sc> ^change <change>)
   (<change> ^type new-object
             ^object <obj>)
}

#########################################################
# Change: stale-object
#   Occurs when an object on the svs link becomes stale
#########################################################

sp {monitor-scene-changes*elaborate*scene-changes*stale-object
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^wm-obj <wm-obj>)
   (<wm-obj> ^is-stale true
            -^held true)
-->
   (<sc> ^change <change>)
   (<change> ^type stale-object
             ^object <obj>)
}


sp {topstate*apply*any-op*mark*stale-time
   (state <s> ^topstate <s>
              ^operator <o>
              ^topstate.svs.spatial-scene.child <svs-obj>
              ^object <obj>
              ^io.input-link.time.seconds <sec>)
   (<svs-obj> ^id-int <id>
              ^stale true)
   (<obj> ^id <id>
          -^stale-time)
-->
   (<obj> ^stale-time (+ <sec> 1))
}

sp {topstate*apply*any-op*remove*stale-time
   (state <s> ^topstate <s>
              ^operator <o>
              ^topstate.svs.spatial-scene.child <svs-obj>
              ^object <obj>)
   (<svs-obj> ^id-int <id>
             -^stale true)
   (<obj> ^id <id>
          ^stale-time <time>)
-->
   (<obj> ^stale-time <time> -)
}

sp {topstate*elaborate*object*is-stale
   (state <s> ^topstate <s>
              ^object <obj>
              ^io.input-link.time.seconds <sec>)
   (<obj> ^stale-time <= <sec>)
-->
   (<obj> ^is-stale true)
}

################################################################
# Delete stale objects we never attended to (probably just noise)
################################################################
sp {topstate*apply*any-op*delete*unattended-object
   (state <s> ^topstate <s>
              ^io.output-link <ol>
              ^svs.spatial-scene.child <svs-obj>
             -^object.id <id>)
   (<svs-obj> ^id-int <id>
              ^stale true)
-->
   (<ol> ^modify-scene <ms>)
   (<ms> ^type delete
         ^id <id>)
}

sp {topstate*apply*any-op*delete*uncertain-object
   (state <s> ^topstate <s>
              ^io.output-link <ol>
              ^svs.spatial-scene.child <svs-obj>
              ^object <wm-obj>)
   (<svs-obj> ^id-int <id>
              ^stale true)
   (<wm-obj> ^id <id>
             ^status << uncertain unidentified >>)
-->
   (<ol> ^modify-scene <ms>)
   (<ms> ^type delete
         ^id <id>)
}



############################################################################################
# Change: changed-property
#   Happens when the svs link reports something different about a property than we last noticed
#############################################################################################
sp {monitor-scene-changes*elaborate*scene-changes*changed-property
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^scene-monitor.scene-changes <sc>)
   (<obj> ^property <prop>)
   (<prop> ^wm-prop <wm-prop>
           ^case <> <case-type>)
   (<wm-prop> ^prev-case <case-type>)
-->
   (<sc> ^change <change>)
   (<change> ^type changed-property
             ^object <obj>
             ^property <prop>)
}

###########################################################################
#
# Change: higher-confidence
#   When the confidence for a certain label changes
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*higher-confidence
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>)
   (<prop> ^wm-prop <wm-prop>
           ^case certain
           ^hypothesis <h>)
   (<wm-prop> ^value.confidence <conf>
              ^value.label <label>)
   (<h> ^label <label>
        ^conf {<new-conf> > <conf>})
-->
   (<sc> ^change <change>)
   (<change> ^type higher-confidence
             ^object <obj>
             ^property <prop>
             ^new-confidence <new-conf>)
}

###########################################################################
#
# Change: different-best
#   When a certain label changes values
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*different-best
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^property <prop>)
   (<prop> ^wm-prop <wm-prop>
           ^hypothesis <h>
           ^svs-prop <svs-prop>
           ^case certain)
   (<wm-prop> ^prev-case certain
              ^value.label <label>)
   (<h> ^best true
        ^label <> <label>)
-->
   (<sc> ^change <change>)
   (<change> ^type different-best
             ^object <obj>
             ^property <prop>
             ^best-hyp <h>)
}

###########################################################################
#
# Change: stability-timer-satisfied
#   When the stability timer expires, then we need to check the new object out
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*evaluate-new-object
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^wm-obj <wm-obj>)
   (<wm-obj> ^status uncertain
             ^stability-timer-satisfied true)
-->
   (<sc> ^change <change>)
   (<change> ^type stability-timer-satisfied
             ^object <obj>)
}

###########################################################################
#
# Change: unidentified-object
#   Once we're fairly certain an object exists, we still need to fit it into
#     out understainding of the world (identify it)
#
##########################################################################

sp {monitor-scene-changes*elaborate*scene-changes*unidentified-object
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>)
   (<obj> ^wm-obj <wm-obj>)
   (<wm-obj> ^status unidentified)
-->
   (<sc> ^change <change>)
   (<change> ^type unidentified-object
             ^object <obj>)
}

###########################################################################
#
# Change: shrunken-object
#   If an object's volume drastrically lowers, investigate
#
##########################################################################
sp {monitor-scene-changes*elaborate*scene-changes*shurnken-object
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes <sc>
              ^scene-monitor.object <obj>
              ^agent-params.vol-low-diff-threshold <low>)
   (<obj> ^svs-obj.vol-diff < <low>
          ^wm-obj.id <id>)
-->
   (<sc> ^change <change>)
   (<change> ^type shrunken-object
             ^object <obj>)
   (write |Shrunken Object: | <id>)
}
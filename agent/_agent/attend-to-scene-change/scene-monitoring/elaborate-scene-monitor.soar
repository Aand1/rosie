##########################################################################
#
# scene-monitor: 
#   A topstate set of elaborations that monitor the scene via
#   the svs link and compare it to the current representations 
#   in working memory. If discrepancies are reported they are recorded
#
##########################################################################

# The structure will look as follows
#sp {topstate*elaborate*scene-monitor
#   (state <s> ^topstate <s>
#              ^scene-monitor.object <obj>)
#   (<obj> ^perception-obj <perc-obj>
#          ^wm-obj <wm-obj>
#          ^property <prop>)
#   (<prop> ^name <prop-name>
#           ^type <type>
#           ^svs-prop <svs-prop>
#           ^wm-prop <wm-prop>
#           ^hypothesis <hyp>)
#   (<hyp> ^label <label>
#          ^conf <conf>
#		   ^best true   # If this hypothesis is the best (highest confidence)
#          ^case << none uncertain certain >>)
#-->
#   (<s> ^foo bar)
#}
   
sp {topstate*elaborate*scene-monitor
   (state <s> ^topstate <s>)
-->
   (<s> ^scene-monitor <sm>)
   (<sm> ^scene-changes <sc>)
}

sp {topstate*elaborate*scene-monitor*unprocessed-stale-objects*true
   (state <s> ^topstate <s>
              ^scene-monitor <mon>)
   (<mon> ^scene-changes.change <c>)
   (<c> ^type stale-object
       -^rejected)
-->
   (<mon> ^unprocessed-stale-objects true)
}

sp {topstate*elaborate*scene-monitor*unprocessed-props*true
   (state <s> ^topstate <s>
              ^scene-monitor <mon>)
   (<mon> ^scene-changes.change <c>)
   (<c> ^type << changed-property higher-confidence different-best new-property different-feature-val >>
       -^rejected)
-->
   (<mon> ^unprocessed-props true)
}

sp {topstate*elaborate*scene-monitor*quiescence*true
   (state <s> ^topstate <s>
              ^scene-monitor <mon>)
   (<mon> -^new-object
          -^unprocessed-props true
          -^unprocessed-stale-objects true)
-->
   (<mon> ^quiescence true)
}

sp {topstate*elaborate*scene-monitor*quiescence*false
   (state <s> ^topstate <s>
              ^scene-monitor <mon>)
   (<mon> -^quiescence true)
-->
   (<mon> ^quiescence false)
}

##############################################################
#
# Monitoring new objects
#
##############################################################

sp {topstate*elaborate*scene-monitor*new-object
   (state <s> ^topstate <s>
              ^scene-monitor <sm>
              ^svs.spatial-scene.child <perc-obj>)
   (<sm> -^object.perception-obj <perc-obj>)
   (<perc-obj> -^id << arm world eye >>
                ^object-source perception)
-->
   (<sm> ^new-object.perception-obj <perc-obj>)
}

sp {topstate*elaborate*scene-monitor*new-object*id
   (state <s> ^topstate <s>
              ^scene-monitor.new-object <obj>)
   (<obj> ^perception-obj.id <id>)
-->
   (<obj> ^id (int <id>))
}

sp {topstate*elaborate*scene-monitor*new-object*input-link-obj
   (state <s> ^topstate <s>
              ^scene-monitor.new-object <obj>
              ^io.input-link.objects.object <il-obj>)
   (<obj> ^id <id>)
   (<il-obj> ^id <id>)
-->
   (<obj> ^input-link-obj <il-obj>)
}

##################################################################
#
# Monitoring confirmed objects
#
##################################################################


sp {topstate*elaborate*scene-monitor*object*wm-obj
  (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^topstate.environment-state.objects.object <wm-obj>)
  (<wm-obj> ^id <id>)
  (<obj> ^id <id>)
-->
  (<obj> ^wm-obj <wm-obj>)
}

sp {topstate*elaborate*scene-monitor*object*belief-obj
  (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^svs.spatial-scene.child <belief-obj>)
  (<obj> ^belief-id <id>)
  (<belief-obj> ^id <id>)
-->
  (<obj> ^belief-obj <belief-obj>)
}

sp {topstate*elaborate*scene-monitor*object*perc-obj
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^svs.spatial-scene.child <perc-obj>)
  (<obj> ^perception-id <id>)
   (<perc-obj> ^id <id>)
-->
   (<obj> ^perception-obj <perc-obj>)
}

sp {topstate*elaborate*scene-monitor*object*perception-obj*internal
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj1>
              ^scene-monitor.object <obj2>)
   (<obj1> ^id <id1>
           ^internal-id <id2>)
   (<obj2> ^id <id2>
           ^perception-obj <perc-obj>)
-->
   (<obj1> ^perception-obj <perc-obj>)
}
   

sp {topstate*elaborate*scene-monitor*object*input-link-obj
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^io.input-link.objects.object <il-obj>)
   (<obj> ^id <id>)
   (<il-obj> ^id <id>)
-->
   (<obj> ^input-link-obj <il-obj>)
}

##################################################################
#
# Monitoring non-occluded objects
#
##################################################################
#
#sp {topstate*scene-monitor*apply*anyop*create*update-object-time
#   (state <s> ^topstate <s>
#              ^operator <o>
#              ^scene-monitor.object.differences <diffs>
#              ^io.input-link.time.seconds <t>
#              ^agent-params.update-object-period <period>)
#   (<diffs> -^update-object-time)
#-->
#   (<diffs> ^update-object-time (+ <t> <period>))
#}
#
#sp {topstate*scene-monitor*elaborate*update-object-time-expired
#   (state <s> ^topstate <s>
#              ^scene-monitor.object.differences <diffs>
#              ^io.input-link.time.seconds <t>)
#   (<diffs> ^update-object-time < <t>)
#-->
#   (<diffs> ^update-object-time-expired true)
#}


sp {attend-to-stale-object*propose*check-for-occlusion
   (state <s> ^name attend-to-stale-object
              ^stale-object <obj>)
-->
   (<s> ^operator <o> +)
   (<o> ^name check-for-occlusion
        ^category perception)
}

sp {attend-to-stale-object*apply*check-for-occlusion*create*filter
   (state <s> ^name attend-to-stale-object
              ^operator.name check-for-occlusion
              ^stale-object <wm-obj>
              ^svs <svs>)
   (<wm-obj> ^id <id>)
   (<svs> ^spatial-scene.child <svs-obj>
          ^command <cmd>)
   (<svs-obj> ^id-int <id>
              ^id <svs-id>)
-->
   (<cmd> ^extract_once <occlusion>)
   (<occlusion> ^type occlusion
              ^a <node>)
   (<node> ^type node
               ^id <svs-id>)
   (<s> ^occlusion-filter <occlusion>)
}

sp {attend-to-stale-object*apply*check-for-occlusion*occluded
   (state <s> ^name attend-to-stale-object
              ^operator.name check-for-occlusion
              ^stale-object <wm-obj>
              ^occlusion-filter.result.record.value >= .5)
   (<wm-obj> ^stale-time <time>)
-->
   (<wm-obj> ^stale-time <time> -
             ^stale-time (+ <time> 4))
}

sp {attend-to-stale-object*apply*check-for-occlusion*not-occluded
   (state <s> ^name attend-to-stale-object
              ^operator.name check-for-occlusion
              ^stale-object.id <id>
              ^occlusion-filter.result.record.value < .5
              ^io.output-link <ol>)
-->
   (<ol> ^modify-scene <ms>)
   (<ms> ^type delete
         ^id <id>)
}

sp {attend-to-stale-object*apply*check-for-occlusion*not-occluded*delete
   (state <s> ^name attend-to-stale-object
              ^operator.name check-for-occlusion
              ^stale-object <obj>
              ^occlusion-filter.result.record.value < .5
              ^topstate <top>)
   (<top> ^object <obj>)
-->
   (<top> ^object <obj> -)
}
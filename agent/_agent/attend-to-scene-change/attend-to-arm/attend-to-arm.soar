# Elaborations
sp {attend-to-scene-change*attend-to-arm*elaborate*current-action
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^io.input-link.self.action <action>)
-->
   (<s> ^current-action <action>)
}

sp {attend-to-scene-change*attend-to-arm*elaborate*previous-action
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^topstate.robot-state.arm.action <action>)
-->
   (<s> ^previous-action <action>)
}

sp {attend-to-scene-change*attend-to-arm*elaborate*grabbed-id
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^io.input-link.self.grabbed-object <id>)
-->
   (<s> ^grabbed-id <id>)
}

# Update actions
sp {attend-to-scene-change*apply*attend-to-arm*action*add*current
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^current-action <action>
              ^topstate.robot-state.arm <arm>)
-->
   (<arm> ^action <action>)
}

sp {attend-to-scene-change*apply*attend-to-arm*action*remove*old
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^current-action <action>
              ^topstate.robot-state.arm <arm>)
   (<arm> ^action {<old-action> <> <action>})
-->
   (<arm> ^action <old-action> -)
}

# moving-object - a flag placed onto an object when we start moving it so it won't get deleted (only while arm is moving)
sp {attend-to-scene-change*apply*attend-to-arm*mark*moving-object
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^current-action << grab move drop point >>
              ^previous-action << wait >>
              ^topstate.robot-state.arm <arm>
              ^topstate.object <obj>)
   (<arm> ^moving-object <id>)
   (<obj> ^id <id>)
-->
   (<obj> ^moving-object true)
   (<arm> ^moving-object <id> -)
}

sp {attend-to-scene-change*apply*attend-to-arm*remove*moving-object
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^current-action << wait failure >>
              ^previous-action << grab move drop point >>
              ^topstate.object <obj>)
   (<obj> ^moving-object true)
-->
   (<obj> ^moving-object true -)
}

# grabbed - mark the object as grabbed when it is currently held
sp {attend-to-scene-change*apply*attend-to-arm*mark*grabbed
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^grabbed-id <> -1
              ^topstate.object <obj>
              ^topstate.robot-state.arm <arm>)
   (<obj> ^moving-object true)
-->
   (<arm> ^grabbed <obj>)
}

sp {attend-to-scene-change*apply*attend-to-arm*remove*grabbed
   (state <s> ^name attend-to-scene-change
              ^operator.name attend-to-arm
              ^grabbed-id -1
              ^topstate.robot-state.arm <arm>)
   (<arm> ^grabbed <obj>)
-->
   (<arm> ^grabbed <obj> -)
}

#sp {attend-to-scene-change*apply*attend-to-arm*copy*dropped*object
#   (state <s> ^name attend-to-scene-change
#              ^topstate.scene-monitor.object <obj>
#              ^operator.name attend-to-arm
#              ^grabbed-id -1
#              ^topstate.robot-state.arm.grabbed.id <id>)
#   (<obj> ^monitor-id <id>)
#-->
#   (<obj> ^mark-for-copying true)
#}


sp {attend-to-scene-change*apply*attend-to-arm*grab*move*belief*object
   (state <s> ^name attend-to-scene-change
              ^topstate.agent-params.eval-params.action-model-knowledge true
              ^operator <o>
              ^io.input-link.self.pose <pose>
              ^grabbed-id <> -1
              ^topstate <top>)
   (<pose> ^x <x> ^y <y> ^z <z>)
   (<top> ^svs.command <cmd>
          ^robot-state.arm <arm>
          ^object <obj>)
   (<obj> ^moving-object true
          ^belief-obj.id <bel-id>)
   (<arm> -^grabbed)
-->
   (<cmd> ^property <xp> <yp> <zp>)
   (<xp> ^id <bel-id>
         ^property px
         ^value <x>)
   (<yp> ^id <bel-id>
         ^property py
         ^value <y>)
   (<zp> ^id <bel-id>
         ^property pz
         ^value <z>)
}

sp {evaluate-new-object*propose*setup-merge
   (state <s> ^name evaluate-new-object
              ^matches-known-object <> none
             -^merge-set-up true)
-->
   (<s> ^operator <o> +)
   (<o> ^name setup-merge)
}

sp {evaluate-new-object*apply*setup-merge
   (state <s> ^name evaluate-new-object
              ^operator.name setup-merge
              ^topstate <top>)
-->
   (<s> ^merge-set-up true)
   (<top> ^deleting-object true)
}

sp {evaluate-new-object*propose*merge-objects
   (state <s> ^name evaluate-new-object
              ^merge-set-up
              ^matches-known-object {<original> <> none}
              ^svs-object <copy>)
-->
   (<s> ^operator <o> +)
   (<o> ^name merge-objects
        ^category perception
        ^original <original>
        ^copy <copy>)
}

sp {evaluate-new-object*apply*merge-objects
   (state <s> ^name evaluate-new-object
              ^operator <o>
              ^io.output-link <ol>)
   (<o> ^name merge-objects
        ^original.id <original-id>
        ^copy.id-int <copy-id>)
-->
   (<ol> ^modify-scene <ms>)
   (<ms> ^type merge
         ^original-id <original-id>
         ^copy-id <copy-id>)
}


sp {evaluate-new-object*apply*merge-objects*delete
   (state <s> ^name evaluate-new-object
              ^operator.name merge-objects
              ^wm-object <obj>
              ^topstate <top>)
   (<top> ^object <obj>)
-->
   (<top> ^object <obj> -)
}

sp {evaluate-new-object*apply*merge-objects*monitor*perception
   (state <s> ^name evaluate-new-object
              ^operator <o>
              ^topstate.agent-params.debug-perception true)
   (<o> ^name merge-objects
        ^original.id <orig>
        ^copy.id-int <copy>)
-->
   (write |Merging object | <copy> | into | <orig>)
}

sp {evaluate-new-object*apply*merge-objects*remove*deleting-flag
   (state <s> ^name evaluate-new-object
              ^operator.name merge-objects
              ^topstate <top>)
   (<top> ^deleting-object true)
-->
   (<top> ^deleting-object true -)
}


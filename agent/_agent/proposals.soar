#######################################################
# 
# Propose: interaction 
#
########################################################

sp {topstate*propose*interaction*status-change
   (state <s> ^topstate <s>
              ^interaction.status.<any> <status>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name interaction
        ^type status-change
        ^status-info <status>
        ^status-type <any>)
}

sp {topstate*propose*interaction*interaction-change
   (state <s> ^topstate <s>
              ^interaction.changes.<type> <change>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name interaction
        ^type interaction-change
        ^change-info <change>
        ^change-type <type>)
}
   
#######################################################
# 
# Propose: comprehesion
#
########################################################

sp {topstate*elaborate*non-indexed-param
   (state <s> ^topstate <s>
              ^top-segment.purpose.parameters.indexable <i>)
   (<i> ^lexical
       -^result)
-->
   (<s> ^non-indexed-param true)
}

sp {topstate*propose*comprehension
   (state <s> ^topstate <s>
              ^non-indexed-param true)
-->
   (<s> ^operator <o> +)
   (<o> ^name comprehension)
}


#######################################################
# 
# Propose: satisfy-purpose
#
########################################################

sp {topstate*propose*satisfy-purpose
   (state <s> ^topstate <s>
              ^top-segment.purpose {<p> <> none})
   (<p>
   	-^type goal-description
	-^category goal)
-->
   (<s> ^operator <o> +)
   (<o> ^name satisfy-purpose
        ^purpose <p>)
}


#sp {topstate*propose*action
#   (state <s> ^topstate <s>
#              ^top-segment.purpose <p>)
#   (<p> ^satisfaction.action-event)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name action
#        ^purpose <p>)
#}

sp {topstate*propose*learning*action-type
   (state <s> ^topstate <s>
              ^top-segment.purpose <p>)
   (<p> ^satisfaction.learning-event)
   (<p> ^type << action-command >>)
-->
   (<s> ^operator <o> +)
   (<o> ^name action-learning
        ^purpose <p>)
}

sp {topstate*propose*learning*goal
   (state <s> ^topstate <s>
              ^top-segment.purpose <p>)
   (<p> ^satisfaction.learning-event)
   (<p> ^category goal)
-->
   (<s> ^operator <o> +)
   (<o> ^name action-learning
        ^purpose <p>)
}

sp {topstate*propose*lookup-preposition
   (state <s> ^prepositions.prep.name <name>
              ^superstate nil
              ^topstate.robot-state.arm.action wait
             -^found-prep.type <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name lookup-preposition
        ^kind interpretation
        ^type <name>)
}

sp {topstate*propose*expand-smem-structure*on*purpose
   (state <s> ^topstate <s>
              ^interaction.stack.segment.purpose.parameters.lti-info <info>)
   (<info> ^item <i>)
   (<i> -^expanded)
-->
   (<s> ^operator <o> + =)
   (<o> ^name expand-smem-structure
        ^smem-structure <i>)
   (interrupt)
}


# once everything is done, push the action onto the stack

sp {push-action*propose*complete-push-action
   (state <s> ^name push-action)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-push-action)
}

# push the action on to the stack
sp {push-action*apply*complete-push-action*push
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack <stack>
              ^action-to-push <action>)
   (<stack> ^top <top>)
-->
   (<stack> ^top <top> -
            ^top <action>)
   (<action> ^next none)
   (<top> ^next none -
           ^next <action>)
}

# if the stack was empty, update the bottom
sp {push-action*apply*complete-push-action*change*bottom
  (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack <stack>
              ^action-to-push <action>)
  (<stack> ^bottom none)
-->
  (<stack> ^bottom none -
            ^bottom <action>)
}

# clear the pop command from the changes list
sp {push-action*apply*complete-push-action*clear*changes
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack.changes <changes>
              ^action-to-push <action>)
   (<changes> ^push <action>)
-->
   (<changes> ^push <action> -)
}

sp {push-action*apply*complete-push-action*copy*object*object-set
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack.object-set <set>
              ^action-to-push.execution-operator.<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <obj>)
-->
   (<set> ^object <obj>)
}

sp {push-action*apply*complete-push-action*copy*object*object-set*from*predicate
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack.object-set <set>
              ^action-to-push.execution-operator.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^2 <obj>)
-->
   (<set> ^object <obj>)
}

sp {push-action*apply*complete-push-action*copy*object*object-set*until-clause
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-stack.object-set <set>
              ^action-to-push.execution-operator.until-clause <until>)
   (<until> ^{ <num> << 1 2 >> } <obj>)
-->
   (<set> ^object <obj>)
}

sp {push-action*apply*complete-push-action*ask*remove*previous*answer
   (state <s> ^name push-action
              ^operator.name complete-push-action
              ^action-to-push.execution-operator.action-handle ask1
              ^top-state.world.objects.object <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^modifier1 answer1)
-->
   (<preds> ^modifier1 answer1 -)
}
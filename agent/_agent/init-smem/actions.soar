# LTI's are listed at https://docs.google.com/spreadsheets/d/1SNkkEIQo8q_8AkT6zwGYUDUBvRp2pjSrmTm3FheLR1Y

smem --add {
## put the red block in the pantry.
     (@A1000 ^handle put-down1 ^procedural <proc00> ^type action ^action-type primitive)
     (<proc00> ^op_name initiate-put-down1 ^execution-operator execute-put-down1
               ^arg1 <parg001> ^arg2 <parg002>)
       (<parg001> ^arg-type object ^id <obj-slot001>)
       (<parg002> ^arg-type predicate ^id <pred-slot002> ^2 <obj-slot002>)

## pick up the yellow block.
     (@A1001 ^handle pick-up1 ^procedural <proc01> ^type action ^action-type primitive)
     (<proc01> ^op_name initiate-pick-up1 ^execution-operator execute-pick-up1
               ^arg1 <parg011>)
       (<parg011> ^arg-type object ^id <obj-slot011>)

## point to the yellow block.
     (@A1002 ^handle point1)

### open the pantry/stove.
     (@A1003 ^handle open1 ^procedural <proc03> ^type action ^action-type primitive)
     (<proc03> ^op_name initiate-open1 ^execution-operator execute-open1
               ^arg1 <parg031>)
       (<parg031> ^arg-type object ^id <obj-slot031>)

# close the pantry/stove.
     (@A1004 ^handle close1 ^procedural <proc04> ^type action ^action-type primitive)
     (<proc04> ^op_name initiate-close1 ^execution-operator execute-close1
               ^arg1 <parg041>)
       (<parg041> ^arg-type object ^id <obj-slot041>)

### new wait
#     (@A1007 ^handle wait1 ^linguistic <al10> ^procedural <ap10> ^type action ^action-type primitive)
#     (<al10> ^verb wait ^state-object <s10>) 
#     (<s10> ^object <obj10> ^state <st10>)
#     (<ap10> ^op_name op_wait ^arg1 <parg10>)
#     (<parg10> ^arg <obj10> ^state <st10>)

       
# Unknown version
     (@A1008 ^handle move1)
     
# Version with explicit destination
#     (@A1008 ^handle move1 ^procedural <proc08> ^type action ^action-type composite ^goal <goal08>)
#     (<proc08> ^op_name initiate-move1
#               ^arg1 <parg081> ^arg2 <parg082>)
#       (<parg081> ^arg-type object ^id <obj-slot081>)
#       (<parg082> ^arg-type predicate ^id <pred-slot082> ^2 <obj-slot082>)
#     (<goal08> ^predicate <gpred08>)
#       (<gpred08> ^type relation ^id <pred-slot082> ^1 <obj-slot081> ^2 <obj-slot082>)
         
# Version with implicit destination
#              (@A1008 ^handle move1 ^procedural <proc08> ^type action ^action-type composite ^goal <goal08>)
#     (<proc08> ^op_name initiate-move1
#               ^arg1 <parg081>)
#       (<parg081> ^arg-type object)
#     (<goal08> ^predicate <gpred08>)
#       (<gpred08> ^type relation ^id <rel082> ^1 <parg081> ^2 <obj082>)
#       (<rel082> ^default @R1000)
#       (<obj082> ^default <def082>)
#         (<def082> ^name table)

(@A1009 ^handle store1)
(@A1010 ^handle discard)
(@A1011 ^handle stack)
(@A1012 ^handle cook)
(@A1013 ^handle set)
(@A1014 ^handle clean)


## turn-on 
     (@A1015 ^handle turn-on1 ^procedural <proc15> ^type action ^action-type primitive)
     (<proc15> ^op_name initiate-turn-on1 ^execution-operator execute-turn-on1
               ^arg1 <parg151>)
       (<parg151> ^arg-type object ^id <obj-slot151>)

## turn-off
     (@A1016 ^handle turn-off1 ^procedural <proc16> ^type action ^action-type primitive)
     (<proc16> ^op_name initiate-turn-off1 ^execution-operator execute-turn-off1
               ^arg1 <parg161>)
       (<parg161> ^arg-type object ^id <obj-slot161>)
    
(@A1018 ^handle deliver1 ^procedural <proc18> ^type action ^action-type composite)
(<proc18> ^op_name initiate-deliver1 
          ^arg1 <parg181> ^arg2 <parg182>)
  (<parg181> ^arg-type object ^id <obj-slot181>)
  (<parg182> ^arg-type predicate ^id <pred-slot182> ^2 <obj-slot182>)
    
(@A1019 ^handle fetch1 ^procedural <proc19> ^type action ^action-type composite)
(<proc19> ^op_name initiate-fetch1 
          ^arg1 <parg191>)
  (<parg191> ^arg-type object ^id <obj-slot191>)
      
(@A1020 ^handle find1 ^procedural <proc20> ^type action ^action-type composite)
(<proc20> ^op_name initiate-find1 
          ^arg1 <parg201>)
  (<parg201> ^arg-type object ^id <obj-slot201>)
  
# Interaction

(@A1030 ^handle ask1 ^procedural <proc30> ^type action ^action-type composite)
(<proc30> ^op_name initiate-ask1
          ^arg1 <parg301>)
  (<parg301> ^arg-type object ^id <obj-slot301>)
  
(@A1031 ^handle tell1 ^procedural <proc31> ^type action ^action-type composite)
(<proc31> ^op_name initiate-tell1
          ^arg1 <parg311>)
  (<parg311> ^arg-type object ^id <obj-slot311>)
  
    
(@A1032 ^handle throw1 ^procedural <proc32> ^type action ^action-type composite)
(<proc32> ^op_name initiate-throw1
          ^arg1 <parg321>)
  (<parg321> ^arg-type object ^id <obj-slot321>)

# Ones for mobile robot

(@A1100 ^handle turn1 ^procedural <proc100> ^type action ^action-type primitive)
(<proc100> ^op_name initiate-turn1 ^execution-operator execute-turn1
            ^arg1 <parg1001>)
  (<parg1001> ^arg-type concept ^id <conc-slot1001>)

(@A1103 ^handle go1 ^procedural <proc103> ^type action ^action-type composite)
(<proc103> ^initiation-operator initiate-go1
           ^arg1 <parg1031>)
  (<parg1031> ^arg-type concept ^id <conc-slot1031> ^optional true)

(@A1104 ^handle follow-wall1 ^procedural <proc104> ^type action ^action-type primitive)
(<proc104> ^op_name initiate-follow-wall1 ^execution-operator execute-follow-wall1
           ^arg1 <parg1041>)
  (<parg1041> ^arg-type concept ^id <conc-slot1041>)

(@A1106 ^handle stop1 ^procedural <proc106> ^type action ^action-type primitive)
(<proc106> ^op_name initiate-stop1 ^execution-operator execute-stop1)

(@A1107 ^handle orient1 ^procedural <proc107> ^type action ^action-type primitive)
(<proc107> ^op_name initiate-orient1 ^execution-operator execute-orient1
           ^arg1 <parg1071>)
  (<parg1071> ^arg-type concept ^id <conc-slot1071>)

(@A1108 ^handle go-to-waypoint1 ^procedural <proc108> ^type action ^action-type composite)
(<proc108> ^op_name go-to-waypoint ^arg2 <parg1081>)
  (<parg1081> ^arg-type concept ^id <conc-slot1081>)

(@A1109 ^handle go-to-next-waypoint1 ^procedural <proc109> ^type action ^action-type composite)
(<proc109> ^op_name go-to-next-waypoint ^arg2 <parg1091>)
  (<parg1091> ^arg-type concept ^id <conc-slot1091>)

 (@A1110 ^handle explore1 ^procedural <exp20> ^type action)
 (<exp20> ^op_name initiate-explore1)
 
 (@A1111 ^handle sense1 ^procedural <exp21> ^type action)
 (<exp21> ^op_name initiate-sense1) 
 
 (@A1112 ^handle remember ^procedural <exp22> ^type action)
 (<exp22> ^op_name initiate-remember1) 
  
 (@A1113 ^handle check ^procedural <exp23> ^type action)
 (<exp23> ^op_name initiate-check1)
   
 (@A1114 ^handle recall ^procedural <exp24> ^type action)
 (<exp24> ^op_name initiate-recall1)
  
 (@A1115 ^handle heard ^procedural <exp25> ^type action)
 (<exp25> ^op_name initiate-heard1)
     
 (@A1116 ^handle say ^procedural <exp26> ^type action)
 (<exp26> ^op_name initiate-say1)
 
 (@A1117 ^handle attend ^procedural <exp27> ^type action)
 (<exp27> ^op_name initiate-attend1)
 
 (@A1118 ^handle ignore ^procedural <exp28> ^type action)
 (<exp28> ^op_name initiate-ignore1)
 
 (@A1119 ^handle ignore ^procedural <exp29> ^type action)
 (<exp29> ^op_name initiate-has1)
 
 (@A1120 ^handle ignore ^procedural <exp30> ^type action)
  (<exp30> ^op_name initiate-play1)
 
 (@A1121 ^handle ignore ^procedural <exp31> ^type action)
 (<exp31> ^op_name initiate-win1)
 
 (@A1121 ^handle ignore ^procedural <exp32> ^type action)
 (<exp32> ^op_name initiate-lose1)

}

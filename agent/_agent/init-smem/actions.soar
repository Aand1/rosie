# LTI's are listed at https://docs.google.com/spreadsheets/d/1SNkkEIQo8q_8AkT6zwGYUDUBvRp2pjSrmTm3FheLR1Y

smem --add {
## put the red block in the pantry.
     (@A1000 ^handle put-down1 ^procedural <proc00> ^type action ^action-type primitive)
     (<proc00> ^initiation-operator initiate-put-down1 ^execution-operator execute-put-down1
               ^arg1 <parg001> ^arg2 <parg002>)
       (<parg001> ^arg-type object)
       (<parg002> ^arg-type predicate ^id <rel002> ^2 <obj002>)

## pick up the yellow block.
     (@A1001 ^handle pick-up1 ^procedural <proc01> ^type action ^action-type primitive)
     (<proc01> ^initiation-operator initiate-pick-up1 ^execution-operator execute-pick-up1
               ^arg1 <parg011>)
       (<parg011> ^arg-type object)

## point to the yellow block.
     (@A1002 ^handle point1)

### open the pantry/stove.
     (@A1003 ^handle open1 ^procedural <proc03> ^type action ^action-type primitive)
     (<proc03> ^initiation-operator initiate-open1 ^execution-operator execute-open1
               ^arg1 <parg031>)
       (<parg031> ^arg-type object)

# close the pantry/stove.
     (@A1004 ^handle close1 ^procedural <proc04> ^type action ^action-type primitive)
     (<proc04> ^initiation-operator initiate-close1 ^execution-operator execute-close1
               ^arg1 <parg041>)
       (<parg041> ^arg-type object)

### new wait
#     (@A1007 ^handle wait1 ^linguistic <al10> ^procedural <ap10> ^type action ^action-type primitive)
#     (<al10> ^verb wait ^state-object <s10>) 
#     (<s10> ^object <obj10> ^state <st10>)
#     (<ap10> ^op_name op_wait ^arg1 <parg10>)
#     (<parg10> ^arg <obj10> ^state <st10>)

     (@A1008 ^handle move1 ^procedural <proc08> ^type action ^action-type composite)
     (<proc08> ^initiation-operator initiate-move1
               ^arg1 <parg081> ^arg2 <parg082>)
       (<parg081> ^arg-type object)
       (<parg082> ^arg-type predicate ^id <rel082> ^2 <obj082>)

(@A1009 ^handle store1)
(@A1010 ^handle discard)
(@A1011 ^handle stack)
(@A1012 ^handle cook)
(@A1013 ^handle set)
(@A1014 ^handle clean)



## turn-on 
     (@A1015 ^handle turn-on1 ^procedural <proc15> ^type action ^action-type primitive)
     (<proc15> ^initiation-operator initiate-turn-on1 ^execution-operator execute-turn-on1
               ^arg1 <parg151>)
       (<parg151> ^arg-type object)
## turn-off
     (@A1016 ^handle turn-off1 ^procedural <proc16> ^type action ^action-type primitive)
     (<proc16> ^initiation-operator initiate-turn-off1 ^execution-operator execute-turn-off1
               ^arg1 <parg161>)
       (<parg161> ^arg-type object)
    
(@A1017 ^handle serve)

#(@A1018 ^handle deliver1)
#    
(@A1018 ^handle deliver1 ^procedural <proc18> ^type action ^action-type composite)
(<proc18> ^initiation-operator initiate-deliver1 
          ^arg1 <parg181> ^arg2 <parg182>)
  (<parg181> ^arg-type object)
  (<parg182> ^arg-type predicate)

# Ones for mobile robot

(@A1100 ^handle turn1 ^procedural <proc100> ^type action ^action-type primitive)
(<proc100> ^initiation-operator initiate-turn1 ^execution-operator execute-turn1)

#(@A1101 ^handle turn-right1 ^procedural <proc101> ^type action ^action-type primitive)
#(<proc101> ^initiation-operator initiate-turn-right1 ^execution-operator execute-turn-right1)

#(@A1102 ^handle turn-around1 ^procedural <proc102> ^type action ^action-type primitive)
#(<proc102> ^initiation-operator initiate-turn-around1 ^execution-operator execute-turn-around1)

(@A1103 ^handle go1 ^procedural <proc103> ^type action ^action-type composite)
(<proc103> ^initiation-operator initiate-go1
           ^arg1 <parg1031>)
  (<parg1031> ^arg-type concept ^optional true)

(@A1104 ^handle follow-wall1 ^procedural <proc104> ^type action ^action-type primitive)
(<proc104> ^initiation-operator initiate-follow-wall1 ^execution-operator execute-follow-wall1
           ^arg1 <parg1041>)
  (<parg1041> ^arg-type concept)

(@A1106 ^handle stop1 ^procedural <proc106> ^type action ^action-type primitive)
(<proc106> ^initiation-operator initiate-stop1 ^execution-operator execute-stop1)

(@A1107 ^handle orient1 ^procedural <proc107> ^type action ^action-type primitive)
(<proc107> ^initiation-operator initiate-orient1 ^execution-operator execute-orient1
           ^arg1 <parg1071>)
  (<parg1071> ^arg-type concept)

(@A1108 ^handle go-to-waypoint1 ^procedural <proc108> ^type action ^action-type composite)
(<proc108> ^initiation-operator go-to-waypoint ^arg2 <parg1081>)
  (<parg1081> ^arg-type concept)

(@A1109 ^handle go-to-next-waypoint1 ^procedural <proc109> ^type action ^action-type composite)
(<proc109> ^initiation-operator go-to-next-waypoint ^arg2 <parg1091>)
  (<parg1091> ^arg-type concept)

 (@A1110 ^handle explore1 ^procedural <exp20> ^type action)
 (<exp20> ^initiation-operator initiate-explore1)
 
 (@A1111 ^handle sense1 ^procedural <exp21> ^type action)
 (<exp21> ^initiation-operator initiate-sense1)

}

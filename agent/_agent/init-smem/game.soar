smem --add {
#DO NOT comment out this smem intialization- it is necessary
(<games> ^list games)
#Comment out this to remove all learned games
(<games> ^game tower-of-hanoi ^game frog-puzzle ^game 5-puzzle)
}

# TODO fix up and test these games look at tmp/BOLT code for games

###############################################
# 5 Puzzle
###############################################
smem --add {
 (<G1> ^game-name 5-puzzle ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1>)
 (<ac1> ^action-name slide ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 3)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc>)
 (<conda> ^prep <prep3>)
 (<condb> ^prep <prep5>)
 (<condc> ^prep <prep6> ^prep <prep7>)
 (<prep3> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<prep5> ^name below ^a this ^b INDEF ^negative true ^btype block)
 
 (<prep6> ^name near ^a this ^b 2 ^negative false ^btype location)
 (<prep7> ^name diagonal-with ^a this ^b 2 ^negative true ^btype location)
 (<verbs> ^1 <va>)
 (<va> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
(<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)

 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 10)
(<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4> ^5 <param5>
      ^6 <param6> ^7 <param7> ^8 <param8> ^9 <param9> ^10 <param10>)
(<param1> ^type block)
(<param2> ^type block)
(<param3> ^type block)
(<param4> ^type block)
(<param5> ^type block)
(<param6> ^type location)
(<param7> ^type location)
(<param8> ^type location)
(<param9> ^type location)
(<param10> ^type location)
(<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4> ^5 <cond5> 
      ^6 <cond6> ^7 <cond7> ^8 <cond8> ^9 <cond9> ^10 <cond10>)
      
(<cond1> ^prep <prepa1> ^attribute <atra>)
(<cond2> ^prep <prepb1> ^attribute <atrb>)
(<cond3> ^prep <prepc1> ^attribute <atrc>)
(<cond4> ^prep <prepd1> ^attribute <atrd>)
(<cond5> ^prep <prepe1> ^attribute <atre>)
(<cond6> ^attribute <atra1>)
(<cond7> ^attribute <atrb1>)
(<cond8> ^attribute <atrc1>)
(<cond9> ^attribute <atrd1>)
(<cond10> ^attribute <atre1>)
(<atra> ^attr blue)
(<atrb> ^attr red)
(<atrc> ^attr orange)
(<atrd> ^attr yellow)
(<atre> ^attr green)
(<atra1> ^attr grid-blue)
(<atrb1> ^attr grid-red)
(<atrc1> ^attr grid-orange)
(<atrd1> ^attr grid-yellow)
(<atre1> ^attr grid-green)
(<prepa1> ^name on ^a this ^b 6 ^negative false ^btype location)
(<prepb1> ^name on ^a this ^b 7 ^negative false ^btype location)
(<prepc1> ^name on ^a this ^b 8 ^negative false ^btype location)
(<prepd1> ^name on ^a this ^b 9 ^negative false ^btype location)
(<prepe1> ^name on ^a this ^b 10 ^negative false ^btype location)
}

###############################################
# Towers of Hanoi (in 2D)
###############################################
smem --add {
 (<G1> ^game-name towers-2d ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1> ^2 <ac2>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 6)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc> ^4 <paramd> ^5 <parame> ^6 <paramf>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<paramd> ^type block)
 (<parame> ^type location)
 (<paramf> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc> ^4 <condd> ^5 <conde> ^6 <condf>)
 (<conda> ^prep <prepa1> ^prep <prepa2>)#^attribute <small>)
 (<condb> ^prep <prepb1> ^prep <prepb2>)
 (<condd> ^prep <prepd1>)
# (<small> ^attr red)
 (<condf> ^prep <prepf1> ^prep <prepf2>)
 (<prepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<prepa2> ^name smaller-than ^a this ^b 4 ^negative false ^btype block)
 
 (<prepb1> ^name under ^a this ^b INDEF ^negative true ^btype block)
 (<prepb2> ^name above ^a this ^b 5 ^negative false ^btype location)
 (<prepd1> ^name on ^a this ^b 5 ^negative false ^btype location)
 (<prepf1> ^name above ^a this ^b 3 ^negative false ^btype location)
 (<prepf2> ^name under ^a this ^b INDEF ^negative true ^btype block)
 
 (<verbs> ^1 <va>)
 (<va> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
 (<ac2> ^action-name move ^conditions <xc> ^parameters <xp> ^verbs <verbs2> ^cond-args 4)
 (<xp> ^1 <xparama> ^2 <xparamb> ^3 <xparamc> ^4 <xparamd>)
 (<xparama> ^type block)
 (<xparamb> ^type location)
 (<xparamc> ^type location)
 (<xparamd> ^type location)
 (<xc> ^1 <xconda> ^2 <xcondb> ^3 <xcondc> ^4 <xcondd>)
 (<xconda> ^prep <xprepa1>)
 (<xcondb> ^prep <xprepb1> ^prep <xprepb2>)
 (<xcondd> ^prep <xprepd1> ^prep <xprepd2>)
 (<xprepa1> ^name on ^a this ^b 3 ^negative false ^btype location) 
 
 (<xprepb1> ^name under ^a this ^b INDEF ^negative true ^btype block)
 (<xprepb2> ^name above ^a this ^b INDEF ^negative true ^btype location)
 (<xprepd1> ^name above ^a this ^b 3 ^negative false ^btype location)
 (<xprepd2> ^name under ^a this ^b INDEF ^negative true ^btype block)
 
 (<verbs2> ^1 <va2>)
 (<va2> ^verb-name move ^verb-prep on ^1 1 ^2 2)

   (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 2)
(<pa> ^1 <param1> ^2 <param2>)
(<param1> ^type block)
(<param2> ^type location)
(<co> ^1 <cond1> ^2 <cond2>)  
(<cond1> ^prep <prep11>)
(<cond2> ^attribute <atrc>)
(<atrc> ^attr grid-blue)
(<prep11> ^name on ^a this ^b 2 ^negative false ^btype location)

 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
}


###############################################
# Towers of Hanoi (in 3D)
###############################################
smem --add {
 (<G1> ^game-name towers-3d ^actions <A> ^goals <go> ^failures <fail> ^multiplayer false)
 (<A> ^1 <ac1>)
 (<ac1> ^action-name move ^conditions <xc> ^parameters <xp> ^verbs <verbs2> ^cond-args 2)
 (<xp> ^1 <xparama> ^2 <xparamb>)
 (<xparama> ^type block)
 (<xparamb> ^type location ^type block ^both true)
 (<xc> ^1 <xconda> ^2 <xcondb>)
 (<xconda> ^prep <xprepa1> ^prep <xprepa2>)
 (<xcondb> ^prep <xprepb1>)
 (<xprepa1> ^name below ^a this ^b INDEF ^negative true ^btype block) 
 (<xprepa2> ^name smaller-than ^a this ^b 2 ^negative false ^btype block ^btype location)
 (<xprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 
 (<verbs2> ^1 <va2>)
 (<va2> ^verb-name move ^verb-prep on ^1 1 ^2 2)

#   (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 4)
#(<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4>)
#(<param1> ^type block)
#(<param2> ^type block)
#(<param3> ^type block)
#(<param4> ^type location)
#(<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4>)  
#(<cond1> ^prep <prep11> ^prep <prep12>)
#(<cond2> ^prep <prep21> ^prep <prep22>)
#(<cond3> ^prep <prep31>)
#(<cond4> ^attribute <atrc>)
#(<atrc> ^attr grid-blue)
#(<prep11> ^name on ^a this ^b 2 ^negative false ^btype block)
#(<prep12> ^name smaller-than ^a this ^b 2 ^negative false ^btype block)
#(<prep21> ^name on ^a this ^b 3 ^negative false ^btype block)
#(<prep22> ^name smaller-than ^a this ^b 3 ^negative false ^btype block)
#(<prep31> ^name on ^a this ^b 4 ^negative false ^btype location)
#(<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)

   (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 3)
(<pa> ^1 <param1> ^2 <param2> ^3 <param3>)
(<param1> ^type block)
(<param2> ^type block)
(<param3> ^type location)
(<co> ^1 <cond1> ^2 <cond2> ^3 <cond3>)  
(<cond1> ^prep <prep11>)# ^prep <prep12>)
(<cond2> ^prep <prep21>)
(<cond3> ^attribute <atrc>)
(<atrc> ^attr grid-blue)
(<prep11> ^name on ^a this ^b 2 ^negative false ^btype block)
#(<prep12> ^name smaller-than ^a this ^b 2 ^negative false ^btype block)
(<prep21> ^name on ^a this ^b 3 ^negative false ^btype location)
(<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
#(<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 1)
#(<pa> ^1 <param1>)
#(<param1> ^type location)
#(<co> ^1 <cond1>)  
#(<cond1> ^prep <prep11> ^attribute <atrc>)
#(<atrc> ^attr grid-blue)
#(<prep11> ^name right-of ^a this ^b INDEF ^negative true ^btype block)
#(<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
}

###############################################
# Simple blocks world
###############################################
smem --add {
 (<G1> ^game-name blocks-world ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1>)

 (<ac1> ^action-name move ^conditions <xc> ^parameters <xp> ^verbs <verbs2> ^cond-args 2)
 (<xp> ^1 <xparama> ^2 <xparamb>)
 (<xparama> ^type block)
 (<xparamb> ^type location ^type block ^both true)
 (<xc> ^1 <xconda> ^2 <xcondb>)
 (<xconda> ^prep <xprepa1>)
 (<xcondb> ^prep <xprepb1>)
 (<xprepa1> ^name below ^a this ^b INDEF ^negative true ^btype block) 
 (<xprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 
 (<verbs2> ^1 <va2>)
 (<va2> ^verb-name move ^verb-prep on ^1 1 ^2 2)

   (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 3)
(<pa> ^1 <param1> ^2 <param2> ^3 <param3>)
(<param1> ^type block)
(<param2> ^type block)
(<param3> ^type block)
(<co> ^1 <cond1> ^2 <cond2> ^3 <cond3>)
(<cond1> ^prep <prep11> ^attribute <atra>)
(<cond2> ^prep <prep21> ^attribute <atrb>)
(<cond3> ^attribute <atrc>)
(<atra> ^attr blue)
(<atrb> ^attr red)
(<atrc> ^attr green)
(<prep11> ^name on ^a this ^b 2 ^negative false ^btype block)
(<prep21> ^name on ^a this ^b 3 ^negative false ^btype block)

 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
}

###############################################
# Frog and Toads Puzzle
###############################################
smem --add {
 (<G1> ^game-name frog-puzzle ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1> ^2 <ac2> ^3 <ac3> ^4 <ac4>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 3)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc>)
 (<conda> ^prep <zxprepa1> ^attribute <asdf>)
 (<condb> ^prep <zxprepb1> ^prep <zxprepb2>)
 (<zxprepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<asdf> ^attr red)
 (<zxprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<zxprepb2> ^name right-of ^a this ^b 3 ^negative false ^btype location)
 (<verbs> ^1 <va>)
 (<va> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
 (<ac2> ^action-name move ^conditions <zc> ^parameters <zp> ^verbs <verbs2> ^cond-args 3)
 (<zp> ^1 <zparama> ^2 <zparamb> ^3 <zparamc>)
 (<zparama> ^type block)
 (<zparamb> ^type location)
 (<zparamc> ^type location)
 (<zc> ^1 <zconda> ^2 <zcondb> ^3 <zcondc>)
 (<zconda> ^prep <zprepa1> ^attribute <zasdf>)
 (<zcondb> ^prep <zprepb1> ^prep <zprepb2>)
 (<zprepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<zasdf> ^attr blue)
 (<zprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<zprepb2> ^name left-of ^a this ^b 3 ^negative false ^btype location)
 (<verbs2> ^1 <va2>)
 (<va2> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 (<ac3> ^action-name move ^conditions <vc> ^parameters <vp> ^verbs <verbs3> ^cond-args 4)
 (<vp> ^1 <vparama> ^2 <vparamb> ^3 <vparamc> ^4 <vparamd>)
 (<vparama> ^type block)
 (<vparamb> ^type location)
 (<vparamc> ^type location)
 (<vparamd> ^type location)
 (<vc> ^1 <vconda> ^2 <vcondb> ^3 <vcondc> ^4 <vcondd>)
 (<vconda> ^prep <vprepa1> ^attribute <vasdf>)
 (<vcondb> ^prep <vprepb1> ^prep <vprepb2>)
 (<vcondd> ^prep <vprepd1> ^prep <vprepd2>)
 (<vprepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<vasdf> ^attr red)
 (<vprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<vprepb2> ^name right-of ^a this ^b 4 ^negative false ^btype location)
 (<vprepd1> ^name below ^a this ^b INDEF ^negative false ^btype block)
 (<vprepd2> ^name right-of ^a this ^b 3 ^negative false ^btype location)
 (<verbs3> ^1 <va3>)
 (<va3> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
 (<ac4> ^action-name move ^conditions <tc> ^parameters <tp> ^verbs <verbs4> ^cond-args 4)
 (<tp> ^1 <tparama> ^2 <tparamb> ^3 <tparamc> ^4 <tparamd>)
 (<tparama> ^type block)
 (<tparamb> ^type location)
 (<tparamc> ^type location)
 (<tparamd> ^type location)
 (<tc> ^1 <tconda> ^2 <tcondb> ^3 <tcondc> ^4 <tcondd>)
 (<tconda> ^prep <tprepa1> ^attribute <tasdf>)
 (<tcondb> ^prep <tprepb1> ^prep <tprepb2>)
 (<tcondd> ^prep <tprepd1> ^prep <tprepd2>)
 (<tprepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<tasdf> ^attr blue)
 (<tprepb1> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<tprepb2> ^name left-of ^a this ^b 4 ^negative false ^btype location)
 (<tprepd1> ^name below ^a this ^b INDEF ^negative false ^btype block)
 (<tprepd2> ^name left-of ^a this ^b 3 ^negative false ^btype location)
 (<verbs4> ^1 <va4>)
 (<va4> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
  (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 8)
(<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4>
      ^5 <param5> ^6 <param6> ^7 <param7> ^8 <param8>)
(<param1> ^type block)
(<param2> ^type block)
(<param3> ^type block)
(<param4> ^type block)
(<param5> ^type location)
(<param6> ^type location)
(<param7> ^type location)
(<param8> ^type location)
(<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4> ^5 <cond5> 
      ^6 <cond6> ^7 <cond7> ^8 <cond8>) 
(<cond1> ^prep <prepa1> ^attribute <atra>)
(<cond2> ^prep <prepb1> ^attribute <atrb>)
(<cond3> ^prep <prepc1> ^attribute <atrc>)
(<cond4> ^prep <prepd1> ^attribute <atrd>)
(<cond5> ^attribute <atra1>)
(<cond6> ^attribute <atrb1>)
(<cond7> ^attribute <atrc1>)
(<cond8> ^attribute <atrd1>)
(<atra> ^attr blue)
(<atrb> ^attr blue)
(<atrc> ^attr red)
(<atrd> ^attr red)
(<atra1> ^attr grid-blue)
(<atrb1> ^attr grid-blue)
(<atrc1> ^attr grid-red)
(<atrd1> ^attr grid-red)
(<prepa1> ^name on ^a this ^b 5 ^negative false ^btype location)
(<prepb1> ^name on ^a this ^b 6 ^negative false ^btype location)
(<prepc1> ^name on ^a this ^b 7 ^negative false ^btype location)
(<prepd1> ^name on ^a this ^b 8 ^negative false ^btype location)
}
###############################################
# simple-sokoban
###############################################

smem --add {
 (<G1> ^game-name simple-sokoban ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1> ^2 <ac2>)
 (<ac1> ^action-name slide ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 3)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc>)
 (<conda> ^prep <prep3> ^attribute <ata>)
 (<condb> ^prep <prep5>)
 (<condc> ^prep <prep6> ^prep <prep7>)
 (<ata> ^attr green)
 (<prep3> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<prep5> ^name below ^a this ^b INDEF ^negative true ^btype block)

 (<prep6> ^name near ^a this ^b 2 ^negative false ^btype location)
 (<prep7> ^name diagonal-with ^a this ^b 2 ^negative true ^btype location)
 
 (<verbs> ^1 <va>)
 (<va> ^verb-name move ^verb-prep on ^1 1 ^2 2)
 
 (<ac2> ^action-name push ^conditions <xc> ^parameters <xp> ^verbs <verbs2> ^cond-args 5)
 (<xp> ^1 <xparama> ^2 <xparamb> ^3 <xparamc> ^4 <xparamd> ^5 <xparame>)
 (<xparama> ^type block)
 (<xparamb> ^type location)
 (<xparamc> ^type location)
 (<xparamd> ^type location)
 (<xparame> ^type block)
 (<xc> ^1 <xconda> ^2 <xcondb> ^3 <xcondc> ^4 <xcondd> ^5 <xconde>)
 (<xconda> ^prep <xprep3> ^attribute <xata>)
# (<xcondb> ^prep <xprep5>)
 (<xcondc> ^prep <xprep6> ^prep <xprep6b>)
 (<xcondd> ^prep <xprep7>)
 (<xconde> ^prep <xprep8>)
 (<xata> ^attr green)
 (<xprep3> ^name on ^a this ^b 3 ^negative false ^btype location)
 
# (<xprep6> ^name near ^a this ^b 2 ^negative false ^btype location)
 (<xprep6> ^name linear-with ^a same ^b 2 ^c 4 ^negative false ^btype location)
 (<xprep6b> ^name diagonal-with ^a this ^b 2 ^negative true ^btype location)
 
 (<xprep7> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<xprep8> ^name on ^a this ^b 2 ^negative false ^btype location)
 
 (<verbs2> ^1 <va2> ^2 <va2b>)
 (<va2> ^verb-name move ^verb-prep on ^1 5 ^2 4)
 (<va2b> ^verb-name move ^verb-prep on ^1 1 ^2 2)
    
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
 
 (<go> ^goal-name three-in-arow ^parameters <pa> ^conditions <co> ^goal-cond-args 4)
 (<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4>)
 (<param1> ^type block)
 (<param2> ^type block)
 (<param3> ^type location)
 (<param4> ^type location)
 (<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4>)
 (<cond1> ^prep <prepa1> ^attribute <atra>)
 (<cond2> ^prep <prepb1> ^attribute <atrb>)
 (<cond3> ^attribute <atrc>)
 (<cond4> ^attribute <atrd>)
 (<atra> ^attr blue)
 (<atrb> ^attr red)
 (<atrc> ^attr grid-blue)
 (<atrd> ^attr grid-red)
 
 (<prepa1> ^name on ^a this ^b 3 ^negative false ^btype location)
 (<prepb1> ^name on ^a this ^b 4 ^negative false ^btype location)
}

###############################################
# Tic-Tac-Toe
###############################################
smem --add {
 (<G1> ^game-name tic-tac-toe ^actions <A> ^goals <go> ^failures <fail> ^multiplayer true)
 (<A> ^1 <ac1>)
 
 (<ac1> ^action-name place ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 2)
 (<p> ^1 <parama> ^2 <paramb>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<c> ^1 <conda> ^2 <condb>)
 (<conda> ^prep <prep3> ^prep <prep4> ^attribute <atr3>)
 (<condb> ^prep <prep5>)
 (<atr3> ^attr blue)
 (<prep3> ^name on ^a this ^b INDEF ^negative true ^btype location)
 (<prep4> ^name below ^a this ^b INDEF ^negative true ^btype block)
 (<prep5> ^name below ^a this ^b INDEF ^negative true ^btype block)
 
 (<verbs> ^1 <va>)
 (<va> ^verb-name move ^verb-prep on ^1 1 ^2 2)
    
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
 
 (<go> ^goal-name three-in-arow ^parameters <pa> ^conditions <co> ^goal-cond-args 6)
 (<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4> ^5 <param5> ^6 <param6>)
 (<param1> ^type block)
 (<param2> ^type block)
 (<param3> ^type block)
 (<param4> ^type location)
 (<param5> ^type location)
 (<param6> ^type location)
 (<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4> ^5 <cond5> ^6 <cond6>)
 (<cond1> ^prep <prepa1> ^attribute <atra>)
 (<cond2> ^prep <prepb1> ^attribute <atrb>)
 (<cond3> ^prep <prepc1> ^attribute <atrc>)
 (<cond4> ^prep <prepa2>)
 (<atra> ^attr blue)
 (<atrb> ^attr blue)
 (<atrc> ^attr blue)
 (<prepa1> ^name on ^a this ^b 4 ^negative false ^btype location)
 (<prepb1> ^name on ^a this ^b 5 ^negative false ^btype location)
 (<prepc1> ^name on ^a this ^b 6 ^negative false ^btype location)
 (<prepa2> ^name linear-with ^a same ^b 5 ^c 6 ^negative false ^btype location)
}

###############################################
# N-Queens game (for 3 queens?)
###############################################
smem --add {
 (<G1> ^game-name queen-3 ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs ^cond-args 2)
 (<p> ^1 <parama> ^2 <paramb>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<c> ^1 <conda> ^2 <condb> )
 (<conda> ^prep <prep3>)
 (<condb> ^prep <prep5>)
 (<prep3> ^name in ^a this ^b INDEF ^negative true ^btype location)
 (<prep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 
 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 3)
 (<pa> ^1 <param1> ^2 <param2> ^3 <param3>)
 (<param1> ^type block)
 (<param2> ^type block)
 (<param3> ^type block)
 (<co> ^1 <cond1> ^2 <cond2> ^3 <cond3>)
 (<cond1> ^prep <prepa1>)
 (<cond2> ^prep <prepb1>)
 (<cond3> ^prep <prepc1>)
 (<prepa1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 (<prepb1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 (<prepc1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 5)
 (<paf> ^1 <fparam1> ^2 <fparam2> ^3 <fparam3> ^4 <fparam4> ^5 <fparam5>)
 (<fparam1> ^type block)
 (<fparam2> ^type block)
 (<fparam3> ^type location)
 (<fparam4> ^type location)
 (<fparam5> ^type location)
 (<cof> ^1 <fcond1> ^2 <fcond2> ^3 <fcond3> ^4 <fcond4> ^5 <fcond5>)
 (<fcond1> ^prep <fprepa1>)
 (<fcond2> ^prep <fprepb1>)
 (<fcond3> ^prep <fprepa2>)
 (<fprepa1> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<fprepb1> ^name in ^a this ^b 5 ^negative false ^btype location)
 (<fprepa2> ^name linear-with ^a same ^b 4 ^c 5 ^negative false ^btype location)
}

###############################################
# Peg Solitaire
###############################################
smem --add {
 (<G1> ^game-name peg-sol ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1>)
 
 (<ac1> ^action-name place ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 6)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc> ^4 <paramd> ^5 <parame> ^6 <paramf>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<paramd> ^type location)
 (<parame> ^type block)
 (<paramf> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc> ^4 <condd> ^5 <conde> ^6 <condf>)
 (<conda> ^prep <prep1>)
 (<condb> ^prep <prep2>)
 (<condc> ^prep <prep3> ^prep <prep3b>)
 (<condd> ^prep <prep4> ^prep <prep4b>)
 
 (<condf> ^attribute <attr1>)
 (<attr1> ^attr home)
 (<prep1> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<prep2> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prep3> ^name linear-with ^a same ^b 4 ^c 2 ^negative false ^btype location)
 (<prep3b> ^name near ^a this ^b 4 ^negative false ^btype location)
 (<prep4> ^name in ^a this ^b 5 ^negative false ^btype block)
 (<prep4b> ^name near ^a this ^b 2 ^negative false ^btype location)
 
 (<verbs> ^1 <va> ^2 <vb>)
 (<va> ^verb-name move ^verb-prep in ^1 1 ^2 2)
 (<vb> ^verb-name move ^verb-prep in ^1 5 ^2 6)
 
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
 
  (<go> ^goal-name most-removed ^parameters <pa> ^conditions <co> ^goal-cond-args 9)
 (<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4> ^5 <param5>
      ^6 <param6> ^7 <param7> ^8 <param8> ^9 <param9>)
 (<param1> ^type location)
 (<param2> ^type location)
 (<param3> ^type location)
 (<param4> ^type location)
 (<param5> ^type location)
 (<param6> ^type location)
 (<param7> ^type location)
 (<param8> ^type location)
 (<param9> ^type location)
 (<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4> ^5 <cond5> 
      ^6 <cond6> ^7 <cond7> ^8 <cond8> ^9 <cond9>)
 (<cond1> ^prep <prepa1> ^attribute <at1>)
 (<cond2> ^prep <prepb1> ^attribute <at2>)
 (<cond3> ^prep <prepc1> ^attribute <at3>)
 (<cond4> ^prep <prepd1> ^attribute <at4>)
 (<cond5> ^prep <prepe1> ^attribute <at5>)
 (<cond6> ^prep <prepf1> ^attribute <at6>)
 (<cond7> ^prep <prepg1> ^attribute <at7>)
 (<cond8> ^prep <preph1> ^attribute <at8>)
 (<cond9> ^prep <prepi1> ^attribute <at9>)
 (<at1> ^attr grid1)
 (<at2> ^attr grid2)
 (<at3> ^attr grid3)
 (<at4> ^attr grid4)
 (<at5> ^attr grid-yellow)
 (<at6> ^attr grid5)
 (<at7> ^attr grid6)
 (<at8> ^attr grid7)
 (<at9> ^attr grid10)
 (<prepa1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepb1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepc1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepd1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepe1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepf1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepg1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<preph1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prepi1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 
}

###############################################
# N-Queens game (for 4 queens)
###############################################
smem --add {
 (<G1> ^game-name queen-4 ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs ^cond-args 2)
 (<p> ^1 <parama> ^2 <paramb>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<c> ^1 <conda> ^2 <condb> )
 (<conda> ^prep <prep3>)
 (<condb> ^prep <prep5> ^attribute <atra>)
 (<atra> ^attr grid-green)
 (<prep3> ^name in ^a this ^b INDEF ^negative true ^btype location)
 (<prep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 
 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 4)
 (<pa> ^1 <param1> ^2 <param2> ^3 <param3> ^4 <param4>)
 (<param1> ^type block)
 (<param2> ^type block)
 (<param3> ^type block)
 (<param4> ^type block)
 (<co> ^1 <cond1> ^2 <cond2> ^3 <cond3> ^4 <cond4>)
 (<cond1> ^prep <prepa1>)
 (<cond2> ^prep <prepb1>)
 (<cond3> ^prep <prepc1>)
 (<cond4> ^prep <prepd1>)
 (<prepa1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 (<prepb1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 (<prepc1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 (<prepd1> ^name in ^a this ^b INDEF ^negative false ^btype location)
 
 (<fail> ^failure-name attack ^parameters <paf> ^conditions <cof> ^failure-cond-args 5)
 (<paf> ^1 <fparam1> ^2 <fparam2> ^3 <fparam3> ^4 <fparam4> ^5 <fparam5>)
 (<fparam1> ^type block)
 (<fparam2> ^type block)
 (<fparam3> ^type location)
 (<fparam4> ^type location)
 (<fparam5> ^type location)
 (<cof> ^1 <fcond1> ^2 <fcond2> ^3 <fcond3> ^4 <fcond4> ^5 <fcond5>)
 (<fcond1> ^prep <fprepa1>)
 (<fcond2> ^prep <fprepb1>)
 (<fcond3> ^prep <fprepa2>)
 (<fprepa1> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<fprepb1> ^name in ^a this ^b 5 ^negative false ^btype location)
 (<fprepa2> ^name linear-with ^a same ^b 4 ^c 5 ^negative false ^btype location)
}


###############################################
# Knight Escape (atypical game)
###############################################
smem --add {
 (<G1> ^game-name knight-escape ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1> ^2 <ac2>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs ^cond-args 3)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc>)
 (<conda> ^prep <prep3>)
 (<condb> ^prep <prep5>)
 (<condc> ^prep <prep7>)
 (<prep3> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<prep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prep7> ^name aligned-with ^a this ^b 2 ^negative false ^btype location)
 
 (<ac2> ^action-name move ^conditions <xc> ^parameters <xp> ^verbs ^cond-args 3)
 (<xp> ^1 <xparama> ^2 <xparamb> ^3 <xparamc>)
 (<xparama> ^type block)
 (<xparamb> ^type location)
 (<xparamc> ^type location)
 (<xc> ^1 <xconda> ^2 <xcondb> ^3 <xcondc>)
 (<xconda> ^prep <xprep3>)
 (<xcondb> ^prep <xprep5>)
 (<xcondc> ^prep <xprep7>)
 (<xatra> ^attr grid-green)
 (<xprep3> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<xprep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<xprep7> ^name next-to ^a this ^b 2 ^negative false ^btype location)
 
 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 2)
 (<pa> ^1 <param1> ^2 <param2>)
 (<param1> ^type block)
 (<param2> ^type location)
 (<co> ^1 <cond1> ^2 <cond2>)
 (<cond1> ^prep <prepa1>)
 (<cond2> ^attribute <att>)
 (<att> ^attr home)
 (<prepa1> ^name in ^a this ^b 2 ^negative false ^btype location)
 
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
}

###############################################
# Knight's Tour
###############################################
smem --add {
 (<G1> ^game-name knights-tour ^actions <A> ^goals <go> ^failures <fail>)
 (<A> ^1 <ac1> ^2 <ac2>)
 
 (<ac1> ^action-name move ^conditions <c> ^parameters <p> ^verbs <verbs> ^cond-args 5)
 (<p> ^1 <parama> ^2 <paramb> ^3 <paramc> ^4 <paramd> ^5 <parame>)
 (<parama> ^type block)
 (<paramb> ^type location)
 (<paramc> ^type location)
 (<paramd> ^type block)
 (<parame> ^type location)
 (<c> ^1 <conda> ^2 <condb> ^3 <condc> ^4 <condd> ^5 <conde>)
 (<conda> ^prep <prep3> ^attribute <at>)
 (<condb> ^prep <prep5>)
 (<condc> ^prep <prep7>)
 (<condd> ^prep <prep8> ^type indiff ^attribute <attrb>)
 (<conde> ^attribute <attra>)
 (<prep3> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<prep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<prep7> ^name aligned-with ^a this ^b 2 ^negative false ^btype location)
 (<prep8> ^name in ^a this ^b 5 ^negative false ^btype location)
 (<attra> ^attr home)
 (<at> ^attr green)
 (<attrb> ^attr blue)
 
 (<verbs> ^1 <va> ^2 <vb>)
 (<va> ^verb-name move ^verb-prep in ^1 1 ^2 2)
 (<vb> ^verb-name move ^verb-prep in ^1 4 ^2 3)
 
 (<ac2> ^action-name move ^conditions <xc> ^parameters <xp> ^verbs <verbs2> ^cond-args 5)
 (<xp> ^1 <xparama> ^2 <xparamb> ^3 <xparamc> ^4 <xparamd> ^5 <xparame>)
 (<xparama> ^type block)
 (<xparamb> ^type location)
 (<xparamc> ^type location)
 (<xparamd> ^type block)
 (<xparame> ^type location)
 (<xc> ^1 <xconda> ^2 <xcondb> ^3 <xcondc> ^4 <xcondd> ^5 <xconde>)
 (<xconda> ^prep <xprep3> ^attribute <xat>)
 (<xcondb> ^prep <xprep5>)
 (<xcondc> ^prep <xprep7>)
 (<xcondd> ^prep <xprep8> ^type indiff ^attribute <xattrb>)
 (<xconde> ^attribute <xattra>)
 (<xprep3> ^name in ^a this ^b 3 ^negative false ^btype location)
 (<xprep5> ^name in ^a this ^b INDEF ^negative true ^btype block)
 (<xprep7> ^name next-to ^a this ^b 2 ^negative false ^btype location)
 (<xprep8> ^name in ^a this ^b 5 ^negative false ^btype location)
 (<xattra> ^attr home)
 (<xat> ^attr green)
 (<xattrb> ^attr blue)
 
 (<verbs2> ^1 <va2> ^2 <vb2>)
 (<va2> ^verb-name move ^verb-prep in ^1 1 ^2 2)
 (<vb2> ^verb-name move ^verb-prep in ^1 4 ^2 3)
 
 (<go> ^parameters <pa> ^conditions <co> ^goal-cond-args 2)
 (<pa> ^1 <param1> ^2 <param2>)
 (<param1> ^type block)
 (<param2> ^type location)
 (<co> ^1 <cond1> ^2 <cond2>)
 (<cond1> ^attribute <att1>)
 (<cond2> ^attribute <att> ^prep <prepa1>)
 (<att> ^attr home)
 (<att1> ^attr green)
 (<prepa1> ^name in ^a this ^b INDEF ^negative true ^btype block)
 
 (<fail> ^parameters <paf> ^conditions <cof> ^failure-cond-args 0)
}
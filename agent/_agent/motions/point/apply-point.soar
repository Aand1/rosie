# To point, we want to put the hand "above" an object
# Find the "above" preposition in smem
sp {point*propose*lookup-preposition*above
   (state <s> ^name point
              ^pointed-object
             -^found-prep)
-->
   (<s> ^operator <o> + =) # AM: Indifferent pref
   (<o> ^name lookup-preposition
        ^type above)
}

# After we have found the above preposition from smem, project
# it so that we get an xyz point to move the arm to
# HACK for now: chooses a second object <obja> randomly from
# the other blocks; this should really be the arm
sp {point*propose*find-projection
   (state <s> ^name point
              ^pointed-object <obj>
              ^found-prep <prep>
              ^topstate <ts>)
   (<ts> -^projection-result)
   (<obj> ^category block)
   #(<prep> ^predicate <pred>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name project-hand
        #^category svs
        ^object <obj>
    	^preposition <prep>
        ^expire-time 1)
}

sp {point*propose*remove-expired-projection
   (state <s> ^name point
              ^io.input-link.time.seconds <time>
              ^topstate <ts>)
   (<ts> ^projection-result <res>)
   (<res> ^expire-time <= <time>)
-->
   (<s> ^operator <o> + >, =)
   (<o> ^name remove-expired-projection)
}

sp {point*apply*remove-expired-projection
   (state <s> ^name point
              ^topstate <ts>
              ^operator.name remove-expired-projection)
   (<ts> ^projection-result <res>
         ^svs.command <comm>)
   (<res> ^x <x> ^y <y> ^z <z>)
   (<comm> ^project <proj>)
   (<proj> ^result <res2>)
   (<res2> ^x <x> ^y <y> ^z <z>)
-->
   (<ts> ^projection-result <res> -)
   (<comm> ^project <proj> -)   
}

sp {point*propose*move-arm
   (state <s> ^name point
              ^topstate.projection-result <res>)
   (<res> ^x <x> ^y <y> ^z <z>)
-->
   (<s> ^operator <op> + <, =)
   (<op> ^name move-arm 
	     ^actions.move.pose <pose>)
   (<pose> ^x <x> ^y <y> ^z <z>)
}
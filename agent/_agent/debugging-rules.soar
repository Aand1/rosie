sp {top-state*elaborate*agent-params*debug
   (state <s> ^top-state <s>
              ^agent-params <params>)
-->
   (<params> ^debug-mode off)				# If on, additional print statements will be done
   (<params> ^debug-perception true)		# If true, will print debug statements when events occur
   (<params> ^debug-op-ties false)
   (<params> ^debug-arm true)
   (<params> ^debug-ids on)
   (<params> ^enable-interrupts false)
}


#sp {anystate*operator-tie*action*interrupt
#   (state <s> ^top-state <top>
#              ^impasse tie
#              ^problemspace action)
#   (<top> ^agent-params.debug-mode on
#          ^agent-params.debug-op-ties true)
#-->
#   (interrupt)
#}

sp {anystate*operator-tie*print*operators
   (state <s> ^type state
              ^impasse tie
              ^item.name <name>
              ^top-state <top>)
   (<top> ^agent-params.debug-mode on
          ^agent-params.debug-op-ties true)
-->
   #(write |Operator tie on | <s> |: '| <name> |'| (crlf))
}

sp {anystate*print*self*info
   (state <s> ^top-state <top>
              ^io.input-link.self <self>
              ^agent-params.debug-mode on
              ^agent-params.debug-arm true)
   (<self> ^action <a>
           ^prev-action <pa>
           ^grabbed-object <id>)
-->
   #(write |Cur Action :| <a> (crlf))
   #(write |Prev Action:| <pa> (crlf))
   #(write |Holding    :| <id> (crlf))
}

# Write messages when an svs filter or command fails

sp {top-state*apply*any-op*report*svs*filter*errors
   (state <s> ^top-state <s>
              ^agent-params.debug-mode on
              ^svs.command <cmd>)
   (<cmd> ^{ << extract extract_once >> } <val>)
   (<val> ^type <type>
          ^status {<status> <> success})
-->
   #(write |Filter Error (| <type> |): | <status> (crlf))
}

sp {top-state*apply*any-op*report*svs*command*errors
   (state <s> ^top-state <s>
              ^agent-params.debug-mode on
              ^svs.command <cmd>)
   (<cmd> ^{<type> <> extract <> extract_once } <val>)
   (<val> ^status {<status> <> success})
-->
   #(write |Command Error (| <type> |): | <status> (crlf))
}

#### Use Debug Id's ####
# These are little handles for specific identifiers that aid in quick printing during debugging
# Will elaborate an (<id> ^debug-id |id-string|), which then you can easily find through a print command:
# print (* ^debug-id |id-string|), which you can alias to further improve the ease of use

alias ppmon print (* ^debug-id percmon)
alias pobjinfo print (* ^debug-id objmon)
sp {top-state*elaborate*debug-ids*perception-monitor
   (state <s> ^superstate nil
              ^agent-params.debug-ids on
              ^perception-monitor <pmon>)
   (<pmon> ^object-monitor <omon>
           ^predicate-monitor <prmon>)
-->
   (<pmon> ^debug-id percmon)
   (<omon> ^debug-id objmon)
   (<prmon> ^debug-id predmon)
}
   
alias pworld print (* ^debug-id world)
alias pobjs print (* ^debug-id objs)
alias ppreds print (* ^debug-id preds)
alias probot print (* ^debug-id rob)           
sp {top-state*elaborate*debug-ids*world
   (state <s> ^superstate nil
              ^agent-params.debug-ids on
              ^world <w>)
   (<w> ^objects <objs>
        ^robot <rob>
        ^predicates <preds>)
-->
   (<w> ^debug-id world)
   (<objs> ^debug-id objs)
   (<rob> ^debug-id rob)
   (<preds> ^debug-id preds)
}
   

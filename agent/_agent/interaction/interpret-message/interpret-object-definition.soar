#################################################################
#
# interpret-object-definition
#   Occurs when the instructor says 'This one'
#
###################################################################

#######
# OPERATOR PROPOSAL
#######
sp {interpret-message*propose*interpret-object-definition
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^message-type object-definition
         -^interpreted true)
-->
   (<s> ^operator <o> +)
   (<o> ^name interpret-object-definition
        ^message <msg>)
}

######
# OPERATOR ELABORATIONS
######

# object: REQUIRED - the object being described
sp {interpret-message*elaborate*interpret-object-definition*object
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-definition
        ^message.arg1 <obj>
       -^goal <obj>
       -^robot <obj>)
   (<obj> ^item-type object)
-->
   (<o> ^object <obj>)
}

#####
# OPERATOR APPLICATION
#####

sp {interpret-message*apply*interpret-object-definition*answer*to*ask*add*answer*predicate
   (state <s> ^name interpret-message
              ^operator <o>
              ^instructor-message <msg>
              ^top-state.interaction.stack.segment.purpose.type wait-for-answer
              ^top-state.action-stack.top <top>)
   (<o> ^name interpret-object-definition
        ^object <obj>)
   (<top> ^execution-operator.action-handle ask1)
-->
   (<top> ^answer <obj>)
   (<s> ^mark-interpreted <msg>)
}

sp {interpret-message*apply*interpret-object-definition*find-missing-object*mark*found-as
   (state <s> ^name interpret-message
              ^operator <o>
              ^instructor-message <msg>
              ^top-state.interaction.stack.segment.purpose <p>)
   (<o> ^name interpret-object-definition
        ^object <obj>)
   (<p> ^type find-missing-object
        ^missing-object <missing>)
-->
   (<s> ^mark-interpreted <msg>)
   (<missing> ^found-as <obj>)
}
 
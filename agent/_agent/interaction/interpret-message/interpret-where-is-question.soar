###################################################################
#
# interpret-where-is-question
# - Description of message here
#
###################################################################

#######
# OPERATOR PROPOSAL
#######
sp {interpret-message*propose*interpret-where-is-question
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^message-type where-is-question
         -^interpreted true)
-->
   (<s> ^operator <o> +)
   (<o> ^name interpret-where-is-question
        ^message <msg>)
}

######
# OPERATOR ELABORATIONS
######

# Elaborate useful information from the message onto the operator

sp {interpret-message*elaborate*interpret-where-is-question*indicated-object
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-where-is-question
        ^message.indicated-object <obj>)
-->
   (<o> ^indicated-object <obj>)
}

#####
# OPERATOR APPLICATION
#####

# Mark the message as interpreted (retracts operator)
sp {interpret-message*apply*interpret-where-is-question*mark*interpreted
   (state <s> ^name interpret-message
              ^operator <o>
              ^quiescence t)
   (<o> ^name interpret-where-is-question
        ^message <msg>)
-->
   (<msg> ^interpreted true)
}

# Example of creating a new segment
sp {interpret-message*apply*interpret-where-is-question*create*segment
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-where-is-question)
-->
   (<s> ^new-segment-info <info>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type describe-location
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^dialog-event.type describe)
}


              
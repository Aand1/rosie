###################################################################
#
# interpret-attend-list
#   Occurs when 
#
###################################################################

sp {interpret-message*propose*interpret-done
   (state <s> ^name interpret-message
              ^instructor-message <msg>
              ^top-state.dialog-context.modified true
              ^top-state.dialog-context.type game-learning)
   (<msg> ^message-type finished
          -^interpreted true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name interpret-done)
}
#handle extra modify at end?
sp {interpret-message*apply*interpret-done*create*segment*finished-goal-demo
   (state <s> ^name interpret-message
              ^top-state.dialog-context.goal-state <gs>
              ^top-state.dialog-context.modified true
              ^instructor-message <msg>
              ^operator <o>)
   (<o> ^name interpret-done)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type learn-goal-final-state
        ^parameters.message <msg>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type game)
}

sp {interpret-message*apply*interpret-attend-list*create*segment*modify-attend-list
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-attend-list
        ^message <msg>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type modify-attend-list
        ^parameters.message <msg>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type game)
}

sp {interpret-message*apply*interpret-ignore-list*create*segment*modify-ignore-list
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-ignore-list
        ^message <msg>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type modify-ignore-list
        ^parameters.message <msg>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type game)
}


##TODO need this rule?
#sp {interpret-message*apply*interpret-conditional-predicate*learn-goal-definition*terminate*segment
#   (state <s> ^name interpret-message
#              ^operator <o>
#	      		^current-purpose.satisfaction.dialog-event <de>)
#   (<o> ^name interpret-conditional-predicate
#        ^purpose learn-predicate-definition)
#   (<de> ^type goal-description
#         ^originator instructor)
#-->
#   (<s> ^terminate-segment true)
#}
#
##TODO need this rule?
#sp {interpret-message*apply*interpret-conditional-predicate*remove*unknown-word*failure
#   (state <s> ^name interpret-message
#              ^operator <o>
#              ^top-state.interaction.status <status>)
#   (<o> ^name interpret-conditional-predicate
#        ^predicate.spelling <word>)
#   (<status> ^failure <f>)
#   (<f> ^type unknown-word
#        ^word <word>)
#-->
#   (<status> ^failure <f> -)
#}

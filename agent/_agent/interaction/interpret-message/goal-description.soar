#### propose interpret goal-description ##########
sp {interpret-message*propose*goal-description
   (state <s> ^name interpret-message
   	      ^instructor-message <msg>
	      -^new-segment-info)
   (<msg> ^type goal-relation-message)
-->
   (<s> ^operator <o> +) 
   (<o> ^name goal-description
   	^message <msg>)
}

sp {interpret-message*apply*goal-description
   (state <s> ^name interpret-message
   	      ^operator <o>
              -^topstate.current-game.learning.type game-params #JK language hack for describing goal name
	      ^topstate.interaction.stack.segment.purpose.reason <res>)
   (<o> ^name goal-description
   	^message.information <vcomm>)
   (<res> ^type unknown-goal
   	  ^details <det>)
-->
   (<s> ^new-segment-info <info>) 
   (<info> ^purpose <p>)
   (<p> ^type goal-learning
   	^parameters <params>
	^satisfaction <sat>
	^details <det>
	^category goal)
   (<sat> ^learning-event <le>)
   (<le> ^type <vcomm>)
   (<params> ^indexable <i>)
   (<i> ^type goal-description
   	^lexical <vcomm>)
}

sp {interpret-message*apply*goal-revision
   (state <s> ^name interpret-message
   	      ^operator <o>
	      -^topstate.current-game.learning.type game-params #JK language hack for describing goal name
	      ^topstate.interaction.stack.segment.purpose.reason <res>)
   (<o> ^name goal-description
   	^message.information <vcomm>)
   (<res> ^type overspecific-definition
   	  ^details <det>)
-->
   (<s> ^new-segment-info <info>)
   (<info> ^purpose <p>)
   (<p> ^type goal-revision
   	^parameters <params>
	^satisfaction <sat>
	^details <det>
	^category goal)
   (<sat> ^learning-event <le>)
   (<le> ^type <vcomm>)
   (<params> ^indexable <i>)
   (<i> ^type goal-description
   	^lexical <vcomm>)
}
   	
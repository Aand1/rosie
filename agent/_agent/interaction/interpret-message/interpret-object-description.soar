###################################################################
#
# interpret-object-description
#   Occurs when the intructor wishes to give additional information about an object
#   Construction: *-DP-is-ADJ/DP/PP-T
#   	E.g. 'The ball is red', 'The ball is a sphere', 'The ball is in the pantry'
#   Construction: *-This-is-DP-T
#   	E.g. 'This is a large red block', 'This is to the right of the sphere'
#
###################################################################

#######
# OPERATOR PROPOSAL
#######
sp {interpret-message*propose*interpret-object-description
   (state <s> ^name interpret-message
              ^instructor-message <msg>)
   (<msg> ^message-type object-description
         -^interpreted true)
-->
   (<s> ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message <msg>)
}

######
# OPERATOR ELABORATIONS
######

# Elaborate useful information from the message onto the operator

# robot: OPTIONAL - the robot is the object
sp {interpret-message*elaborate*interpret-object-description*robot
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message.arg1 <obj>)
   (<obj> ^id rosie)
-->
   (<o> ^robot <obj>)
}

# object: REQUIRED - the object being described
sp {interpret-message*elaborate*interpret-object-description*object
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message.arg1 <obj>)
   (<obj> ^predicates <preds>)
-->
   (<o> ^object <obj>)
}

# predicate: OPTIONAL - tells something that is true about the object (e.g. color=red)
sp {interpret-message*elaborate*interpret-object-description*predicate
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message.predicate <pred>)
-->
   (<o> ^predicate <pred>)
}

# relation: OPTIONAL - how the object is in relation to another
sp {interpret-message*elaborate*interpret-object-description*relation
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message.relation <rel>)
-->
   (<o> ^relation <rel>)
}

sp {interpret-message*elaborate*interpret-object-description*arg2
   (state <s> ^name interpret-message
              ^operator <o> +)
   (<o> ^name interpret-object-description
        ^message.arg2 <rel>)
-->
   (<o> ^relation <rel>)
}

#####
# OPERATOR APPLICATION
#####

# Normal occurence of object-description
#   Purpose is to learn about a predicate for an example object
sp {interpret-message*apply*interpret-object-description*create*segment*train-on-object
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-object-description
        ^message <msg>
        ^object <obj>
       -^relation)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type train-on-object 
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type object)
   (<params> ^object <obj>)
}

sp {interpret-message*apply*interpret-object-description*copy*predicates
   (state <s> ^name interpret-message
              ^operator <o>
              ^new-segment-info.purpose.parameters <params>)
   (<o> ^name interpret-object-description
       -^relation
        ^predicate.id <pred>)
-->
   (<params> ^predicate <pred>)
}

# Object description is a relationship (preposition) example between two objects
sp {interpret-message*apply*interpret-object-description*create*segment*teach-relation
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-object-description
        ^message <msg>
        ^object <obj>
       -^predicate #only handle single for now
        ^relation <rel>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type teach-relation
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type relation)
   (<params> ^object <obj>
             ^relation <rel>)
}

sp {interpret-message*apply*interpret-object-description*create*segment*teach-location
   (state <s> ^name interpret-message
              ^operator <o>)
   (<o> ^name interpret-object-description
        ^robot <robot>
        ^message <msg>
        ^relation.arg2 <loc>)
-->
   (<s> ^new-segment-info <info>
        ^mark-interpreted <msg>)
   (<info> ^purpose <p>
           ^originator instructor)
   (<p> ^type teach-location
        ^parameters <params>
        ^satisfaction <sat>)
   (<sat> ^learning-event.type location)
   (<params> ^location-id <loc>)
}

sp {interpret-message*apply*interpret-object-description*remove*unknown-word*failure
   (state <s> ^name interpret-message
              ^operator <o>
              ^top-state.interaction.status <status>)
   (<o> ^name interpret-object-description
        ^predicate.spelling <word>)
   (<status> ^failure <f>)
   (<f> ^type unknown-word
        ^word <word>)
-->
   (<status> ^failure <f> -)
}
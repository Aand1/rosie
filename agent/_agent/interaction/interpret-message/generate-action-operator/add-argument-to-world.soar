##!
# @file
#
# @created mininger 20151008

sp {generate-action-operator*propose*add-argument-to-world*object*depth1
    (state <s> ^name generate-action-operator
               ^action-id.procedural.<arg-name> <parg>
               ^action-operator.<arg-name> <arg>
               ^top-state.world.objects <ts-objs>)
    (<parg> ^arg-type object
            ^arg-status real)
    (<arg> ^id <obj>)
    (<ts-objs> -^object <obj>)
-->
    (<s> ^operator <o> + =)
    (<o> ^name add-argument-to-world
         ^arg-type object
         ^id <obj>)
}

sp {generate-action-operator*propose*add-argument-to-world*object*depth2
    (state <s> ^name generate-action-operator
               ^action-id.procedural.<arg-name> <parg>
               ^action-operator.<arg-name> <arg>
               ^top-state.world.objects <ts-objs>)
    (<parg> ^arg-type predicate
            ^arg-status real)
    (<arg> ^{ << 1 2 3 4 5 >> } <obj>)
    (<ts-objs> -^object <obj>)
-->
    (<s> ^operator <o> + =)
    (<o> ^name add-argument-to-world
         ^arg-type object
         ^id <obj>)
}
    
sp {generate-action-operator*propose*add-argument-to-world*predicate*from
    (state <s> ^name generate-action-operator
               ^action-id.procedural.<arg2-name> <parg2>
               ^action-operator.<arg2-name> <arg2>
               ^action-operator.<arg1-name> <arg1>
               ^top-state.world.predicates.predicate <ts-pred>)
    (<parg2> ^arg-type predicate
             ^arg-status real)
    (<arg2> ^handle in1
            ^2 <obj2>)
    (<arg1> ^arg-type object
            ^id <obj1>)
    (<ts-pred> ^handle in1)
    -{(<ts-pred> ^instance <i>)
      (<i> ^1 <obj1> ^2 <obj2>)}
-->
    (<s> ^operator <o> + =)
    (<o> ^name add-argument-to-world
         ^arg-type predicate
         ^predicate-handle in1
         ^1 <obj1>
         ^2 <obj2>)
}

sp {generate-action-operator*propose*add-argument-to-world*predicate*to
    (state <s> ^name generate-action-operator
               ^action-id.procedural.<arg2-name> <parg2>
               ^action-operator.<arg2-name> <arg2>
               ^action-operator.<arg1-name> <arg1>
               ^top-state.world.robot.current-location <loc>
               ^top-state.world.predicates.predicate <ts-pred>)
    (<parg2> ^arg-type predicate
             ^arg-status real)
    (<arg2> ^handle to1
            ^2 <obj2>)
    (<arg1> ^arg-type object
            ^id <obj1>)
    (<ts-pred> ^handle in1)
    -{(<ts-pred> ^instance <i>)
      (<i> ^1 <obj1> ^2 <loc>)}
-->
    (<s> ^operator <o> + =)
    (<o> ^name add-argument-to-world
         ^arg-type predicate
         ^predicate-handle in1
         ^1 <obj1>
         ^2 <loc>)
}

sp {generate-action-operator*apply*add-argument-to-world*object
    (state <s> ^name generate-action-operator
               ^operator <o>
               ^top-state.world.objects <objs>)
    (<o> ^name add-argument-to-world
         ^arg-type object
         ^id <obj>)
-->
    (<objs> ^object <obj>)
}

sp {generate-action-operator*apply*add-argument-to-world*predicate
    (state <s> ^name generate-action-operator
               ^operator <o>
               ^top-state.world.predicates.predicate <ts-pred>)
    (<o> ^name add-argument-to-world
         ^arg-type predicate
         ^predicate-handle <pred-handle>
         ^1 <obj1>
         ^2 <obj2>)
    (<ts-pred> ^handle <pred-handle>)
-->
    (<ts-pred> ^instance <i>)
    (<i> ^1 <obj1> ^2 <obj2>)
}
               

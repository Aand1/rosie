sp {interpret-status*propose*complete-interpret-status
   (state <s> ^name interpret-status)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-interpret-status)
}

sp {interpret-status*apply*complete-interpret-status*copy*new-segment-info
   (state <s> ^name interpret-status
   	      ^operator.name complete-interpret-status
	      ^new-segment-info <info>
	      ^superstate <ss>)
-->
   (<ss> ^new-segment-info <info>)
}

### if the status matches the purpose of the current segment, mark the current segment to be deleted.
sp {interpret-status*satisfied*purpose
   (state <s> ^name interpret-status
   	      ^topstate.interaction <i>
	      ^topstate <ss>
	      ^operator.name complete-interpret-status)
   (<i> ^stack.segment <seg>
   	^status <stat>)
   (<stat> ^performed <performed>)
   (<seg> ^purpose.satisfaction <sat>)
   (<sat> ^<event> <sat-event>)
   (<sat-event> ^type <event-type>)
   (<performed> ^<event> <status-event>)
   (<status-event> ^type <event-type>)
   # Everything listed in the satisfaction is on the status
   -{(<sat-event> ^{<att> <> info} <val>)
     (<status-event> -^<att> <val>)}
-->
   (<ss> ^terminate-segment <seg>)
}

   
   sp {index-object*apply*return-no-matches*teaching-request*create-message
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^index-info.use-interaction true)
-->
   (<s> ^teaching-request <req>)
   (<req> ^type teaching-request
          ^originator agent
          ^fields.description <desc>)
   (<desc> ^determiner the)
}

sp {index-object*apply*return-no-matches*teaching-request*copy*adjective*non-shape
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description <desc>
              ^object-to-index.word <w>)
   (<w> ^word <word>
        ^sense.property <prop>)
   (<prop> ^type visual
           ^name <> shape)
-->
   (<desc> ^adjective <word>)
}

sp {index-object*apply*return-no-matches*teaching-request*copy*adjective*shape
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> ^word.sense.property.name name
          ^word <w>)
   (<w> ^word <word>
        ^sense.property.name shape)
-->
   (<desc> ^adjective <word>)
}

sp {index-object*apply*return-no-matches*teaching-request*copy*word*shape
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> -^word.sense.property.name name
          ^word <w>)
   (<w> ^word <word>
        ^sense.property.name shape)
-->
   (<desc> ^word <word>)
}

sp {index-object*apply*return-no-matches*teaching-request*copy*word*name
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description <desc>
              ^object-to-index.word <w>)
   (<w> ^word <word>
        ^sense.property.name name)
-->
   (<desc> ^word <word>)
}

sp {index-object*apply*return-no-matches*teaching-request*copy*word*object
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> -^word.sense.property.name name
          -^word.sense.property.name shape)
-->
   (<desc> ^word object)
}

sp {index-object*apply*return-no-matches*teaching-request*mark*message-ready
   (state <s> ^name index-object
              ^operator.name return-no-matches
              ^teaching-request.fields.description.word)
-->
   (<s> ^message-ready true)
}


         sp {index-object*apply*return-mult-matches*which-question*copy*adjective*non-shape
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description <desc>
              ^object-to-index.word <w>)
   (<w> ^word <word>
        ^sense.property <prop>)
   (<prop> ^type visual
           ^name <> shape)
-->
   (<desc> ^adjective <word>)
}

sp {index-object*apply*return-mult-matches*which-question*copy*adjective*shape
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> ^word.sense.property.name name
          ^word <w>)
   (<w> ^word <word>
        ^sense.property.name shape)
-->
   (<desc> ^adjective <word>)
}

sp {index-object*apply*return-mult-matches*which-question*copy*word*shape
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> -^word.sense.property.name name
          ^word <w>)
   (<w> ^word <word>
        ^sense.property.name shape)
-->
   (<desc> ^word <word>)
}

sp {index-object*apply*return-mult-matches*which-question*copy*word*name
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description <desc>
              ^object-to-index.word <w>)
   (<w> ^word <word>
        ^sense.property.name name)
-->
   (<desc> ^word <word>)
}

sp {index-object*apply*return-mult-matches*which-question*copy*word*object
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description <desc>
              ^object-to-index <oti>)
   (<oti> -^word.sense.property.name name
          -^word.sense.property.name shape)
-->
   (<desc> ^word object)
}

sp {index-object*apply*return-mult-matches*which-question*mark*message-ready
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^which-question.fields.description.word)
-->
   (<s> ^message-ready true)
}


sp {index-object*apply*return-mult-matches*which-question*create*new-segment
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^message-ready true
              ^which-question <msg>
              ^object-to-index.object <obj>
              ^topstate.interaction.status <status>)
-->
   (<status> ^new-segment-info <info>)
   (<info> ^purpose <p>
        ^message <msg>
        ^originator agent)
   (<p> ^type which-question
        ^target-object <obj>
        ^satisfaction.dialog-event.type object-message)
}


sp {learn-word*apply*ask-property-name*create*status
   (state <s> ^name learn-word 
              ^operator.name ask-property-name
              ^word.word <word>
              ^topstate.interaction.status <status>)
-->
   (<status> ^new-segment-info <info>)
   (<info> ^purpose <p>
           ^message <msg>
           ^originator agent)
   (<p> ^type ask-property-name
        ^satisfaction.dialog-event.type object-message)
   (<msg> ^type ask-property-name
          ^originator agent
          ^fields.word <word>)
}
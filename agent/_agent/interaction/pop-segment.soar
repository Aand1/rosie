sp {interaction*apply*pop-segment
   (state <s> ^name interaction
              ^operator <o>
              ^topstate.interaction.stack <stack>)
   (<o> ^name pop-segment
        ^segment <top-seg>)
   (<stack> ^segment <top-seg>)
   (<top-seg> ^next <next-seg>)
-->
   (<stack> ^segment <top-seg> -
            ^segment <next-seg>)
   (<next-seg> ^prev <top-seg> -)
}

sp {interaction*apply*pop-segment*remove*terminate-segment
   (state <s> ^name interaction
              ^operator <o>
              ^topstate.interaction.changes <c>)
   (<o> ^name pop-segment
        ^segment <seg>)
   (<c> ^terminate-segment <seg>)
-->
   (<c> ^terminate-segment <seg> -)
}

sp {interaction*apply*pop-segment*send-message
   (state <s> ^name interaction
              ^operator <o>
	          ^topstate.interaction.changes <c>)
   (<o> ^name pop-segment
        ^segment <seg>)
   (<seg> ^was-satisfied true
          ^purpose.type train-on-object)
-->
   (<c> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type confirmation)
}
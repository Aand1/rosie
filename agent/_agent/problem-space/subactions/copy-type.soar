sp {problem-space*subactions*copy-type*shallow*elaborate*subactions
   (state <s> ^problem-space.subactions <subs>)
   (<subs> ^copy-type shallow
           ^source <source>)
-->
   (<s> ^subactions <source>)
}

sp {problem-space*subactions*copy-type*deep*elaborate*subactions
   (state <s> ^problem-space.subactions <subs>)
   (<subs> ^copy-type deep
           ^source <source>)
-->
   (<s> ^subactions <new-subactions>
        ^copy-subactions-map <map>)
}

sp {problem-space*subactions*copy-type*deep*elaborate*next*subaction
   (state <s> ^problem-space.subactions <subs>
              ^subactions <subactions>
              ^copy-subactions-map <map>)
   (<subs> ^copy-type deep
           ^source.next { <src-next-sub> <> none })
-->
   (<subactions> ^next <new-next-sub>)
   (<map> ^<src-next-sub> <new-next-sub>)
}

sp {problem-space*subactions*copy-type*deep*elaborate*next*subaction*none
   (state <s> ^problem-space.subactions <subs>
              ^subactions <subactions>)
   (<subs> ^copy-type deep
           ^source.next none)
-->
   (<subactions> ^next none)
}

sp {problem-space*subactions*copy-type*deep*elaborate*subaction
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map <map>)
   (<map> ^<src-sub> <sub>)
   (<src-sub> ^next {<src-next-sub> <> none })
-->
   (<sub> ^next <new-next-sub>)
   (<map> ^<src-next-sub> <new-next-sub>)
}

sp {problem-space*subactions*copy-type*deep*elaborate*subaction*none
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map <map>)
   (<map> ^<src-sub> <sub>)
   (<src-sub> ^next none)
-->
   (<sub> ^next none)
}

sp {problem-space*subactions*copy-type*deep*copy*subaction*name
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map.<src-sub> <sub>)
   (<src-sub> ^action-name <name>)
-->
   (<sub> ^action-name <name>
          ^action-type primitive)
}

sp {problem-space*subactions*copy-type*deep*copy*subaction*object*arg
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map.<src-sub> <sub>
              ^copy-objects-map.<src-obj> <obj>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type object
              ^id <src-obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type object
              ^id <obj>)
}

sp {problem-space*subactions*copy-type*deep*copy*subaction*concept*arg
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map.<src-sub> <sub>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type concept
              ^id <concept-id>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type concept
              ^id <concept-id>)
}

sp {problem-space*subactions*copy-type*deep*copy*subaction*predicate*arg
   (state <s> ^problem-space.subactions.copy-type deep
              ^copy-subactions-map.<src-sub> <sub>
              ^copy-objects-map.<src-obj> <obj>)
   (<src-sub> ^<arg-name> <src-arg>)
   (<src-arg> ^arg-type predicate
              ^id <pred-id>
              ^2 <src-obj>)
-->
   (<sub> ^<arg-name> <new-arg>)
   (<new-arg> ^arg-type predicate
               ^id <pred-id>
               ^2 <obj>)
}

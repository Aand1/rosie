################## RETROSPECTIVE ######################



################## RETROSPECTIVE ######################

# Make sure subactions are copied from superstate
#sp {action*selection*retrospective*elaborate*problem-space*subactions*copy-type
#   (state <s> ^name selection
#              ^problem-space <ps>)
#   (<ps> ^name action
#         ^learning.type retrospective)
#-->
#   (<ps> ^subactions.copy-type shallow)
#}

# Turn chunking on
#sp {action*selection*learning*retrospective*elaborate*learning*use*chunking
#   (state <s> ^name selection
#              ^problem-space <ps>)
#   (<ps> ^name action
#         ^learning <learn>)
#   (<learn> ^type retrospective)
#-->
#   (<learn> ^use chunking)
#}


#sp {action*evaluate-operator*learning*retrospective*elaborate*problem-space*subactions*copy-type
#   (state <s> ^name evaluate-operator
#              ^problem-space <ps>)
#   (<ps> ^name action
#         ^learning.type retrospective)
#-->
#   (<ps> ^subactions.copy-type deep)
#}


################## RETROSPECTIVE ######################

# When the look-ahead-operator is applied, advance the subaction
sp {action*problem-space*evaluate-operator*apply*look-ahead-operator*retrospective*advance*subaction
   (state <s> ^name evaluate-operator
              ^look-ahead-operator <o>
              ^operator <o>
              ^subactions <subs>)
   (<subs> ^next <cur>)
   (<cur> ^next <next>)
-->
   (<subs> ^next <cur> -
           ^next <next>)
}

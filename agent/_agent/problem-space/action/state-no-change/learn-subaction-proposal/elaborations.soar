sp {learn-subaction-proposal*elaborate*action-operator
   (state <s> ^name learn-subaction-proposal
              ^superstate.action-operator <action>)
-->
   (<s> ^action-operator <action>)
}

sp {learn-subaction-proposal*elaborate*procedural-id
   (state <s> ^name learn-subaction-proposal
              ^superstate.action-id.procedural <proc-id>)
-->
  (<s> ^procedural-id <proc-id>)
}

sp {learn-subaction-proposal*elaborate*world*superstate
   (state <s> ^name learn-subaction-proposal
              ^superstate.world <world>)
-->
   (<s> ^world <world>)
}

sp {learn-subaction-propose*elaborate*ground-argument*arg-type*predicate-set
  (state <s> ^name learn-subaction-proposal
             ^ground-argument <gnd>)
  (<gnd> ^generalized-rep.arg-type until-clause)
-->
  (<gnd> ^arg-type predicate-set)
}

############# ground-argument ##############

# Create the ground-argument structures, depending on the number of arguments
sp {learn-subaction-proposal*elaborate*ground-argument*1*argument
   (state <s> ^name learn-subaction-proposal
              ^subaction-id <sub>)
   (<sub> ^{ <arg1-name>               } <arg1>)
   -{(<sub> ^{ <arg2-name> <> <arg1-name> }.arg-type)}
  (<arg1> ^arg-type <t1>)
-->
   (<s> ^ground-argument.generalized-rep <arg1>)
}

sp {learn-subaction-proposal*elaborate*ground-argument*2*arguments
   (state <s> ^name learn-subaction-proposal
              ^subaction-id <sub>)
   (<sub> ^{ <arg1-name>               } <arg1>
          ^{ <arg2-name> > <arg1-name> } <arg2>)
  -{(<sub> ^{ <arg3-name> <> <arg1-name> <> <arg2-name> }.arg-type)}
  (<arg1> ^arg-type <t1>)
  (<arg2> ^arg-type <t2>)
-->
  (<s> ^ground-argument.generalized-rep <arg1>)
  (<s> ^ground-argument.generalized-rep <arg2>)
}

sp {learn-subaction-proposal*elaborate*ground-argument*3*arguments
   (state <s> ^name learn-subaction-proposal
              ^subaction-id <sub>)
   (<sub> ^{ <arg1-name>               } <arg1>
          ^{ <arg2-name> > <arg1-name> } <arg2>
          ^{ <arg3-name> > <arg2-name> } <arg3>)
   -{(<sub> ^{ <arg4-name> <> <arg1-name> <> <arg2-name> <> <arg3-name> }.arg-type)}
  (<arg1> ^arg-type <t1>)
  (<arg2> ^arg-type <t2>)
  (<arg3> ^arg-type <t3>)
-->
  (<s> ^ground-argument.generalized-rep <arg1>)
  (<s> ^ground-argument.generalized-rep <arg2>)
  (<s> ^ground-argument.generalized-rep <arg3>)
}

sp {learn-subaction-proposal*elaborate*ground-argument*4*arguments
   (state <s> ^name learn-subaction-proposal
              ^subaction-id <sub>)
   (<sub> ^{ <arg1-name>               } <arg1>
          ^{ <arg2-name> > <arg1-name> } <arg2>
          ^{ <arg3-name> > <arg2-name> } <arg3>
          ^{ <arg4-name> > <arg3-name> } <arg4>)
   -{(<sub> ^{ <arg5-name> <> <arg1-name> <> <arg2-name> <> <arg3-name> <> <arg4-name> }.arg-type )}
  (<arg1> ^arg-type <t1>)
  (<arg2> ^arg-type <t2>)
  (<arg3> ^arg-type <t3>)
  (<arg4> ^arg-type <t4>)
-->
  (<s> ^ground-argument.generalized-rep <arg1>)
  (<s> ^ground-argument.generalized-rep <arg2>)
  (<s> ^ground-argument.generalized-rep <arg3>)
  (<s> ^ground-argument.generalized-rep <arg4>)
}

sp {learn-subaction-proposal*elaborate*ground-argument*5*arguments
   (state <s> ^name learn-subaction-proposal
              ^subaction-id <sub>)
   (<sub> ^{ <arg1-name>               } <arg1>
          ^{ <arg2-name> > <arg1-name> } <arg2>
          ^{ <arg3-name> > <arg2-name> } <arg3>
          ^{ <arg4-name> > <arg3-name> } <arg4>
          ^{ <arg5-name> > <arg4-name> } <arg5>)
  -{(<sub> ^{ <arg6-name> <> <arg1-name> <> <arg2-name> <> <arg3-name> <> <arg4-name> <> <arg5-name> }.arg-type )}
  (<arg1> ^arg-type <t1>)
  (<arg2> ^arg-type <t2>)
  (<arg3> ^arg-type <t3>)
  (<arg4> ^arg-type <t4>)
  (<arg5> ^arg-type <t5>)
-->
  (<s> ^ground-argument.generalized-rep <arg1>)
  (<s> ^ground-argument.generalized-rep <arg2>)
  (<s> ^ground-argument.generalized-rep <arg3>)
  (<s> ^ground-argument.generalized-rep <arg4>)
  (<s> ^ground-argument.generalized-rep <arg5>)
}


sp {action*problem-space*execute*elaborate*current-action*from*superstate*current-action
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^action-operator <o>
              ^superstate.current-action <a>)
   (<a> ^execution-operator <o>)
-->
   (<s> ^current-action <a>)
}

sp {action*problem-space*execute*elaborate*current-action*from*superstate*child-action
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^action-operator <o>
              ^superstate.child-action <a>)
   (<a> ^execution-operator <o>)
-->
   (<s> ^current-action <a>)
}

sp {action*problem-space*execute*elaborate*parent-action
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^current-action.prev { <parent> <> none })
-->
   (<s> ^parent-action <parent>)
}

sp {action*problem-space*execute*elaborate*child-action
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^current-action.next { <child> <> none })
-->
   (<s> ^child-action <child>)
}

sp {action*problem-space*execute*elaborate*action-matched*true
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^match-action.matched <o>)
-->
   (<s> ^action-matched true)
}

sp {action*problem-space*execute*elaborate*action-matched*false
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^match-action <ma>)
   (<ma> -^matched)
-->
   (<s> ^action-matched false)
}

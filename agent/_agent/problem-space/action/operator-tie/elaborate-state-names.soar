sp {action*operator-tie*elaborate*matched*operator
  (state <s> ^superstate.problem-space.name action
             ^attribute operator
             ^impasse tie
             ^item <o>
             ^superstate.match-action.matched <o>)
-->
  (<s> ^matched <o>)
}

sp {action*operator-tie*elaborate*unmatched*operator
  (state <s> ^superstate.problem-space.name action
              ^attribute operator
              ^impasse tie
              ^item <o>
              ^superstate.match-action <ma>)
  (<ma> -^matched <o>)
-->
  (<s> ^unmatched <o>)
}

sp {action*operator-tie*elaborate*state*name*no-subaction-proposal
  (state <s> ^superstate.problem-space.name action
              ^attribute operator
              ^impasse tie
              ^item <o>
              ^unmatched <o>
              ^superstate.current-action.learn-proposal true)
-->
  (<s> ^name no-subaction-proposal)
}

sp {action*operator-tie*elaborate*state*name*unmatched-action
  (state <s> ^superstate.problem-space.name action
              ^attribute operator
              ^impasse tie
              ^item <o>
              ^unmatched <o>
              ^superstate.current-action <ca>)
  (<ca> -^learn-proposal true)
-->
  (<s> ^name unmatched-action)
}

sp {action*operator-tie*elaborate*state*name*multiple-argument-instantiations
   (state <s> ^superstate.problem-space.name action
              ^attribute operator
              ^impasse tie
              ^item <o>
              ^matched <o>)
-->
   (<s> ^name multiple-argument-instantiations)
}

# Not trying to match an action, trying to execute a composite action
sp {action*operator-tie*elaborate*state*name*selection
   (state <s> ^superstate.problem-space.name action
              ^superstate.problem-space.action.action-type composite
              ^impasse tie
              ^attribute operator
             -^superstate.match-action)
-->
   (<s> ^name selection)
}

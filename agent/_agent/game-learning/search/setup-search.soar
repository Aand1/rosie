#sp {setup-search*elaborate*nlp-set*conditions
#   (state <s> ^name setup-search
#              ^gtype <type>
#              ^<type> <t>)
#   (<t> ^nlp-set.nlp <nps>)
#-->
#   (<t> ^condition <nps>)
#}
#sp {setup-search*elaborate*sub-conditionszz
#   (state <s> ^name setup-search
#              ^gtype <type>
#              ^<type> <t>)
#   (<t> ^condition <co>)
#   (<co> ^args.{<arg> << 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 >>} <cond>)
#   (<cond> ^name <name>)
#-->
#   (<t> ^condition <cond>)
#}

#first do a deep copy
sp {setup-search*elaborate*tcn
   (state <s> ^name setup-search
              ^top-state.dialog-context.structure <cg>
              ^superstate.operator <op>)
   (<op> ^game-name <name>)
   (<cg> ^handle <name> ^goals.goal <goal>)
-->
   (<s> ^gtype action
        ^gtype goal
        ^problemspace games
        ^multiplayer false)
}

#TODO need below?
#sp {setup-search*elaborate*copy-stucture*elaborate*goal
#   (state <s> ^name setup-search
#              ^copy-count 12
#              ^copy-structure.destination <dest>)
#    (<dest> ^goals.goal <goal>)
#-->
#	(<s> ^goal <goal>)
#}
#sp {setup-search*elaborate*copy-stucture*elaborate*action
#   (state <s> ^name setup-search
#              ^copy-count 12
#              ^copy-structure.destination <dest>)
#    (<dest> ^actions.action <act>)
#-->
#	(<s> ^action <act>)
#}
#sp {setup-search*elaborate*copy-stucture
#   (state <s> ^name setup-search
#              ^top-state.dialog-context.structure <cg>)
#-->
#   (<s> ^copy-structure <copy> ^copy-count 0 ^copy-map <cm> ^pending-map <pm>)
#   (<copy> ^source <cg>
#           ^destination <dest>
#            ^copy-type deep)
#}

sp {setup-search*propose*find-solution
   (state <s> ^name setup-search
              ^superstate.operator <op>)
   (<op> ^game-name <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name find-solution
        ^game-name <name>)
}



sp {setup-search*elaborate*problem-space*predicate-structure
   (state <s> ^name setup-search
              ^top-state.world <world2>)
-->
   (<s> ^problem-space.world <world>)
   (<world> ^source <world2>
            ^copy-type deep)
}
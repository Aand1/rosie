
#TODO need?
#sp {finished-game-teaching*remove-learning-true
#   :o-support
#   (state <s> ^name finished-game-teaching
#              ^top-state.dialog-context <dc>)
#   (<dc> ^learning <t>)
#-->
#   (<dc> ^learning <t> -)
#}

#if not in dialog context retrieve here


sp {finished-game-teaching*propose*setup-search
   (state <s> ^name finished-game-teaching
              ^superstate.operator.type game
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^game-name <name>)
}

sp {finished-game-teaching*propose*setup-search*yes
   (state <s> ^name finished-game-teaching
             -^top-state.dialog-context.structure.multiplayer true
              ^superstate.operator.response yes
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^game-name <name>)
}

sp {finished-game-teaching*propose*prepare-game*yes
   (state <s> ^name finished-game-teaching
             ^top-state.dialog-context.structure.multiplayer true
              ^superstate.operator.response yes
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name prepare-game)
}

sp {finished-game-teaching*propose*clean-up-after-learning*no
   (state <s> ^name finished-game-teaching
              ^superstate.operator.response no
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name clean-up-after-learning
        ^game-name <name>)
}

sp {finished-game-teaching*apply*clean-up-after-learning*recorddata
#    :interrupt
   (state <s> ^name finished-game-teaching
              ^operator <o>)
   (<o> ^name clean-up-after-learning)
-->
 #need per task teach #ignoring solve for now
(write (cmd |ctf -a statsdc.txt stats -dc|))
(write (cmd |ctf -a smemuse.txt smem --stats mem-usage|))
(write (cmd |ctf -a pertaskstats.txt stats|)) #has cpu time, WM size, number of chunks
}

sp {finished-game-teaching*apply*clean-up-after-learning
   (state <s> ^name finished-game-teaching
              ^operator <o>
              ^top-state <ts>
              ^top-state.interaction.status <status>
              ^top-state.interaction.changes <changes>)
   (<ts> ^dialog-context <dc>)
   (<o> ^name clean-up-after-learning)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type ok)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
   (<ts> ^dialog-context <dc> -)
 }

sp {finished-game-teaching*apply*prepare-game
   (state <s> ^name finished-game-teaching
              ^operator <o>
              ^top-state.interaction.status <status>
              ^top-state.interaction.changes <changes>)
   (<o> ^name prepare-game)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type tell-me-go)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
 }

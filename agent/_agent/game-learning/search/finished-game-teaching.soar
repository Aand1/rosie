sp {finished-game-teaching*propose*setup-search
   (state <s> ^name finished-game-teaching
              ^superstate.operator.type game
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^game-name <name>)
}

sp {finished-game-teaching*propose*setup-search*game-replay
   (state <s> ^name finished-game-teaching
              ^superstate.operator.type game
              ^top-state.game-replay <name>
              -^top-state.dialog-context)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^multiplayer true
        ^game-name <name>)
}

sp {finished-game-teaching*propose*setup-search*yes
   (state <s> ^name finished-game-teaching
             -^top-state.dialog-context.structure.multiplayer true #JAMES UNDO
              ^superstate.operator.response yes
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^game-name <name>)
}

sp {finished-game-teaching*propose*setup-search*replay
   (state <s> ^name finished-game-teaching
              ^superstate.operator <sop>)
   (<sop> ^type replay-game ^multiplayer false ^game-name <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name setup-search
        ^multiplayer false
        ^game-name <name>)
}

sp {finished-game-teaching*propose*prepare-game*replay
   (state <s> ^name finished-game-teaching
              ^superstate.operator <sop>)
   (<sop> ^type replay-game ^multiplayer true ^game-name <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name prepare-game)
}

sp {finished-game-teaching*apply*prepare-game*replay
   (state <s> ^name finished-game-teaching
              ^operator.name prepare-game
              ^top-state <ts>
              ^superstate.operator <sop>)
   (<sop> ^type replay-game ^multiplayer true ^game-name <name>)
-->
   (<ts> ^game-replay <name>)
}

#### JAMES UNDO!!!!! for chunking test
sp {finished-game-teaching*propose*prepare-game*yes
   (state <s> ^name finished-game-teaching
             ^top-state.dialog-context.structure.multiplayer true
              ^superstate.operator.response yes
              ^top-state.dialog-context.structure.handle <name>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name prepare-game)
}

sp {finished-game-teaching*propose*clean-up-after-learning*no
   (state <s> ^name finished-game-teaching
              ^superstate.operator.response no)
-->
   (<s> ^operator <o> + =)
   (<o> ^name clean-up-after-learning)
}

#sp {apply*clean-up-after-learning*capture-dataexcise
#   (state <s> ^superstate nil
#              ^dialog-context.structure.word-structure.spelling othello
#              ^capture-data <ys>
#              ^operator.name interaction)
#-->
#(write (cmd |excise --chunks|))
#}

sp {apply*clean-up-after-learning*capture-data
   (state <s> ^name interaction
              ^top-state <ts>
              ^operator.name pop-segment)
   (<ts> ^dialog-context <dc>)
   (<dc> ^capture-data yes)
-->
(<ts> ^dialog-context <dc> -)
(<s> ^old-context <dc>)
(write (cmd |ctf -a pertaskstats.txt stats|))
(write (cmd |ctf -a smemuse.txt smem --stats mem-usage|))
}

sp {finished-game-teaching*apply*clean-up-after-learning
   (state <s> ^name finished-game-teaching
              ^operator <o>
              ^top-state <ts>)
   (<ts> ^dialog-context <dc> ^interaction <int>)
   (<int> ^status <status> ^changes <changes>)
   (<o> ^name clean-up-after-learning)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type ok)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
   (<dc> ^capture-data yes)
 }

sp {finished-game-teaching*apply*prepare-game
   (state <s> ^name finished-game-teaching
              ^operator <o>
              ^top-state.interaction.status <status>
              ^top-state.interaction.changes <changes>)
   (<o> ^name prepare-game)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type tell-me-go)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
 }


###JAMES ctf parse breaks for processing(not building time)
#sp {apply*startparsingtime*capture-data
#   (state <s> #^superstate nil
#               ^name format-conditions
#              ^operator.name complete)
#-->
#(write (cmd |ctf -a startparsetime.txt stats|)) #has cpu time, WM size, number of chunks
#}
#sp {apply*parsingtime*capture-data
#   (state <s> #^name learn-predicate
#              ^operator.name finished-learning)
#-->
#(write (cmd |ctf -a endparsetime.txt stats|)) #has cpu time, WM size, number of chunks
#}
###JAMES ctf parse breaks here
#sp {apply*startparsingtime*capture-data
#   (state <s> ^superstate nil
#              ^operator.name comprehension)
#-->
#(write (cmd |ctf -a startparsetime.txt stats|)) #has cpu time, WM size, number of chunks
#}
#sp {apply*parsingtime*capture-data
#   (state <s> ^name interaction
#              ^operator.name interpret-message)
#-->
#(write (cmd |ctf -a endparsetime.txt stats|)) #has cpu time, WM size, number of chunks
#}



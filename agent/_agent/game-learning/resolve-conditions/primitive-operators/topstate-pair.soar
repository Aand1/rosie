
sp {top-pair*perference*complete*diff
   (state <s> ^name top-pair
              ^operator <o1> +)
   (<o1> ^name complete
         ^instance <instance>)
   
  -{(<instance> ^<ind1> <obja> 
            ^{<ind2> <> <ind1>} <obja>)}
-->
   (<s> ^operator <o1> >)
}

sp {top-pair*propose*complete
   (state <s> ^name top-pair
              ^instance <instance>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <instance>)
}

sp {top-pair*apply*complete
   (state <s> ^name top-pair
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^instance <s1>)  
   (<op> ^name complete ^instance <s1>)
-->
  (<res> ^instance <s1>)
}



sp {top-pair*numeric-evaluate*single*param3
   (state <s> ^name top-pair
            #  ^superstate <ss>
              ^linkstate.<top> <instances>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 3 ^word <top> -^type)
   (<args> ^num 3
           ^1  <a1>
           ^2 <a2>
           ^3 <a3>)
   (<a1> -^rtype set ^result.set.instance.{1} <value1>)
   (<a2> -^rtype set ^result.set.instance.{1} <value2>)
   (<a3> -^rtype set ^result.set.instance.{1} <value3>)
   (<instances> ^instance <instance1>)
   (<instance1> ^3 <value3> ^2 <value2> ^1 <value1>)      
-->
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   (<instance> ^3 <value3> ^2 <value2> ^1 <value1>)   
}

sp {top-pair*numeric-evaluate*single
   (state <s> ^name top-pair
            #  ^superstate <ss>
              ^linkstate.<top> <instances>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^word <top> -^type)
   (<args> ^num 1
           ^<arg2> <a1>)
   (<a1> -^rtype set ^result.set <rsp>)
   (<rsp> ^instance.{<arg3> 1} <value>)
   (<instances> ^instance <instance1>)
   (<instance1> ^<arg2> <value> ^{<arg1> <> <arg2>} <value2>)      
-->
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   (<instance> ^<arg1> <value2> ^<arg2> <value>)
}

sp {top-pair*numeric-evaluate*single2*param
   (state <s> ^name top-pair
            #  ^superstate <ss>
              ^linkstate.<top> <instances>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^word <top> -^type)
   (<args> ^num 1
           ^<arg2> <a1>)
   (<a1> -^rtype set ^result.set <rsp>)
   (<rsp> ^instance.{<arg3> 1} <value>)
   (<instances> ^instance <instance1>)
   (<instance1> ^<arg2> <value> ^{<arg1> <> <arg2>} <value2>)      
-->
#   (<ss> ^result <res>)
   (<s> ^instance <instance>)
   (<instance> ^1 <value2>)
}


sp {top-pair*elaborate*return-type
   (state <s> ^name top-pair
              ^superstate.operator.parameter <p>)
   (<p> ^1 <p1>)
   (<p1> ^type <t>)
-->
   (<s> ^result-type <t>)
}

sp {top-pair*elaborate*return-type*from-condition
   (state <s> ^name top-pair
              ^superstate.condition.rtype <t>
              ^superstate.operator.parameter <p>)
   (<p> -^1)
-->
   (<s> ^result-type <t>)
}



#for all test sets
sp {top-pair*with-type*1param*set
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
              ^linkstate <ls>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<ls> ^<c2> <pattr>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3>)
   (<o> ^args <args> ^parameter.num 1 ^attribute <c2> ^type <c3> ^negative false)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set)
   -{(state <ls>) 
     (<obja> -^<x1>)}
   -{(<obja> ^<elem> <e>)
    -{(<pa> ^instance <instance1>)
       (<instance1> ^1 <e> ^2 <objb>)
       (<a2> ^result.set.instance.{1} <objb>)}}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {top-pair*with-type*1param*set*negative
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
              ^linkstate <ls>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<ls> ^<c2> <pattr>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3>)
   (<o> ^args <args> ^parameter.num 1 ^attribute <c2> ^type <c3> ^negative true)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set)
   -{(state <ls>) 
     (<obja> -^<x1>)}
   -{(<obja> ^<elem> <e>)
     (<pa> ^instance <instance1>)
     (<instance1> ^1 <e> ^2 <objb>)
     (<a2> ^result.set.instance.{1} <objb>)}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}

#create sets from single
sp {top-pair*with-type*1param*set*noarg-set
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
  #            ^linkstate.<c2> <pattr>
              ^superstate.operator <o>)
 #  (<pattr> ^<something> <pa>)
   #(<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^parameter.num 2  ^negative false)#^attribute <c2> ^type <c3>
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set)# ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
 #  (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <set> ^2 <objb>)
}
sp {top-pair*with-type*1param*set*noarg-set*noparam
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
  #            ^linkstate.<c2> <pattr>
              ^superstate.operator <o>)
 #  (<pattr> ^<something> <pa>)
   #(<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^parameter.num < 2  ^negative false)#^attribute <c2> ^type <c3>
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set)# ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set)# ^result.set.instance.{1} <objb>)
 #  (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <set>)
}
sp {top-pair*with-type*1param*set*noarg-set1*apply
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
              ^superstate.superstate.condition.result.set.instance <res>
              ^operator <op>
              ^linkstate.<c2> <pattr>
              ^superstate.operator <o>)
   (<op> ^name complete ^instance <res>)
   (<res> ^1 <set> ^2 <objb>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^attribute <c2> ^type <c3> ^negative false ^parameter.num 2)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<set> ^object <obja>)
}
sp {top-pair*with-type*1param*set*noarg-set1*apply*noparam
   (state <s> ^name top-pair
              #^result-type set
              ^superstate.condition.rtype set
              ^superstate.superstate.condition.result.set.instance <res>
              ^operator <op>
              ^linkstate.<c2> <pattr>
              ^superstate.operator <o>)
   (<op> ^name complete ^instance <res>)
   (<res> ^1 <set>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^attribute <c2> ^type <c3> ^negative false ^parameter.num < 2)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<set> ^object <obja>)
}


###new
##POSITIVE
sp {top-pair*with-type*1param*no-set
   (state <s> ^name top-pair
             #-^result-type set
              ^superstate.condition.rtype single
              ^linkstate.<c2> <pattr>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^parameter.num < 2 ^attribute <c2> ^type <c3> ^negative false)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}


sp {top-pair*with-type*2param*no-set
   (state <s> ^name top-pair
            #  ^superstate <ss>
              #-^result-type set
              ^superstate.condition.rtype single
              ^linkstate.<c2> <pattr>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^parameter.num 2 ^attribute <c2> ^type <c3> ^negative false)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<instance1> ^1 <obja> ^2 <objb>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <objb>)
}

sp {top-pair*with-type*3param*no-set
   (state <s> ^name top-pair
            #  ^superstate <ss>
              #-^result-type set
              ^superstate.condition.rtype single
              ^linkstate.<c2> <pattr>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3> ^instance <instance1>)
   (<o> ^args <args> ^parameter.num 3 ^attribute <c2> ^type <c3> ^negative false)
   (<args> ^num 3
           ^1 <a1>
           ^2 <a2>
           ^3 <a3>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
   (<a3> -^rtype set ^result.set.instance.{1} <objc>)
   (<instance1> ^1 <obja> ^2 <objb> ^3 <objc>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <objb> ^3 <objc>)
}

####negative true
sp {top-pair*with-type*1param*no-set*negative
   (state <s> ^name top-pair
              #-^result-type set
              ^superstate.condition.rtype single
              ^linkstate.<c2> <pattr>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<pattr> ^<something> <pa>)
   (<pa> ^name <c3>)# ^instance <instance1>)
   (<o> ^args <args> ^parameter.num < 2 ^attribute <c2> ^type <c3> ^negative true)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
 #  (<a2> -^rtype set ^result.set.instance.{1} <objb>)
 #  (<instance1> ^1 <obja> ^2 <objb>)
 -{(<pa> ^instance <instance>)
  (<a2> ^result.set.instance.{1} <objb>)
  (<instance> ^1 <obja> ^2 <objb>)}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}


sp {top-pair*with-type*2param*no-set*negative
   (state <s> ^name top-pair
            #  ^superstate <ss>
              #-^result-type set
              ^superstate.condition.rtype single
              ^linkstate.<c2> <pattr>
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<pattr> ^<something> <pa>)
   (<o> ^args <args> ^parameter.num 2 ^attribute <c2> ^type <c3> ^negative true)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> -^rtype set ^result.set.instance.{1} <obja>)
   (<a2> -^rtype set ^result.set.instance.{1} <objb>)
 #  (<instance1> ^1 <obja> ^2 <objb>)
   (<pa> ^name <c3>)
 -{(<pa> ^instance <instance1>)
  (<instance1> ^1 <obja> ^2 <objb>)}
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <objb>)
}


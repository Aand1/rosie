sp {attribute-of*propose*complete
   (state <s> ^name attribute-of
              ^pair <pair>)
-->
#   (interrupt)
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^pair <pair>)
}

sp {attribute-of*apply*complete
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^operator <op>
              ^pair <s1>)  
   (<op> ^name complete ^pair <s1>)
-->
  (<res> ^pair <s1>)
}

sp {attribute-of*numeric-evaluate*value
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num < 2 ^type <type>)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> -^rtype set ^result.set.pair.{1}.<type> <value>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value>)
}

sp {attribute-of*numeric-evaluate*value*pair
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type>)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> -^rtype set ^result.set.pair.{1} <obja>)
   (<obja> ^<type> <value>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <obja>)
}

sp {attribute-of*numeric-evaluate*value*pair*arg2
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type> ^negative false)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} <value>)
   (<a2> -^rtype set ^result.set.pair.{1} <obja>)
   (<obja> ^<type> <value>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <obja>)
}
sp {attribute-of*numeric-evaluate*value*pair*arg2*negative
   (state <s> ^name attribute-of
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^type <type> ^negative true)
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a2> -^rtype set ^result.set.pair.{1} <obja>)
   (<obja> ^<type> <value>)
  -{(<a1> ^result.set.pair.{1} <value>)}
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <obja>)
}




sp {attribute-of*numeric-evaluate*value*pair*sets
   (state <s> ^name attribute-of
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pn>)
   #(<pn> ^num 2)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^rtype set ^result.set.pair.{1} <set>)
-->
   (<s> ^pair <pair>)
   (<pair> ^1 <set2> ^2 <set>)
}

sp {attribute-of*apply*complete*sets
   (state <s> ^name attribute-of
              ^operator <op>
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.pair <pair>
              ^superstate.operator <o>)
   (<op> ^name complete ^pair <pair>)
   (<pair> ^1 <set2> ^2 <set>)
   (<o> ^args <args> ^parameter <pn> ^type <type>)
  # (<pn> ^num 2 ^{1}.type set)
   (<args> ^num 1
           ^2 <a1>)
   (<a1> ^rtype set ^result.set.pair.{1} <set>)
   (<set> ^object <obj>)
   (<obj> ^<type> <val>)
-->
   (<set2> ^<random> <val>)
}
#sp {soar-count*propose*complete
#   (state <s> ^name soar-count
#              ^pair <pair>
#              ^result.set <res>)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name complete
#        ^pair <pair>)
#}
#sp {soar-count*elaborate*result
#   (state <s> ^name soar-count)
#-->
#   (<s> ^result.set <res>)
#}
#sp {soar-count*apply*complete
#   (state <s> ^name soar-count
#              ^superstate.condition.result.set <res>
#              ^operator <op>
#              ^pair <s1>)  
#   (<op> ^name complete ^pair <s1>)
##   (<s1> ^diff 1)
#-->
#  (<res> ^pair <s1>)
#}

sp {soar-compare*greater
   (state <s> ^name soar-greater
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^name soar-greater) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} {<value> > <value1>}) 
   (<a2> ^result.set.pair.{1} <value1>)
-->
   (<res> ^pair.<arg1> <value>)
}
sp {soar-compare*greater-equal
   (state <s> ^name soar-greater-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^name soar-greater-equal) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} {<value> >= <value1>}) 
   (<a2> ^result.set.pair.{1} <value1>)
-->
   (<res> ^pair.<arg1> <value>)
}

sp {soar-compare*greater*param-2
   (state <s> ^name soar-greater
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-greater)  
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} {<value> > <value1>}) 
   (<a2> ^result.set.pair.{1} <value1>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <value1>)
}
sp {soar-compare*greater-equal*param-2
   (state <s> ^name soar-greater-equal
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-greater-equal)  
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} {<value> >= <value1>}) 
   (<a2> ^result.set.pair.{1} <value1>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <value1>)
}

sp {soar-compare*less
   (state <s> ^name soar-less
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 1 ^name soar-less) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{<arg1> 1} {<value> < <value1>}) 
   (<a2> ^result.set.pair.<arg1> <value1>)
-->
   (<res> ^pair.<arg1> <value>)
}

sp {soar-compare*less*param-2
   (state <s> ^name soar-less
              ^superstate.condition.result.set <res>
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter.num 2 ^name soar-less) 
   (<args> ^num 2
           ^1 <a1>
           ^2 <a2>)
   (<a1> ^result.set.pair.{1} {<value> < <value1>}) 
   (<a2> ^result.set.pair.{1} <value1>)
-->
   (<res> ^pair <pair>)
   (<pair> ^1 <value> ^2 <value1>)
}
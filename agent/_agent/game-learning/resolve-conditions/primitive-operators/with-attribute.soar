
sp {with-attribute*elaborate*results*set*instance
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p>)
   (<args> ^1 <a1>
            ^3 <a2>
            ^2 <a3>)
   (<a1> -^rtype set)
   (<a2> ^result.set.instance <p1>)
   (<a3> ^result.set.instance <p2>)
   (<p1> ^1 <attr>)
   (<p2> ^1 <name>)
-->
#   (<rset> ^<elem> <item>)
   (<s> ^instance <instance>)
   (<instance> ^1 <set> ^3 <attr> ^2 <name>)
}
sp {with-attribute*elaborate*results*set*instance*sets
   (state <s> ^name with-attribute
              ^superstate.condition.rtype set
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <p>)
  # (<p> ^{1}.type set)
   (<args> ^1 <a1> 
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^rtype set ^result.set.instance.{1} <obja>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
  -{(state <ls>) 
     (<obja> -^<x1>)}
   -{(<obja> ^<elem> <e>)
     (<e> -^predicates.<attr> <name>)}
-->
#   (<rset> ^<elem> <item>)
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr> ^2 <name>)
}
sp {with-attribute*elaborate*results*0-param*primitive
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^linkstate.world.objects.object <obja>
              ^superstate.operator <o>)
   (<o> ^args <args>)# -^parameter.{1}.type set)
   (<args> -^1 <a1> -^2) 
#                  ^3 <a2>
#                  ^2 <a3>)
#   (<a2> ^result.set.instance.{1} <attr>)
#   (<a3> ^result.set.instance.{1} <name>)
 #  (<obja> ^<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*0-param
   (state <s> ^name with-attribute
              ^superstate.condition.rtype single
              ^linkstate.world.objects.object <obja>
              ^superstate.operator <o>)
   (<o> ^args <args>)# -^parameter.{1}.type set)
   (<args> -^1 <a1> 
                  ^3 <a2>
                  ^2 <a3>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
   (<obja> ^predicates.<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*1-param
   (state <s> ^name with-attribute
             #-^result-type set
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp>)
   (<pp> ^num < 2)# -^{1}.type set)
   (<args> ^1 <a1> 
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
   (<obja> ^predicates.<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja>)
}
sp {with-attribute*elaborate*results*3-param
   (state <s> ^name with-attribute
              #-^result-type set
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp>)
   (<pp> ^num 3)# -^{1}.type set)
   (<args> ^1 <a1> 
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
   (<obja> ^predicates.<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr> ^2 <name>)
}
#weird rule???
sp {with-attribute*elaborate*results*2-parama
   (state <s> ^name with-attribute
              #-^result-type set
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp>)
   (<pp> ^num 2 ^3 <p2>)#-^{1}.type set 
   (<args> ^1 <a1> 
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
   (<obja> ^predicates.<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^3 <attr>)
}
sp {with-attribute*elaborate*results*2-paramb
   (state <s> ^name with-attribute
              #-^result-type set
              ^superstate.condition.rtype single
              ^superstate.operator <o>)
   (<o> ^args <args> ^parameter <pp>)
   (<pp> ^num 2 ^2 <p3>)#-^{1}.type set 
   (<args> ^1 <a1>
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja>)
   (<a2> ^result.set.instance.{1} <attr>)
   (<a3> ^result.set.instance.{1} <name>)
   (<obja> ^predicates.<attr> <name>)
-->
   (<s> ^instance <instance>)
   (<instance> ^1 <obja> ^2 <name>)
}



sp {with-attribute*propose*complete
   (state <s> ^name with-attribute
              ^instance <e>)
-->
   (interrupt)
   (<s> ^operator <o> + =)
   (<o> ^name complete
        ^instance <e>)
}

sp {with-attribute*apply*complete*instance
   (state <s> ^name with-attribute
              ^operator <op>
              ^superstate.condition.result.set <res>)
   (<op> ^name complete ^instance <o>)
-->
   (<res> ^instance <o>)
}

sp {with-attribute*apply*complete*instance*objects
   (state <s> ^name with-attribute
              ^operator <op>
              #^result-type set
              ^superstate.condition.rtype set
              ^superstate.condition.result.set.instance <oz>
              ^superstate.operator <oper>)
   (<oper> ^args <args>)# ^parameter.{1}.type set)
   (<args> ^1 <a1>
                  ^3 <a2>
                  ^2 <a3>)
   (<a1> ^result.set.instance.{1} <obja>)#-^rtype set
   (<a2> ^result.set.instance.{1} <attr1>)
   (<a3> ^result.set.instance.{1} <name1>)
   (<obja> ^predicates.<attr1> <name1>)
   (<op> ^name complete ^instance <oz>)
   (<oz> ^2 <name1> ^3 <attr1> ^1 <set>)
-->
   (<set> ^object <obja>)
}
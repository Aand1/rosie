sp {learn-condition*elaborate*conditions
   (state <s> ^name learn-condition
              ^superstate.operator.condition <co>)
-->
   (<s> ^condition <co>)
}

#temp if go back to retrieveal model may need to chunk here
#sp {learn-condition*impasse
#   (state <s> ^superstate.name learn-condition
#              ^choices none
#              ^attribute state
#              ^superstate.condition <co>
#              ^impasse no-change)
#-->
#   (<s> ^name learn-condition-impasse
#        ^condition <co>)
#}
#sp {learn-condition-impasse*query*success
#   (state <s> ^name learn-condition-impasse 
#              ^smem.result.success <cue>
#              ^smem.result.retrieved <res>)
#-->
#   (<s> ^result <res>)
#}

sp {learn-condition-impasse*propose*with-attribute
   (state <s> ^name learn-condition)#-impasse
              #^superstate <ss>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> ^name <name> ^type attribute ^attribute <attr>)
   (<args> ^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args2>
         ^name with-attribute
         ^negative <bool>
         ^parameter <p>)
   (<args2> ^3 <a2> ^2 <a3> ^1 <a1>)
   (<a2> ^name number ^args <ag2> ^rtype single ^result.set.instance <a22> ^return-type number)
   (<a22> ^1 <attr>)
   (<a3> ^name number ^args <ag3> ^rtype single ^result.set.instance <a33> ^return-type number)
   (<a33> ^1 <name>)
}

sp {learn-condition-impasse*propose*with-attribute22
   (state <s> ^name learn-condition)#-impasse
              #^superstate <ss>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> -^name object ^name <name> ^type attribute ^attribute <attr>)
   (<args> -^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args2>
         ^name with-attribute
         ^negative <bool>
         ^parameter <p>)
   (<args2> ^3 <a2> ^2 <a3>)
   (<a2> ^name number ^args <ag2> ^rtype single ^result.set.instance <a22> ^return-type number)
   (<a22> ^1 <attr>)
   (<a3> ^name number ^args <ag3> ^rtype single ^result.set.instance <a33> ^return-type number)
   (<a33> ^1 <name>)
}

sp {learn-condition-impasse*propose*with-attribute*primitive-object
   (state <s> ^name learn-condition)#-impasse
              #^superstate <ss>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> ^name object ^type attribute ^attribute primitive)
   (<args> -^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args2>
         ^name with-attribute
         ^negative <bool>
         ^parameter <p>)
}

#normally here need to retrieve structure and elab linkstate predicate (already have)
sp {learn-condition-impasse*propose*top-pair
   (state <s> ^name learn-condition)#-impasse
              #^superstate <ss>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> ^name <name> ^type state-pair ^attribute <attr>)
 #  (<args> -^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args>
         ^name top-pair
         ^type <name>
         ^attribute <attr>
         ^negative <bool>
         ^parameter <p>)
}

sp {learn-condition-impasse*propose*function
   (state <s> ^name learn-condition)#-impasse
              #^superstate <s>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> ^name <name> ^type function ^function <func>)
 #  (<args> -^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args>
         ^name <func>
         ^type <name>
         ^negative <bool>
         ^parameter <p>)
}

sp {learn-condition-impasse*propose*attribute-of
   (state <s> ^name learn-condition)#-impasse
              #^superstate <ss>)
   (<s> ^condition <co>)
   (<co> ^args <args> ^negative <bool> ^parameter <p> ^name <type> ^type attribute-of)
 #  (<args> -^1 <a1>)
-->
   (<s> ^operator <op> + =)
   (<op> ^args <args>
         ^name attribute-of
         ^type <type>
         ^negative <bool>
         ^parameter <p>)
}



##############################333
#new failure handling#

sp {learn-condition*propose*resolve-satisfaction-failure
   (state <s> ^operator.name wait
              ^impasse no-change
              ^superstate.superstate <sss>)
   (<sss> ^name learn-condition)
-->
(interrupt)
(<sss> ^operator <o> + >)
(<o> ^name resolve-satisfaction-failure)
}

sp {resolve-satisfaction-failure*elaborate*unresolved
   (state <s> ^name resolve-satisfaction-failure
              ^superstate.superstate <sss>)
   (<sss> ^condition <co>)
   (<co> -^result.set.<x>)
-->
(<s> ^unresolved-condition <co>)
}

sp {resolve-satisfaction-failure*propose*handle-unresolved-condition
   (state <s> ^name resolve-satisfaction-failure
              ^unresolved-condition <co>)
-->
(<s> ^operator <o> + =)
(<o> ^name handle-unresolved-condition
     ^condition <co>)
}
sp {resolve-satisfaction-failure*prefer*handle-unresolved-condition*concept
   (state <s> ^name resolve-satisfaction-failure
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^condition.type concept)
   (<o2> -^condition.type concept)
-->
(<s> ^operator <o1> > <o2>)
}

#want to modify name of condition, but will cause gds stink, and probably chunk bad..., do all at once?
#sp {resolve-satisfaction-failure*propose*handle-unresolved-condition
#   (state <s> ^name resolve-satisfaction-failure
#              ^top-state
#              ^operator <o>)
#(<o> ^name handle-unresolved-condition
#     ^condition <co>)
#}

#case 1
#could be because concept has another unknown definition

#case 2
#could be because concepts has another known definition

#case 3, bad argument connection

#case 4, description incorrect could list simplest condition could not satisfy
#only reach this case if ruled out 1 or 2

#case 5, got to isets, but there is a negpair case....

#would be useful application of preeti's work-> describing an unsatified concept in english= I could not find any matched objects, or i could not find a value of an object...



sp {chunk-predicate-structure*elaborate*result
   (state <s> ^name chunk-predicate-structure
              ^predicate <p>
              ^gtype predicate
              ^superstate <ss>)
-->
    (<ss> ^predicate <p> ^gtype predicate)
}
sp {chunk-predicate-structure*elaborate*result*actiongoal
   (state <s> ^name chunk-predicate-structure
              ^<t> <p>
              ^retrieve-handle
              ^operator.name complete
              ^gtype <t>
              ^superstate <ss>)
-->
    (<ss> ^<t> <p>)
}
sp {chunk-predicate-structure*propose*complete
   (state <s> ^name chunk-predicate-structure
              ^<t> <p>
              ^retrieve-handle
              ^gtype <t>)
-->
    (<s> ^operator <o> + =)
    (<o> ^name complete)
}


sp {chunk-predicate-structure*elaborate*gtype
   (state <s> ^name chunk-predicate-structure
              ^superstate.operator <o>)
   (<o> ^gtype <gtype>
        ^<gtype> <a>)
-->
   (<s> ^gtype <gtype>
        ^<gtype> <a>)
}

sp {chunk-predicate-structure*elaborate*predicate-handle
   (state <s> ^name chunk-predicate-structure
              ^superstate.operator <o>)
   (<o> ^gtype <gtype>
        ^predicate-handle <handle>)
-->
   (<s> ^gtype <gtype>
        ^retrieve-handle <handle>)
}

sp {chunk-predicate-structure*impasse*actiongoal
   (state <s> ^superstate <ss>
              ^choices none
              ^attribute state
              ^impasse no-change)
   (<ss> ^retrieve-handle <handle> ^gtype <t>)
-->
   (force-learn <s>)
   (<s> ^name chunk-predicate-impasse
        ^linkstate <ss>
        ^handle <handle>
        ^gtype <t>)
}

#TODO works for now, but predicates can have predicates
sp {chunk-predicate-structure*impasse
   (state <s> ^superstate <ss>
              ^choices none
              ^attribute state
              ^impasse no-change)
   (<ss> ^gtype {<t> << action goal >>} ^<t> <a>)
-->
   (force-learn <s>)
   (<s> ^name chunk-predicate-impasse
        ^linkstate <ss>
        ^condition <co>
        ^<t> <a>
        ^gtype <t>)
}
sp {chunk-predicate-impasse*propose*retrieve-predicate-structure*action
   (state <s> ^name chunk-predicate-impasse)
   (<s> ^gtype <gtype>
        ^handle <name>
       -^action
        -^goal)
-->
   (<s> ^operator <o> + >)
   (<o> ^name retrieve-predicate-structure
        ^handle <name>)
}


sp {chunk-predicate-impasse*propose*retrieve-predicate-structure
   (state <s> ^name chunk-predicate-impasse)
   (<s> ^gtype <gtype>
       -^handle
       -^predicate.link <co>
         ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name <name>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name retrieve-predicate-structure
        ^condition <co>
        ^handle <name>)
}
sp {chunk-predicate-impasse*propose*complete
   (state <s> ^name chunk-predicate-impasse)
-->
    (<s> ^operator <o> + <)
    (<o> ^name complete)
}
sp {chunk-predicate-impasse*apply*complete
   (state <s> ^name chunk-predicate-impasse
              ^operator.name complete
              ^superstate <ss>
              ^predicate <p>)
-->
    (<ss> ^predicate <p> ^gtype predicate)
}
sp {chunk-predicate-impasse*apply*complete*action
   (state <s> ^name chunk-predicate-impasse
              ^operator.name complete
              ^superstate <ss>
              ^handle <h>
              ^gtype action
              ^action <p>)
-->
    (<ss> ^action <p>)
}
sp {chunk-predicate-impasse*apply*complete*goal
   (state <s> ^name chunk-predicate-impasse
              ^operator.name complete
              ^superstate <ss>
              ^handle <h>
              ^gtype goal
              ^goal <p>)
-->
    (<ss> ^goal <p>)
}

sp {retrieve-predicate-structure*elaborate*predicate-handle
   (state <s> ^name retrieve-predicate-structure
              ^superstate.operator <o>)
   (<o> ^handle <handle>)
-->
   (<s> ^handle <handle>)
}

sp {retrieve-predicate-structure*elaborate*condition
   (state <s> ^name retrieve-predicate-structure
              ^superstate.operator <o>)
   (<o> ^condition <co>)
-->
   (<s> ^condition <co>)
}



sp {retrieve-predicate-structure*elaborate*predicate-lti
   (state <s> ^name retrieve-predicate-structure
              ^superstate.operator <o>)
   (<o> ^predicate-lti <lti>)
-->
   (<s> ^predicate-lti <lti>)
}


sp {retrieve-predicate-structure*elaborate*smem-query
   (state <s> ^name retrieve-predicate-structure
              ^smem.command <c>
              ^handle <handle>)
-->
   (<c> ^query <cue>
        ^depth 15)
   (<cue> ^handle <handle> ^item-type predicate)
}

sp {retrieve-predicate-structure*propose*complete
   (state <s> ^name retrieve-predicate-structure
              ^smem.result.retrieved <pred>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete)
}


#TODO initiate teaching interaction
#sp {retrieve-predicate-structure*elaborate*smem-query*unknown
#   (state <s> ^name retrieve-predicate-structure
##              ^operator.name complete
#              #^condition <co>
#              ^nlp-set <nlps>)
#   (<s> ^smem-query.result <pred>)
#   (<pred> -^predicate-structure)
#-->
#   (<s> ^unknown-concept <pred>)
#}

sp {retrieve-predicate-structure*apply*complete*smem-query*result*no-condition-link
   (state <s> ^name retrieve-predicate-structure
              ^operator.name complete
              ^smem.result.retrieved <pred>
              ^copy-structure.destination <dest>
              ^superstate <ss>)
   (<ss> ^gtype action)
   (<dest> ^predicate-structure <ps> ^verb-structure <vs>)
   (<pred> ^handle <name> ^argnum <an> ^primary-rtype <rtype>)
-->
   (<ss> ^action <p>)
   (<p> ^handle <name> ^aname <name> ^verb-structure <vs> ^nlp-set <ps> ^primary-rtype <rtype> ^formated predicate ^parameter-set <P124> ^potential-args <P125>)
  (<P124> ^argnum <an>)
  (<dest> ^aname <name>)
(<ps> ^aname <name>)
}
sp {retrieve-predicate-structure*apply*complete*smem-query*result*no-condition-link*goal
   (state <s> ^name retrieve-predicate-structure
              ^operator.name complete
              ^smem.result.retrieved <pred>
              ^copy-structure.destination <dest>
              ^superstate <ss>)
   (<ss> ^gtype goal)
   (<dest> ^predicate-structure <ps> )
   (<pred> ^handle <name> ^argnum <an> ^primary-rtype <rtype>)
-->
   (<ss> ^goal <p>)
   (<p> ^handle <name> ^aname <name> ^nlp-set <ps> ^primary-rtype <rtype> ^formated predicate ^parameter-set <P124> ^potential-args <P125>)
  (<P124> ^argnum <an>)
  (<dest> ^aname <name>)
(<ps> ^aname <name>)
}

sp {retrieve-predicate-structure*apply*complete*smem-query*result
   (state <s> ^name retrieve-predicate-structure
              ^operator.name complete
              ^condition <co>
              ^smem.result.retrieved <pred>
              ^copy-structure.destination <dest>
              ^superstate <ss>)
   (<dest> ^predicate-structure <ps>)
   (<pred> ^handle <name> ^argnum <an> ^primary-rtype <rtype>)
-->
   (<ss> ^predicate <p> ^gtype predicate)
   (<p> ^handle <name> ^aname <name> ^nlp-set <ps> ^primary-rtype <rtype> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
  (<P124> ^argnum <an>)
  (<dest> ^aname <name>)
(<ps> ^aname <name>)
}

sp {retrieve-predicate-structure*copy*stucture
   (state <s> ^name retrieve-predicate-structure
              ^smem.result.retrieved <pred>)
-->
   (<s> ^copy-structure <copy>)
   (<copy> ^source <pred>
           ^destination (deep-copy <pred>))
}

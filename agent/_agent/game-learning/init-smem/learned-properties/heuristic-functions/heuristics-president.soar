
#todo test efficiency when moving lower-card calculation up
sp {topstate*elaborate*heuristics-president
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname play-higher-card)
#   (<co> ^type concept ^attribute predicate ^name heuristic)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^prefer <p3> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<p3> ^1 <cs2> ^2 <cs3>)
##action stack
  (<nlps> ^nlp <cs2> <cs3> <c5>  ^aname heuristic)#^nlp <cs> <cs1>

   (<cs2> ^result.set <res> ^name play-higher-card ^args <aag5> ^parameter <pa3> ^type concept ^attribute action ^return-type number)
   (<pa3> ^1 <pa2d>  ^num 1)#^1 <pa1d> ^3 <pa3d>
   #(<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 1 ^type single)
   #(<pa3d> ^param-id 3 ^type single)
   
   (<cs3> ^result.set <res3> ^name play-higher-card ^args <aag3> ^parameter <pa33> ^type concept ^attribute action ^return-type number)
   (<pa33> ^1 <pa2d3> ^num 1)#^1 <pa1d3> ^3 <pa3d3> 
   #(<pa1d3> ^param-id 4 ^type single)
   (<pa2d3> ^param-id 2 ^type single)
   #(<pa3d3> ^param-id 3 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name lower-card ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
   (<ag> ^1 <cs2> ^2 <cs3> ^num 2)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 1 ^type single)
   (<p12> ^param-id 2 ^type single)
   (<R92> ^set <S152>)
}

sp {topstate*elaborate*heuristics-president*play-lower-onempty
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname play-card-empty)
#   (<co> ^type concept ^attribute predicate ^name heuristic)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^prefer <p3> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<p3> ^1 <cs2> ^2 <cs3>)
##action stack
  (<nlps> ^nlp <c5>  ^aname heuristic3)#^nlp <cs> <cs1>

   (<cs2> ^result.set <res> ^name play-card-empty ^args <aag5> ^parameter <pa3> ^type concept ^attribute action ^return-type number)
   (<pa3> ^1 <pa2d>  ^num 1)#^1 <pa1d> ^3 <pa3d>
   #(<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 1 ^type single)
   #(<pa3d> ^param-id 3 ^type single)
   
   (<cs3> ^result.set <res3> ^name play-card-empty ^args <aag3> ^parameter <pa33> ^type concept ^attribute action ^return-type number)
   (<pa33> ^1 <pa2d3> ^num 1)#^1 <pa1d3> ^3 <pa3d3> 
   #(<pa1d3> ^param-id 4 ^type single)
   (<pa2d3> ^param-id 2 ^type single)
   #(<pa3d3> ^param-id 3 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name lower-card ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
   (<ag> ^1 <cs2> ^2 <cs3> ^num 2)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 1 ^type single)
   (<p12> ^param-id 2 ^type single)
   (<R92> ^set <S152>)
}


sp {topstate*elaborate*heuristic-president*clear
   (state <s> ^name learn-param
              ^gtype action
              ^action.nlp-set.aname play-clear)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^disprefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 1)
(<pref> ^1 <cs2>)
  (<nlps> ^nlp <cs2> ^aname heuristic2)

   (<cs2> ^result.set <res> ^name play-clear ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
   (<pa3> ^1 <pa1d> ^num 1)
   (<pa1d> ^param-id 1 ^type single)

}








   sp {chunk*chunk-parameters*propose*new-operator*snc*t71-4
    :chunk
    (state <s1> ^gtype action ^action <p1> ^list <l1>)
    (<p1> ^parameter-set <p2> ^potential-args <p3>) #^aname play-card 
    (<p2> ^tested calculate3 ^tested calculate2 ^tested calculate5 ^tested calculate6 
          ^tested calculate4 ^tested calculate1 ^set <s2>)
    (<l1> ^game <g1>)
  #  (<g1> ^type predicate)
    -->
    (<p1> ^pair <s2> +)
}


#sp {topstate*elaborate*heuristic-president*clear3
#   (state <s> ^name learn-param3
#              ^gtype action
#              ^action.nlp-set.aname play-clear)
#-->
#    (<s> ^predicate <T5> ^gtype predicate)
#   
#   (<T5> ^nlp-set <nlps> ^disprefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
#(<P124> ^argnum 2)
#(<pref> ^1 <cs2>)
#  (<nlps> ^nlp <c6z> <c5z> ^aname heuristic2)
#
#   (<cs2> ^result.set <res> ^name any ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
#   (<pa3> ^1 <pa1d> ^num 1)
#   (<pa1d> ^param-id 1 ^type single)
#   
#   (<c6z> ^name value ^args <ag11z> ^parameter <p3z7z> ^rtype single ^return-type number ^type attribute-of ^attribute none ^negative false ^result.set <resz>)
#   (<p3z7z> ^1 <p11z> ^2 <p112z> ^num 2)
#   (<p11z> ^param-id 2 ^type single)
#   (<p112z> ^param-id 1 ^type single)
#   (<ag11z> ^2 <cs2> ^num 1)
#   
#   (<c5z> ^name number ^args <ag11zz> ^parameter <p4az> ^negative false ^type attribute ^attribute primitive ^rtype single ^result.set.pair <pa22z> ^return-type number)
#   (<p4az> ^1 <p4aaz> ^num 1)
#   (<p4aaz> ^param-id 2 ^type single)
#   (<pa22z> ^1 2)
#
#}

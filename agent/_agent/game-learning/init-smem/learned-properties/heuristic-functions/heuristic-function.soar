
#contains heuristic functions and related functions

#distance functions
#manhattan
#euclidean
#h1 hamming distance = count mismatch
#h2 sum manhattan distances

#predicates
#mismatch-on

#average
#more(set,set)
#max?
#square
#abs

#state-eval

#hamming distance
sp {topstate*elaborate*hamming-distance
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name hamming-distance)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
  (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)

  (<nlps> ^nlp <cs1> ^aname hamming-distance)
   
   
   (<cs1> ^name count ^result.set <res2> ^rtype single ^negative true ^parameter <p3z> ^args <ag1> ^return-type number ^type function ^function soar-count)
   (<ag1> ^2 <cs2> ^num 1)
   (<p3z> ^1 <p1b> ^num 1)
   (<p1b> ^param-id 1 ^type single)
  # (<p2b> ^param-id 2 ^type set)
   
   (<cs2> ^name mismatch-on-color ^rtype single ^negative false ^args <ag5asdf> ^parameter.num 0 ^type concept ^attribute predicate ^result.set <rset>)
   
}

#only want sum of location to location of colors
#this sums pairwise all
sp {topstate*elaborate*manhattan-sum
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name manhattan-sum)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
  (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)

  (<nlps> ^nlp <cs1> ^aname manhattan-sum)
   
   
   (<cs1> ^name count ^result.set <res2> ^rtype single ^negative true ^parameter <p3z> ^args <ag1> ^return-type number ^type function ^function soar-count)
   (<ag1> ^2 <cs2> ^num 1)
   (<p3z> ^1 <p1b> ^num 1)
   (<p1b> ^param-id 1 ^type single)
  # (<p2b> ^param-id 2 ^type set)
   
   (<cs2> ^name manhattan-distance ^rtype single ^negative false ^args <ag5asdf> ^parameter.num 0 ^type concept ^attribute predicate ^result.set <rset>)
   
}
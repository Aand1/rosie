sp {topstate*elaborate*heuristic
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname place-block)
#   (<co> ^type concept ^attribute predicate ^name heuristic)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^disprefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<pref> ^1 <cs2>)
##action stack
  (<nlps> ^nlp <cs2> <c5> ^aname heuristic)#^nlp <cs> <cs1>

   (<cs2> ^result.set <res> ^name place-block ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
   (<pa3> ^1 <pa1d> ^2 <pa2d> ^num 2)
   (<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 2 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name center ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
            (<R94> ^set <S158>)
   (<ag> ^1 <c4> ^num 1)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 2 ^type single)
   (<R92> ^set <S152>)
   
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)

}

sp {topstate*elaborate*heuristic3
   (state <s> ^name learn-param2
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname place-block)
#   (<co> ^type concept ^attribute predicate ^name heuristic)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^prefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<pref> ^1 <cs2>)
  (<nlps> ^nlp <cs2> <c5> ^anam0e heuristic)

   (<cs2> ^result.set <res> ^name place-block ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
   (<pa3> ^1 <pa1d> ^2 <pa2d> ^num 2)
   (<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 2 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name win-setup ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 2 ^type single)
   (<R92> ^set <S152>)

}

sp {topstate*elaborate*heuristic4
   (state <s> ^name learn-param2
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname place-block)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^prefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<pref> ^1 <cs2>)
  (<nlps> ^nlp <cs2> <c5> ^aname heuristic)

   (<cs2> ^result.set <res> ^name place-block ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
   (<pa3> ^1 <pa1d> ^2 <pa2d> ^num 2)
   (<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 2 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name fork-location ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 2 ^type single)
   (<R92> ^set <S152>)

}

sp {topstate*elaborate*heuristic5
   (state <s> ^name learn-param2
              ^gtype <gtype>
              ^<gtype>.nlp-set.aname place-block)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^prefer <pref> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^ntype heuristic)
(<P124> ^argnum 2)
(<pref> ^1 <cs2>)
  (<nlps> ^nlp <cs2> <c5> ^aname heuristic)

   (<cs2> ^result.set <res> ^name place-block ^args <aag5> ^parameter <pa3> ^type concept ^attribute action)
   (<pa3> ^1 <pa1d> ^2 <pa2d> ^num 2)
   (<pa1d> ^param-id 1 ^type single)
   (<pa2d> ^param-id 2 ^type single)
     
   (<c5> ^args <ag> ^attribute predicate ^name block-location ^negative false
                 ^parameter <param1> ^result <R92> ^rtype single ^type concept)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 2 ^type single)
   (<R92> ^set <S152>)

}

   sp {chunk*chunk-parameters*propose*new-operator*snc*t71-4
    :chunk
    (state <s1> ^gtype action ^action <p1> ^list <l1>)
    (<p1> ^aname place-block ^parameter-set <p2> ^potential-args <p3>)
    (<p2> ^tested calculate3 ^tested calculate2 ^tested calculate5 ^tested calculate6 
          ^tested calculate4 ^tested calculate1 ^set <s2>)
    (<l1> ^game <g1>)
  #  (<g1> ^type predicate)
    -->
    (<p1> ^pair <s2> +)
}
#COMPLETED 6
#Tested 6
#contains
#adjacent
#clear
#mine (own/ block) (red)
#own location
#theirs/enemies (black)
#owned by enemies (occupied)
  
           
sp {topstate*elaborate*free
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name free)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125>)
(<P124> ^argnum 1)

##action stack
  (<nlps> ^nlp <cs> ^aname free)#^nlp <cs> <cs1>

   
   (<cs> ^result.set <res> ^name on ^parameter <param1> ^rtype single ^negative true ^args <ag> ^type state-pair ^attribute prepositions)
   (<ag> ^1 <c5> ^2 <c11> ^num 2)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 1 ^type single)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
            
   (<c11> ^result.set <res1> ^name location ^parameter.num 0 ^rtype single ^negative false ^args <ag11> ^type attribute ^attribute type)
   (<ag11> ^1 <c5> ^num 1)
 
}  
#sp {chunk*elaborate*clear
#   (state <s> ^name game-search
#              ^gtype <gtype>
#              ^<gtype>.condition <co>)
#   (<co> ^type concept ^attribute predicate ^name clear)
#-->
#   (<cs> ^result <r4> ^name below1 ^parameter <param1> ^rtype single ^negative true ^args <ag> ^type state-pair ^attribute prepositions)
#   (<r4> ^set <res4>)
#   (<ag> ^1 <c5> ^2 <c6> ^num 2)
#   (<param1> ^1 <p11> ^num 1)
#   (<p11> ^param-id 1 ^type single)     
#   
#    (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false ^result <r5>
#                 ^parameter <P225> ^rtype single)
#   (<P225> ^1 <P224> ^num 1)
#   (<r5> ^set <res0>)
#   (<P224> ^param-id 1 ^type single)
#   
#   (<c6> ^args <A56> ^attribute primitive ^name object ^negative false
#                 ^parameter <P226> ^result <R96> ^rtype single ^type attribute)
#            (<P226> ^num 0)
#            (<R96> ^set <S156>)
#}

sp {topstate*elaborate*clear
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name clear)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)

##action stack
  (<nlps> ^nlp <cs> ^aname clear)#^nlp <cs> <cs1>

   
   (<cs> ^result.set <res> ^name below ^parameter <param1> ^rtype single ^negative true ^args <ag> ^type state-pair ^attribute prepositions)
   (<ag> ^1 <c5> ^2 <c5> ^num 2)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 1 ^type single)
     
   
    (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false ^result.set <res0>
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
 
}
sp {topstate*elaborate*adjacent
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name adjacent)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
  (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)# ^condition <C85> <C86>)
## eight-puzzle action
(<P124> ^argnum 2)
   (<nlps> ^aname adjacent ^nlp <C85> ^nlp <C86>)
   
  (<C85> ^args <A46> ^attribute prepositions ^name diagonal-with ^negative true
         ^parameter <P107> ^result <R96> ^rtype single ^type state-pair)
    (<A46> ^1 <C87> ^2 <C87> ^num 2)
      (<C87> ^args <A56> ^attribute type ^name location ^negative false
             ^parameter <P226> ^result <R98> ^rtype single ^type attribute)
        (<A56> ^1 <C144> ^num 1)
          (<C144> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
        (<P226> ^num 0)
        (<R98> ^set <S161>)
    (<P107> ^1 <P108> ^2 <P109> ^num 2)# ^result <R92>)
      (<P108> ^param-id 2 ^type single)
      (<P109> ^param-id 1 ^type single)
      #(<R92> ^link <P108>)
    (<R96> ^set <S159>)
  (<C86> ^args <A45> ^attribute prepositions ^name near ^negative false
         ^parameter <P104> ^result <R97> ^rtype single ^type state-pair)
    (<A45> ^1 <C87> ^2 <C87> ^num 2)
    (<P104> ^1 <P105> ^2 <P106> ^num 2)# ^result <R93>)
      (<P105> ^param-id 1 ^type single)
      (<P106> ^param-id 2 ^type single)
     # (<R93> ^link <P105>)
    (<R97> ^set <S160>)
        
}

sp {topstate*elaborate*mine
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name mine)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <cs> ^aname mine)#^nlp <cs> <cs1>

   
   (<cs> ^result.set <res> ^name red ^parameter <param1> ^rtype single ^negative false ^args <ag> ^type attribute ^attribute word)
   (<ag> ^1 <c5> ^num 1)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 1 ^type single)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*my-pieces
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name my-pieces)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <cs> ^aname my-pieces)#^nlp <cs> <cs1>

   
   (<cs> ^result.set <res> ^name red ^parameter <param1> ^rtype set ^negative false ^args <ag> ^type attribute ^attribute word)
   (<ag> ^1 <c5> ^num 1)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 1 ^type set)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*own
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name own)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <cs2> ^aname own)#^nlp <cs> <cs1>

 (<cs2> ^result.set <res> ^name below ^parameter <param2> ^rtype single ^negative false ^args <ag2> ^type state-pair ^attribute prepositions)
   (<ag2> ^1 <cs3> ^2 <cs> ^num 2)
   (<param2> ^1 <p12> ^num 1)
   (<p12> ^param-id 1 ^type single)
   
   (<cs3> ^result.set <res2> ^name location ^parameter.num 0 ^rtype single ^negative false ^args <ag3> ^type attribute ^attribute type)
   (<ag3> ^1 <c5> ^num 1)
  # (<param3> ^1 <p11> ^num 1)
   #(<p13> ^param-id 1 ^type single)
   
   (<cs> ^result.set <res3> ^name red ^parameter.num 0 ^rtype single ^negative false ^args <ag> ^type attribute ^attribute word)
   (<ag> ^1 <c5> ^num 1)
   #(<param1> ^1 <p11> ^num 1)
   #(<p11> ^param-id 1 ^type single)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*opponent
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name opponent)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <cs> ^aname opponent)#^nlp <cs> <cs1>

   
   (<cs> ^result.set <res> ^name blue ^parameter <param1> ^rtype single ^negative false ^args <ag> ^type attribute ^attribute word)
   (<ag> ^1 <c5> ^num 1)
   (<param1> ^1 <p11> ^num 1)
   (<p11> ^param-id 1 ^type single)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*occupied
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name occupied)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <cs2> ^aname occupied)

 (<cs2> ^result.set <res> ^name below ^parameter <param2> ^rtype single ^negative false ^args <ag2> ^type state-pair ^attribute prepositions)
   (<ag2> ^1 <cs3> ^2 <cs> ^num 2)
   (<param2> ^1 <p12> ^num 1)
   (<p12> ^param-id 1 ^type single)
   
   (<cs3> ^result.set <res2> ^name location ^parameter.num 0 ^rtype single ^negative false ^args <ag3> ^type attribute ^attribute type)
   (<ag3> ^1 <c5> ^num 1)
   
   (<cs> ^result.set <res3> ^name blue ^parameter.num 0 ^rtype single ^negative false ^args <ag> ^type attribute ^attribute word)
   (<ag> ^1 <c5> ^num 1)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}


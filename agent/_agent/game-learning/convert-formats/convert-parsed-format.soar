##Move a clear block onto a clear object.
#
#sp {convert-parsed-format*elaborate*sentence
#   (state <s> ^name convert-parsed-format)
#-->
#   (<s> ^sentence <S114>)
#(<S114> ^action <A1008> ^arg1 <P90086> ^arg2 <S373> ^message-type command)
#  (<A1008> ^handle move1 ^item-type action)
#  (<P90086> ^handle new-object-id1 ^item-type object ^predicates <P90087>
#         ^predicates-copied true)
#    (<P90087> ^category block1 ^dialog-object true ^property clear)
#  (<S373> ^2 <P90131> ^handle on1 ^item-type predicate)
#    (<P90131> ^handle new-object-id2 ^item-type object ^predicates <P90132>
#           ^predicates-copied true ^relations <S367>)
#      (<P90132> ^category object ^dialog-object true ^property clear)
#      (<S367> ^2 <P90086> ^handle larger-than1) 
##   (<s> ^sentence <S111>)
##(<S111> ^action <A1008> ^arg1 <P90101>
##       ^arg2 <S267> ^message-type command)
##  (<A1008> ^handle move1 ^item-type action)
##  (<P90101> ^handle new-object-id2 ^item-type object ^predicates <P90102>
##         ^predicates-copied true)
##    (<P90102> ^category block1 ^dialog-object true ^property clear)
##  (<S267> ^2 <P90093> ^handle on1 ^item-type predicate)
##    (<P90093> ^handle new-object-id1 ^item-type object ^predicates <P90094>
##           ^predicates-copied true)
##      (<P90094> ^category object ^dialog-object true ^property clear)
##
##   (<s> ^sentence <S298>)
##(<S298> ^arg1 <P90101>
##       ^message-type object-description ^predicate <S454>)
##  (<P90101> ^handle new-object-id2 ^item-type object ^predicates <P90102>
##         ^predicates-copied true)
##    (<P90102> ^category block1 ^dialog-object true ^property clear)
##  (<S454> ^2 <P90093> ^handle smaller-than1 ^item-type predicate)
##    (<P90093> ^handle new-object-id1 ^item-type object ^predicates <P90094>
##           ^predicates-copied true)
##      (<P90094> ^category object ^dialog-object true ^property clear)
#}
      
##The block is smaller than the object.

#The goal is that a large block is on a blue location and a medium block is on the large block and a small block is on the medium block.
sp {convert-parsed-format*elaborate*sentence
   (state <s> ^name convert-parsed-format)
-->
   (<s> ^sentence <S114>)
(<S114> ^arg1 <G5> ^message-type object-description ^subclause <S188>)
  (<G5> ^handle goal1 ^property <C21>)
    (<C21> ^handle concept ^type conceptual)
  (<S188> ^subclause <S417> ^subclause <S767>)
    (<S417> ^subclause <S538> ^subclause <S313>)
      (<S538> ^arg1 <P90120> ^predicate <S633>)
        (<P90120> ^handle new-object-id3 ^item-type object ^predicates <P90121>
               ^predicates-copied true)
          (<P90121> ^category block1 ^dialog-object true ^size medium1)
        (<S633> ^2 <P90087> ^handle on1 ^item-type predicate)
      (<S313> ^arg1 <P90087> ^predicate <S404>)
        (<P90087> ^handle new-object-id1 ^item-type object ^predicates <P90088>
               ^predicates-copied true)
          (<P90088> ^category block1 ^dialog-object true ^size large1)
        (<S404> ^2 <P90106> ^handle on1 ^item-type predicate)
          (<P90106> ^handle new-object-id2 ^item-type object ^predicates <P90107>
                 ^predicates-copied true)
            (<P90107> ^category location1 ^color blue1 ^dialog-object true)
    (<S767> ^arg1 <P90175> ^predicate <S862>)
      (<P90175> ^handle new-object-id4 ^item-type object ^predicates <P90176>
             ^predicates-copied true)
        (<P90176> ^category block1 ^dialog-object true ^size small1)
      (<S862> ^2 <P90120> ^handle on1 ^item-type predicate)
}

#make to handle action with move


#smem handling
#sp {convert-parsed-format*elaborate*sentence
#   (state <s> ^name convert-parsed-format)
#-->
#   (<s> ^sentence <S195>)
#     (<S195> ^subclause <S320> ^subclause <S545>)
#    (<S320> ^arg1 <P90083> ^relation <S411>)
#      (<P90083> ^handle new-object-id1 ^predicates <P90084> ^predicates-copied true)
#        (<P90084> ^category block1 ^dialog-object true ^size large1)
#      (<S411> ^arg2 <P90102> ^handle on1)
#        (<P90102> ^handle new-object-id2 ^predicates <P90103> ^predicates-copied true)
#          (<P90103> ^category location1 ^color blue1 ^dialog-object true)
#    (<S545> ^arg1 <P90116> ^relation <S640>)
#      (<P90116> ^handle new-object-id3 ^predicates <P90117> ^predicates-copied true)
#         (<P90117> ^category block1 ^dialog-object true ^size medium1)
#      (<S640> ^arg2 <P90083> ^handle on1)
#}

sp {convert-parsed-format*elaborate*object-count
   (state <s> ^name convert-parsed-format)
-->
   (<s> ^object-count 1
        ^nlp-set <nps>)
}
#sp {convert-parsed-format*elaborate*sentence*subclause
#   (state <s> ^name convert-parsed-format
#              ^sentence <s2>)
#   (<s2> ^subclause <s1>)
#-->
#   (<s> ^clause <s1>)
#}
sp {convert-parsed-format*elaborate*sentence*subclause
   (state <s> ^name convert-parsed-format
              ^sentence <s2>)
-->
   (<s> ^clause <s2>)
}
sp {convert-parsed-format*elaborate*clause*subclause
   (state <s> ^name convert-parsed-format
              ^clause <c>)
   (<c> ^subclause <s1>)
-->
   (<s> ^clause <s1>)
}
#sp {convert-parsed-format*elaborate*arg1*parameter*from*sentence
#   (state <s> ^name convert-parsed-format
#              ^sentence <c>)
#   (<c> ^<< arg1 arg2 >> <p>)
#   (<p> ^item-type object)
#-->
#   (<s> ^parameter <p>)
#}

sp {convert-parsed-format*elaborate*arg1*parameter
   (state <s> ^name convert-parsed-format
              ^clause <c>)
   (<c> ^<< arg1 arg2 >> <p>)
   (<p> ^item-type object)
 #  (<p> ^predicates <pred>)
-->
   (<s> ^parameter <p>)
}
sp {convert-parsed-format*elaborate*arg1*relation*parameter
   (state <s> ^name convert-parsed-format
              ^clause <c>)
   (<c> ^<< arg1 arg2 >> <a>)
   (<a> ^2 <p>)
   (<p> ^item-type object)
 #  (<p> ^predicates <pred>)
-->
   (<s> ^parameter <p>)
}


sp {convert-parsed-format*elaborate*parameter*relation*parameter
   (state <s> ^name convert-parsed-format
              ^parameter <p>)
   (<p> ^relations <r>)
   (<r> ^2 <pp>)
   (<pp> ^item-type object)
-->
   (<s> ^parameter <pp>)
}

sp {convert-parsed-format*elaborate*arg2*parameter
   (state <s> ^name convert-parsed-format
              ^clause <c>)
   (<c> ^predicate.{2} <p>)
   #(<p> ^predicates <pred>)
   (<p> ^item-type object)
-->
   (<s> ^parameter <p>)
}

#bias preference for order of mention hack, want real order
sp {prefer*create-object*lower*hanlde*convert-parsed-format
   (state <s> ^name convert-parsed-format
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object ^parameter.handle {<h1> < <h2>})
   (<o2> ^name create-object ^parameter.handle <h2>)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*create-object*over*handle-clause*convert-parsed-format
   (state <s> ^name convert-parsed-format
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object)
   (<o2> ^name handle-clause)
-->
   (<s> ^operator <o1> > <o2>)
}
sp {prefer*handle-clause*over*complete*convert-parsed-format
   (state <s> ^name convert-parsed-format
              ^operator <o1> +
              ^operator <o2> +)
   (<o2> ^name complete)
   (<o1> ^name handle-clause)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {prefer*create-object*over*handle-clause*convert-parsed-format
   (state <s> ^name convert-parsed-format
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name create-object)
   (<o2> ^name handle-clause)
-->
   (<s> ^operator <o1> > <o2>)
}


sp {convert-parsed-format*propose*create-object
   (state <s> ^name convert-parsed-format
              ^parameter <c>)
   (<c> -^formatted)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-object
        ^parameter <c>)
}
sp {convert-parsed-format*apply*create-object*increment-object-count
   (state <s> ^name convert-parsed-format
              ^object-count <oc>
              ^operator <o>)
   (<o> ^name create-object ^parameter <c>)
   (<c> -^parameter-index)
-->
   (<c> ^parameter-index <oc>)
   (<s> ^object-count (+ 1 <oc>))
   (<s> ^object-count <oc> -) 
}

sp {create-object*elaborate*parameter
   (state <s> ^name create-object
              ^superstate.operator.parameter <c>)
-->
   (<s> ^parameter <c>)
}

sp {create-object*elaborate*category
   :o-support
   (state <s> ^name create-object
              ^parameter <c>)
   (<c> ^predicates.category {<cat> <> object} -^plural true)
-->
   (<s> ^condition <c1> ^last-condition <c1>)
   (<c1> ^name <cat> ^type attribute ^attribute type ^rtype single)
}

sp {create-object*elaborate*cateogy*object
   :o-support
   (state <s> ^name create-object
              ^parameter <c>)
   (<c> ^predicates.category {<cat> << object >>} -^plural true)
-->
   (<s> ^condition <c1> ^last-condition <c1>)
   (<c1> ^name <cat> ^type attribute ^attribute primitive ^rtype single)
}

sp {create-object*elaborate*plural
   :o-support
   (state <s> ^name create-object
              ^parameter <c>)
   (<c> ^predicates.category <cat> ^plural true)
-->
   (<s> ^condition <c1> ^last-condition <c1>)
   (<c1> ^name <cat> ^type attribute ^attribute type ^rtype set)
}

sp {create-object*propose*unary-predicate
   (state <s> ^name create-object
             -^condition.name <val>
              ^parameter <c>)
   (<c> ^predicates <p>)
   (<p> ^{<att> <> category <> dialog-object} <val>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name unary-predicate
        ^attribute <att>
        ^value <val>)
}

sp {create-object*elaborate*condition
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<cond> ^rtype <rtype>)
   (<o> ^name unary-predicate
        ^attribute {<att> << color size shape >>}
        ^value <val>)
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^type attribute ^attribute <att> ^rtype <rtype> ^args <a>)
   (<a> ^1 <cond>)
   (<s> ^last-condition <cond> -)
   (<s> ^last-condition <co>)
}

sp {create-object*elaborate*condition*learned-predicate
   (state <s> ^name create-object
              ^operator <o>
              ^last-condition <cond>
              ^parameter <c>)
   (<cond> ^rtype <rtype>)
   (<o> ^name unary-predicate
        ^attribute property
        ^value <val>)
-->
   (<s> ^condition <co>)
   (<co> ^name <val> ^type concept ^attribute predicate ^rtype <rtype> ^args <a>)
   (<a> ^1 <cond>)
   (<s> ^last-condition <cond> -)
   (<s> ^last-condition <co>)
}
sp {create-object*propose*complete
   (state <s> ^name create-object
              ^parameter <c>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete)
}
sp {create-object*apply*complete
   (state <s> ^name create-object
              ^operator.name complete
              ^last-condition <cond>
              ^parameter <c>)
-->
   (<c> ^formatted <cond>)
}
   
   
#problems
#indefinite?
#easy for negation and one usage
#otherwise othello the set is below white blocks)

#####claus
sp {convert-parsed-format*propose*handle-clause*parameter
   (state <s> ^name convert-parsed-format
              ^parameter <p>)
   (<p> ^relations <r>)
   (<r> -^formatted)
-->
   (<s> ^operator <o> + =)
   (<o> ^name handle-clause
        ^parameter <p>)
}

sp {convert-parsed-format*propose*handle-clause
   (state <s> ^name convert-parsed-format
              ^clause <c>)
   (<c> ^arg1 ^predicate -^formatted)
-->
   (<s> ^operator <o> + =)
   (<o> ^name handle-clause
        ^clause <c>)
}

sp {convert-parsed-format*apply*handle-clause
   (state <s> ^name convert-parsed-format
              ^operator <o>)
   (<o> ^name handle-clause ^clause <c>)
   (<c> ^arg1 <c1> ^predicate <r>)
   (<r> ^handle <name> ^2 <c2> -^3)
   (<c1> ^formatted <p> ^parameter-index <id>)
   (<c2> ^formatted <p2> ^parameter-index <id2>)
   (<p> ^rtype <rtype>)
   (<p2> ^rtype <rtype2>)
-->
   (<c> ^formatted true)
   (<s> ^nlp <n>)
   (<n> ^name <name> ^args <a> ^parameter <para> ^type state-pair ^attribute prepositions ^rtype <rtype>)
   (<a> ^1 <p> ^2 <p2>)
   (<para> ^1 <para1> ^2 <para2>)
   (<para1> ^param-id <id> ^type <rtype>)
   (<para2> ^param-id <id2> ^type <rtype2>)
   
}

sp {convert-parsed-format*apply*handle-clause*parameter
   (state <s> ^name convert-parsed-format
              ^operator <o>)
   (<o> ^name handle-clause ^parameter <c1>)
   (<c1> ^relations <r>)

   (<r> ^handle <name> ^2 <c2> -^3)
   (<c1> ^formatted <p> ^parameter-index <id>)
   (<c2> ^formatted <p2> ^parameter-index <id2>)
   (<p> ^rtype <rtype>)
   (<p2> ^rtype <rtype2>)
-->
   (<r> ^formatted true)
   (<s> ^nlp <n>)
   (<n> ^name <name> ^args <a> ^parameter <para> ^type state-pair ^attribute prepositions ^rtype <rtype>)
   (<a> ^1 <p> ^2 <p2>)
   (<para> ^1 <para1> ^2 <para2>)
   (<para1> ^param-id <id> ^type <rtype>)
   (<para2> ^param-id <id2> ^type <rtype2>)
   
}


#todo
#indifferent handling
#better ordering of param ids
#more concat
#handle negation
#ok if not optimal... with fewer args
#3 argument predicates

#elaborate subclauses
#first version dont order predicates
#first go through and add parameter tags?
#create temp ref to last mentioned nlp that mentions that?
#first bare bones
#then add type, attribute function information lookup smem?


sp {convert-parsed-format*propose*complete
   (state <s> ^name convert-parsed-format)
-->
   (interrupt)
   (<s> ^operator <op> + <)
   (<op> ^name complete)
}

sp {convert-parsed-format*apply*complete
   (state <s> ^name convert-parsed-format
              ^nlp-set <nps>
              ^nlp <nlp>
              ^operator.name complete)
-->
   (<nps> ^nlp <nlp>)
}
sp {convert-parsed-format*apply*complete*superstate*copy
   (state <s> ^name convert-parsed-format
              ^superstate <ss>
              ^nlp-set <nps>
              ^operator.name complete)
 #  (<nps> ^aname <aname>)
   -{(<s> ^nlp <nlp>)
     (<nps> -^nlp <nlp>)}
(<ss> ^action <a>)
-->
   (<a> ^nlp-set <nps> ^aname wtf)
   (<nps> ^aname wtf)
  #      ^aname <aname>)
}
sp {execute-primitive-action*elaborate*until-clause*state*predicate*satisfied
   (state <s> ^problem-space.name action
              ^until-clause <until>
              ^world.objects.object <obj>)
   (<until> ^predicate <pred>)
   (<pred> ^type state
           ^handle <pred-handle>
           ^property-handle <prop-handle>
           ^{1} <obj>)
   (<obj> ^predicates.<prop-handle> <pred-handle>)
-->
   (<pred> ^satisfied true)
}

sp {execute-primitive-action*elaborate*until-clause*state*relation*satisfied
   (state <s> ^problem-space.name action
              ^until-clause <until>
              ^world <world>)
   (<until> ^predicate <until-pred>)
   (<until-pred> ^type relation
           ^handle <pred-handle>
           ^1 <obj1>
           ^2 <obj2>)
   (<world> ^predicates.predicate <pred>
            ^objects.object <obj1>
            ^objects.object <obj2>)
   (<pred> ^handle <pred-handle>
           ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
-->
   (<until-pred> ^satisfied true)
}

sp {execute-primitive-action*elaborate*until-clause*satisfied*1*predicate
   (state <s> ^problem-space.name action
              ^until-clause <until>)
   (<until> ^predicate <p1>
           -^predicate { <p2> <> <p1> })
   (<p1> ^satisfied true)
-->
   (<until> ^satisfied true)
}

sp {execute-primitive-action*elaborate*until-clause*satisfied*2*predicates
   (state <s> ^problem-space.name action
              ^until-clause <until>)
   (<until> ^predicate <p1>
            ^predicate <p2> > <p1>
           -^predicate { <p3> <> <p1> <> <p2> })
   (<p1> ^satisfied true)
   (<p2> ^satisfied true)
-->
   (<until> ^satisfied true)
}

sp {execute-primitive-action*elaborate*until-clause*satisfied*3*predicates
   (state <s> ^problem-space.name action
              ^until-clause <until>)
   (<until> ^predicate <p1>
            ^predicate <p2> > <p1>
            ^predicate <p3> > <p2>
           -^predicate { <p4> <> <p1> <> <p2> <> <p3> })
   (<p1> ^satisfied true)
   (<p2> ^satisfied true)
   (<p3> ^satisfied true)
-->
   (<until> ^satisfied true)
}

 
 

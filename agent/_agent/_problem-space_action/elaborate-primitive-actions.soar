
sp {action*elaborate*put-down*relation*from*action-context
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^action-to-match.arg2.handle <rel-handle>
              ^operator <o> +)
   (<o> ^name initiate-put-down1
        ^arg2 <arg2>)
-->
   (<arg2> ^handle <rel-handle>)
}

sp {action*elaborate*put-down*relation*from*desired
   (state <s> ^problem-space.name action
              ^problem-space.action.type <any>
              ^operator <o> +
              ^desired.predicate <rel-pred>)
   (<rel-pred> ^type relation
               ^handle <rel-handle>)
   (<o> ^name initiate-put-down1
        ^arg2 <arg2>)
-->
   (<arg2> ^handle <rel-handle>)
}

sp {action*elaborate*remember*arg2*from*action-operator
   (state <s> ^problem-space.name action
              ^action-to-match <action>
              ^operator <o> +)
   (<action> ^action-handle remember1
             ^arg2 <arg2>)
   (<arg2> ^arg-type object
           ^id <obj2>)
   (<o> ^name initiate-remember1)
-->
   (<o> ^arg2 <new-arg2>)
   (<new-arg2> ^arg-type object
               ^id <obj2>)
}

sp {action*elaborate*evaluate-operator*remember*arg2*from*action-operator
   (state <s> ^problem-space.name action
              ^action-to-match <action>
              ^operator <o> +)
   (<action> ^action-handle remember1
             ^arg2 <arg2>)
   (<arg2> ^arg-type object
           ^id <obj2>)
   (<o> ^name evaluate-operator
        ^superoperator <ssop>)
   (<ssop> ^name initiate-remember1)
-->
   (<ssop> ^arg2 <new-arg2>)
   (<new-arg2> ^arg-type object
               ^id <obj2>)
}
   


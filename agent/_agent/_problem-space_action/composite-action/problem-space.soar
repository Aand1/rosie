sp {action*composite-action*problem-space
   (state <s> ^superstate.problem-space.name action
              ^superstate.operator.action-type composite)
-->
   (<s> ^problem-space <ps>)
   (<ps> ^name action
         ^action-type composite
         ^action <action>
         ^state.world-copy shallow
         ^learning <learn>)
}

sp {action*composite-action*elaborate*problem-space*action*type*superstate
   (state <s> ^problem-space <ps>
              ^superstate.problem-space.action.type <type>)
   (<ps> ^name action
         ^action-type composite
         ^action <action>)
-->
   (<action> ^type <type>)
}

sp {action*composite-action*elaborate*problem-space*learning*type*superstate
   (state <s> ^problem-space <ps>
              ^superstate.problem-space.learning.type <type>)
   (<ps> ^name action
         ^action-type composite
         ^learning <learn>)
-->
   (<learn> ^type <type>)
}

sp {action*composite-action*problem-space*elaborate*propose-action-operators
   (state <s> ^problem-space <ps>
              ^action-context.action-type composite
              ^desired <des>)
   (<ps> ^name action
         ^action <action>)
-->
   (<action> ^propose-action-operators true)
}
sp {action*execute*propose*report-performed-action
   (state <s> ^problem-space.name action
              ^problem-space.action.type execute
              ^action-context <context>
              ^desired.satisfied true)
-->
   (<s> ^operator <o> + >)
   (<o> ^name report-performed-action)
}

sp {action*apply*report-performed-action
   (state <s> ^problem-space.name action
              ^operator.name report-performed-action
              ^action-context.action-handle <action-handle>
              ^top-state.interaction.status <status>)
-->
   (<status> ^performed.action-event.type <action-handle>)
}
   
sp {action*apply*report-performed-action*push*learning*segment
   (state <s> ^problem-space.name action
              ^operator.name report-performed-action
              ^action-context <a>
              ^top-state.interaction.changes <changes>)
   (<a> ^needed-policy-help true)
-->
   (<changes> ^new-segment-info <info>)
   (<info> ^purpose <p>
           ^originator agent)
   (<p> ^type retrospective-learning
        ^parameters <params>
        ^satisfaction.learning-event.type retrospective)
   (<params> ^action-context <a>)
}

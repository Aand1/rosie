sp {learn-subaction-proposal*propose*create-imagined-object
   (state <s> ^name learn-subaction-proposal
              ^argument-match-info <info>)
   (<info> -^matches <any>
           -^matches-imagined
            ^slot.imagined <img>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
}

# Creating structure for imagined objects 
sp {learn-subaction-proposal*elaborate*argument-match-info*matches-imagined*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^argument-handle <handle>)
-->
   (<info> ^matches-imagined <handle>)
}

sp {learn-subaction-proposal*apply*create-imagined-object*create*object*1*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^<prop1> <pred1>)
   -{(<img> ^{ <prop2> <> <prop1> })}
-->
   (<info> ^matches-imagined <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>)
}

sp {learn-subaction-proposal*apply*create-imagined-object*create*object*2*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^<prop1> <pred1>
          ^{<prop2> > <prop1>} <pred2>)
   -{(<img> ^{ <prop3> <> <prop1> <> <prop2> })}
-->
   (<info> ^matches-imagined <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>)
}

sp {learn-subaction-proposal*apply*create-imagined-object*create*object*3*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^<prop1> <pred1>
          ^{<prop2> > <prop1>} <pred2>
          ^{<prop3> > <prop2>} <pred3>)
   -{(<img> ^{ <prop4> <> <prop1> <> <prop2> <> <prop3>})}
-->
   (<info> ^matches-imagined <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>)
}

sp {learn-subaction-proposal*apply*create-imagined-object*create*object*4*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^<prop1> <pred1>
          ^{<prop2> > <prop1>} <pred2>
          ^{<prop3> > <prop2>} <pred3>
          ^{<prop4> > <prop3>} <pred4>)
   -{(<img> ^{ <prop5> <> <prop1> <> <prop2> <> <prop3> <> <prop4>})}
-->
   (<info> ^matches-imagined <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>)
}

sp {learn-subaction-proposal*apply*create-imagined-object*create*object*5*predicate
   (state <s> ^name learn-subaction-proposal
              ^operator <o>)
   (<o> ^name create-imagined-object
        ^imagined <img>
        ^match-info <info>)
   (<img> ^<prop1> <pred1>
          ^{<prop2> > <prop1>} <pred2>
          ^{<prop3> > <prop2>} <pred3>
          ^{<prop4> > <prop3>} <pred4>
          ^{<prop5> > <prop4>} <pred5>)
   -{(<img> ^{ <prop5> <> <prop1> <> <prop2> <> <prop3> <> <prop4> <> <prop5>})}
-->
   (<info> ^matches-imagined <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<prop1> <pred1>
            ^<prop2> <pred2>
            ^<prop3> <pred3>
            ^<prop4> <pred4>
            ^<prop5> <pred5>)
}



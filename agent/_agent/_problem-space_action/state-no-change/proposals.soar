sp {action*state*no-change*propose*no-proposed-action
   (state <s> ^superstate.problem-space.name action
              ^impasse no-change
              ^attribute state)
-->
   (<s> ^operator <o> + <)
   (<o> ^name no-proposed-action)
}

sp {action*state*no-change*propose*learn-desired-elaboration-rule
   (state <s> ^superstate.problem-space.name action
              ^superstate.action-context <action>
              ^superstate.superstate.operator <action>
              ^superstate.action-id <action-id>
              ^impasse no-change
              ^attribute state
             -^superstate.desired)
   (<action> ^action-type composite)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-desired-elaboration-rule
        ^action-context <action>
        ^action-id <action-id>)
}
             
sp {action*state*no-change*propose*learn-task-subaction
   (state <s> ^superstate.problem-space.name action
              ^impasse no-change
              ^attribute state
              ^superstate.action-to-match <atm>
              ^superstate.action-context <action>
              ^superstate.action-id <action-id>
             -^superstate.stored <atm>)
   (<atm> ^action-handle << remember1 >> )
-->
   (<s> ^operator <o> + )
   (<o> ^name learn-task-subaction
        ^subaction <atm>
        ^action-context <action>
        ^action-id <action-id>)
}

sp {action*state*no-change*propose*learn-subaction-proposal
   (state <s> ^superstate.problem-space.name action
              ^impasse no-change
              ^attribute state
              ^superstate.action-id.procedural <proc>
              ^superstate.action-context <action>
             -^proposed-subaction <sub>)
   (<proc> ^subaction <sub>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-subaction-proposal
        ^subaction-id <sub>
        ^procedural-id <proc>
        ^action-context <action>)
}
#
#sp {action*state*no-change*propose*locate-non-visible-object*level1
#   (state <s> ^superstate.problem-space.name action
#              ^impasse no-change
#              ^attribute state
#              ^superstate.action-to-match <atm>
#             -^superstate.problem-space.learning.type retrospective)
#   (<atm> ^action-type primitive
#          ^<arg-name> <arg>)
#   (<arg> ^arg-type << object location >>
#         -^imagined true
#          ^id <obj>)
#   (<obj> -^predicates.visible true)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name locate-non-visible-object
#        ^object <obj>)
#}
#sp {action*state*no-change*propose*locate-non-visible-object*level2
#   (state <s> ^superstate.problem-space.name action
#              ^impasse no-change
#              ^attribute state
#              ^superstate.action-to-match <atm>
#             -^superstate.problem-space.learning.type retrospective)
#   (<atm> ^action-type primitive
#          ^<arg-name> <arg>)
#   (<arg> ^arg-type predicate
#         -^imagined true
#          ^2 <obj>)
#   (<obj> -^predicates.visible true)
#-->
#   (<s> ^operator <o> + =)
#   (<o> ^name locate-non-visible-object
#        ^object <obj>)
#}
#   
#sp {action*state-no-change*elaborate*state-name*learn-desired-elaboration-rule
#   (state <s> ^superstate.problem-space.name action
#              ^superstate.action-context.action-type composite
#              ^attribute state
#             -^superstate.desired)
#-->
#   (<s> ^name learn-desired-elaboration-rule)
#}
#

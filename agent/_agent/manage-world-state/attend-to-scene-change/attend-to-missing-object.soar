# If the object is missing - delete it
sp {anystate*apply*attend-to-scene-change*missing-object*delete*object
   (state <s> ^operator <o>
             -^top-state.action-stack.object-set.object <obj>)
   (<o> ^name attend-to-scene-change
        ^change <change>)
   (<change> ^type missing-object
             ^object-info <obj-info>)
   (<obj-info> ^wm-obj <obj>)
-->
   (<obj-info> ^delete-object true)
}

sp {anystate*apply*attend-to-scene-change*missing-object*delete*belief*object
   (state <s> ^operator <o>
              ^top-state.action-stack.object-set.object <obj>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change <change>)
   (<change> ^type missing-object
             ^object-info <obj-info>)
   (<obj-info> ^wm-obj <obj>
               ^belief-obj.id <id>)
-->
   (<cmd> ^delete_node.id <id>)
}

# if debug-perception is on, print a message
sp {anystate*apply*attend-to-scene-change*attend-to-missing-object*debug-perception*print
   (state <s> ^operator <o>
              ^top-state.agent-params.debug-perception true)
   (<o> ^name attend-to-scene-change
        ^change <c>)
   (<c> ^type missing-object
        ^object-info.object-handle <handle>)
-->
   (write |Missing object | <handle> (crlf))
}
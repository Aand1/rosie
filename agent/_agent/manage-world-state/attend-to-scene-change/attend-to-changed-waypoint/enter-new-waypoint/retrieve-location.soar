sp {enter-new-waypoint*retrieve-location*elaborate*smem-query
   (state <s> ^name enter-new-waypoint
              ^new-waypoint.handle <wp-handle>
              ^new-location none
             -^retrieved-location)
-->
   (<s> ^smem-query <query>)
   (<query> ^cue <cue>
            ^depth 2)
   (<cue> ^waypoint <wp-handle>)
}

sp {enter-new-waypoint*retrieve-location*success*copy*location
   :o-support
   (state <s> ^name enter-new-waypoint
              ^new-waypoint.handle <wp-handle>
              ^smem-query <q>)
   (<q> ^cue.waypoint <wp-handle>
        ^result { <loc> <> failure })
-->
   (<s> ^new-location <loc>
        ^retrieved-location <loc>)
}

sp {enter-new-waypoint*retrieve-location*failure*copy*location
   :o-support
   (state <s> ^name enter-new-waypoint
              ^new-waypoint.handle <wp-handle>
              ^smem-query <q>)
   (<q> ^cue.waypoint <wp-handle>
        ^result failure)
-->
   (<s> ^new-location none
        ^retrieved-location none)
}

sp {enter-new-waypoint*propose*add-location-to-world
   (state <s> ^name enter-new-waypoint
              ^retrieved-location { <loc> <> none }
             -^top-state.world.objects.object.handle <loc-handle>)
   (<loc> ^handle <loc-handle>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name add-location-to-world
        ^location <loc>)
}

sp {enter-new-waypoint*apply*add-location-to-world*create*change*add-smem-object
   (state <s> ^name enter-new-waypoint
              ^operator <o>
              ^top-state.perception-monitor.changes <ch>)
   (<o> ^name add-location-to-world
        ^location <loc>)
-->
   (<ch> ^change <c>)
   (<c> ^type new-object
        ^smem-obj <loc>)
}
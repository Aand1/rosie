# Reject an attend-to-scene-change operator if attending to an object being moved

sp {anystate*reject*attend-to-scene-change*moving*object
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.object-info.wm-obj.predicates.arm-status << moving grabbed >>)
-->
   (<s> ^operator <o> -)
}

# Ordering of scene change operators

sp {anystate*attend-to-scene-change*prefer*higher*preference-order
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-scene-change
         ^preference-order <pref1>)
   (<o2> ^name attend-to-scene-change
         ^preference-order < <pref1>)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {anystate*attend-to-scene-change*prefer*equal*same*preference-order
   (state <s> ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-scene-change
         ^preference-order <pref>)
   (<o2> ^name attend-to-scene-change
         ^preference-order <pref>)
-->
   (<s> ^operator <o1> = <o2>)
}

sp {anystate*attend-to-scene-change*elaborate*default*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
       -^preference-order > 0)
-->
   (<o> ^preference-order 0)
}


# Preference Orders:

# update-object = 200
# delete-object = 200
# arm-status-change = 150
# new-location = 150
# different-moving-state = 150
# stale-object = 100
# shrunken-object = 90
# new-object = 60
# new-object = 50
# grown-object = 40
# moved-object = 30
# new-predicate = 20
# changed-predicate = 20
# status-change = 20
# recheck-occlusion = 10

sp {anystate*scene-change*update*delete*object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type << update-object delete-object >>) 
-->
   (<o> ^preference-order 200)
}

sp {anystate*scene-change*robot-changes*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type << changed-arm-status changed-robot-status changed-waypoint >>)
-->
   (<o> ^preference-order 150)
}

sp {anystate*scene-change*stale-object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type stale-object)
-->
   (<o> ^preference-order 100)
}

sp {anystate*scene-change*shrunken-object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type shrunken-object)
-->
   (<o> ^preference-order 90)
}

sp {anystate*scene-change*new-object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type new-object)
-->
   (<o> ^preference-order 60)
}

sp {anystate*scene-change*stability-timer-satisfied*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type << stability-timer-satisfied new-stable-object >>)
-->
   (<o> ^preference-order 50)
}

sp {anystate*scene-change*grown-object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type grown-object)
-->
   (<o> ^preference-order 40)
}

sp {anystate*scene-change*moved-object*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type moved-object)
-->
   (<o> ^preference-order 30)
}

sp {anystate*scene-change*unary*predicates*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type << changed-object-predicate changed-object-status >>)
-->
   (<o> ^preference-order 20)
}

sp {anystate*scene-change*recheck-occlusion*preference-order
   (state <s> ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type recheck-occlusion)
-->
   (<o> ^preference-order 10)
}

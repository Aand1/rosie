##################################################################
#
# Deleting an object from working memory/svs
#
##################################################################

sp {anystate*apply*attend-to-scene-change*delete-object*delete*belief*from*svs
   (state <s> ^operator <o> +
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.type delete-object
        ^change.object-info.belief-obj.id <id>)
-->
   (<cmd> ^delete_node.id <id>)
}

sp {anystate*apply*attend-to-scene-change*delete-object*delete*object-info
   (state <s> ^operator <o> +
              ^top-state.perception-monitor.object-monitor <obj-mon>)
   (<o> ^name attend-to-scene-change
        ^change.type delete-object
        ^change.object-info <obj-info>)
   (<obj-mon> ^object-info <obj-info>)
-->
   (<obj-mon> ^object-info <obj-info> -)
}
   
sp {anystate*apply*attend-to-scene-change*delete-object*report
   (state <s> ^operator <o> +
              ^top-state.agent-params.debug-mode on
              ^top-state.agent-params.debug-perception true)
   (<o> ^name attend-to-scene-change
        ^change.type delete-object
        ^change.object-info.object-handle <obj-handle>)
-->
   (write |Deleting Object | <obj-handle>)
}

sp {attend-to-new-object*propose*create-world-object
   (state <s> ^name attend-to-new-object
             -^created-world true)
-->
   (<s> ^operator <o> +)
   (<o> ^name create-world-object)
}

sp {attend-to-new-object*elaborate*create-world-object*object-handle
   (state <s> ^name attend-to-new-object
              ^operator <o> +
              ^{ << smem-obj epmem-obj >> }.handle <obj-handle>)
   (<o> ^name create-world-object)
-->
   (<o> ^object-handle <obj-handle>)
}

sp {attend-to-new-object*elaborate*create-world-object*object-handle*perception
   (state <s> ^name attend-to-new-object
              ^operator <o> +
              ^perception-obj.id <obj-handle>
             -^smem-obj.handle
             -^epmem-obj.handle)
   (<o> ^name create-world-object)
-->
   (<o> ^object-handle <obj-handle>)
}

sp {attend-to-new-object*apply*create-world-object*create*body
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object)
-->
   (<s> ^world-obj <obj>)
   (<obj> ^item-type object
          ^predicates <preds>)
}

sp {attend-to-new-object*apply*create-world-object*copy*handle
   (state <s> ^name attend-to-new-object
              ^operator <o>
              ^world-obj <obj>)
   (<o> ^name create-world-object
        ^object-handle <obj-handle>)
-->
   (<obj> ^handle <obj-handle>)
}

sp {attend-to-new-object*apply*create-world-object*copy*predicates*perception-obj
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^input-link-obj.classifications.<prop> <pred>
              ^world-obj.predicates <preds>)
-->
   (<preds> ^<prop> <pred>)
}

sp {attend-to-new-object*apply*create-world-object*copy*predicates*smem-obj*level2
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^smem-obj.{ <prop> <> handle <> item-type <> object-instance <> waypoint } <pred>
              ^world-obj.predicates <preds>)
-->
   (<preds> ^<prop> <pred>)
}

sp {attend-to-new-object*apply*create-world-object*copy*waypoint*smem-obj*level1
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^smem-obj.{ <att> << waypoint >> } <val>
              ^world-obj <obj>)
-->
   (<obj> ^<att> <val>)
}

sp {attend-to-new-object*apply*create-world-object*mark*in-smem
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^smem-obj.handle <any>
              ^world-obj <obj>)
-->
   (<obj> ^in-smem true)
}

sp {attend-to-new-object*apply*create-world-object*copy*predicates*epmem-obj
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^epmem-obj.predicates.{ <prop> <> visible <> object-status <> arm-status } <pred>
              ^world-obj.predicates <preds>)
-->
   (<preds> ^<prop> <pred>)
}

sp {attend-to-new-object*apply*create-world-object*mark*created
   (state <s> ^name attend-to-new-object
              ^operator.name create-world-object
              ^world-obj.predicates.<any>)
-->
   (<s> ^created-world true)
}

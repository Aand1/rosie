sp {attend-to-new-object*propose*create-object-info
   (state <s> ^name attend-to-new-object
              ^created-world true
              ^world-obj.handle <obj-handle>)
-->
   (<s> ^operator <o> +)
   (<o> ^name create-object-info
        ^object-handle <obj-handle>)
}

sp {attend-to-new-object*apply*create-object-info*mark*object-status*confirmed
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^world-obj.predicates <preds>
              ^perception-obj)
-->
   (<preds> ^object-status confirmed
            ^object-status unconfirmed -
            ^visible true
            ^visible false -)
}

sp {attend-to-new-object*apply*create-object-info*mark*object-status*unconfirmed
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^world-obj.predicates <preds>
              -^perception-obj)
-->
   (<preds> ^object-status unconfirmed
            ^object-status confirmed -
            ^visible false
            ^visible true -)
}

sp {attend-to-new-object*apply*create-object-info
   (state <s> ^name attend-to-new-object
              ^operator <o>)
   (<o> ^name create-object-info
        ^object-handle <obj-handle>)
-->
   (<s> ^object-info <obj-info>)
   (<obj-info> ^object-handle <obj-handle>)
}

sp {attend-to-new-object*apply*create-object-info*wm-obj
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^object-info <obj-info>
              ^world-obj <wm-obj>)
-->
   (<obj-info> ^wm-obj <wm-obj>)
}

sp {attend-to-new-object*apply*create-object-info*perception-id
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^perception-obj.id <id>
              ^object-info <obj-info>)
-->
   (<obj-info> ^perception-id <id>)
}

sp {attend-to-new-object*apply*create-object-info*create-belief-id
   (state <s> ^name attend-to-new-object
              ^operator <o>
              ^object-info <obj-info>)
   (<o> ^name create-object-info
        ^object-handle <obj-handle>)
-->
   (<obj-info> ^belief-id (concat |bel-| <obj-handle>))
}
   
sp {attend-to-new-object*apply*create-object-info*copy*object-info
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^object-info <obj-info>
              ^top-state.perception-monitor.object-monitor <obj-mon>)
   (<obj-info> ^wm-obj <wm-obj>)
-->
   (<obj-mon> ^object-info <obj-info>)
}

sp {attend-to-new-object*apply*create-object-info*remove*attend*change
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^top-state.perception-monitor.changes <chs>
              ^superstate.change-info <info>
              ^object-info.wm-obj)
   (<chs> ^change <c>)
   (<c> ^info <info>)
-->
   (<chs> ^change <c> -)
}

sp {attend-to-new-object*apply*create-object-info*visible*add*in*predicate
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^perception-obj <pobj>
              ^top-state.world <world>
              ^world-obj <wm-obj>)
   (<world> ^robot.current-location <cur-loc>
            ^predicates.predicate <in-pred>)
   (<in-pred> ^handle in1)
   -{(<in-pred> ^instance <curi>)
     (<curi> ^1 <wm-obj> ^2 <cur-loc>)}
-->
    (<in-pred> ^instance <i>)
    (<i> ^1 <wm-obj> ^2 <cur-loc>)
}

sp {attend-to-new-object*apply*create-object-info*create*belief-object*from*perception
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^top-state.svs.command <cmd>
              ^object-info.belief-id <bel-id>
              ^perception-obj.id <perc-id>)
-->
   (<cmd> ^copy_node <copy>)
   (<copy> ^id <bel-id>
           ^source <perc-id>
           ^adjust false)     
}

sp {attend-to-new-object*apply*create-object-info*create*belief-object*from*epmem
   (state <s> ^name attend-to-new-object
              ^operator.name create-object-info
              ^top-state.svs.command <cmd>
              ^object-info.belief-id <bel-id>
             -^perception-obj
              ^epmem-obj <obj>)
   (<obj> ^position <pos>
          ^rotation <rot>
          ^scale <scl>)
   (<pos> ^x <px> ^y <py> ^z <pz>)
   (<rot> ^x <rx> ^y <ry> ^z <rz>)
   (<scl> ^x <sx> ^y <sy> ^z <sz>)
-->
   (<cmd> ^add_node <add>)
   (<add> ^id <bel-id>
          ^parent world
          ^geometry box
          ^position <npos>
          ^rotation <nrot>
          ^scale <nscl>)
   (<npos> ^x <px> ^y <py> ^z <pz>)
   (<nrot> ^x <rx> ^y <ry> ^z <rz>)
   (<nscl> ^x <sx> ^y <sy> ^z <sz>)
}

sp {delete-object*propose*complete-delete-object
   (state <s> ^name delete-object)
-->
   (<s> ^operator <o> +)
   (<o> ^name complete-delete-object)
}

sp {delete-object*apply*complete-delete-object*remove*object-info
   (state <s> ^name delete-object
              ^operator.name complete-delete-object
              ^object-info <obj-info>
              ^top-state.perception-monitor.object-monitor <obj-mon>)
   (<obj-mon> ^object-info <obj-info>)
-->
   (<obj-mon> ^object-info <obj-info> -)
}

sp {delete-object*apply*operator*complete-delete-object*remove*from*svs
   (state <s> ^name delete-object
              ^operator.name complete-delete-object
              ^object-info.belief-obj.id <id>
              ^top-state.svs.command <cmd>)
-->
   (<cmd> ^delete_node.id <id>)
}

sp {delete-object*apply*operator*complete-delete-object*remove*predicates
   (state <s> ^name delete-object
              ^operator.name complete-delete-object
              ^world-obj <obj>
              ^top-state.world.predicates.predicate <pred>)
   (<pred> ^instance <i>)
   (<i> ^<num> <obj>)
-->
   (<pred> ^instance <i> -)
}

sp {delete-object*apply*complete-delete-object*remove*change
   (state <s> ^name delete-object
              ^operator.name complete-delete-object
              ^superstate.change-info <info>
              ^top-state.perception-monitor.changes <chgs>)
   (<chgs> ^change <c>)
   (<c> ^info <info>)
-->
   (<chgs> ^change <c> -)
}
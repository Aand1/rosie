sp {attend-to-scene-change*apply*add-smem-object*create*smem-object-copy
   (state <s> ^name attend-to-scene-change
              ^operator <o>)
   (<o> ^name add-smem-object
        ^object <obj>)
   (<obj> ^handle <obj-handle>)
-->
   (<s> ^smem-object-copy <copy>)
   (<copy> ^handle <obj-handle>)
}

sp {attend-to-scene-change*apply*add-smem-object*create*smem-object-copy*create*level1
   (state <s> ^name attend-to-scene-change
              ^operator <o>
              ^smem-object-copy <copy>)
   (<o> ^name add-smem-object
        ^object <obj>)
-->
   (<copy> ^item-type object
           ^from-smem true
           ^predicates <preds>)
}

sp {attend-to-scene-change*apply*add-smem-object*create*smem-object-copy*copy*level1
   (state <s> ^name attend-to-scene-change
              ^operator <o>
              ^smem-object-copy <copy>)
   (<o> ^name add-smem-object
        ^object.{ <att> << waypoint >> } <val> )
-->
   (<copy> ^<att> <val>)
}

sp {attend-to-scene-change*apply*add-smem-object*create*smem-object-copy*copy*level2
   (state <s> ^name attend-to-scene-change
              ^operator <o>
              ^smem-object-copy.predicates <preds>)
   (<o> ^name add-smem-object
        ^object.{ <prop> <> handle <> item-type <> object-instance <> waypoint } <pred>)
-->
   (<preds> ^<prop> <pred>)
}
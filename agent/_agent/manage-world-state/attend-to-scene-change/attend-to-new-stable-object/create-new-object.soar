sp {attend-to-new-stable-object*elaborate*create-new-object*create*wm-object
   (state <s> ^name attend-to-new-stable-object
              ^operator <o> +)
   (<o> ^name create-new-object)
-->
   (<o> ^object-id <wm-obj>)
}

sp {attend-to-new-stable-object*apply*create-new-object*create*wm-object
   (state <s> ^name attend-to-new-stable-object
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name create-new-object
        ^object-info <obj-info>
        ^object-id <wm-obj>)
   (<obj-info> ^object-handle <obj-handle>)
-->
   (<obj-info> ^wm-obj <wm-obj>)
   (<wm-obj> ^handle <obj-handle>
             ^item-type object
             ^predicates <preds>)
   (<preds> ^object-status confirmed
            ^category object
            ^visible true)
}

sp {attend-to-new-stable-object*apply*create-new-object*create*in*predicate
   (state <s> ^name attend-to-new-stable-object
              ^operator <o>
              ^top-state.svs.command <cmd>
              ^top-state.world <world>)
   (<o> ^name create-new-object
        ^object-id <wm-obj>)
   (<world> ^robot.current-location <cur-loc>
            ^predicates.predicate <in-pred>)
   (<in-pred> ^handle in1)
-->
    (<in-pred> ^instance <i>)
    (<i> ^1 <wm-obj> ^2 <cur-loc>)
}

sp {attend-to-new-stable-object*apply*create-new-object*create*belief-object
   (state <s> ^name attend-to-new-stable-object
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name create-new-object
        ^object-info.belief-id <bel-id>
        ^object-info.perception-obj.id <perc-id>)
-->
   (<cmd> ^copy_node <copy>)
   (<copy> ^id <bel-id>
           ^source <perc-id>
           ^adjust true)
}

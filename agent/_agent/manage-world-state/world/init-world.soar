sp {top-state*apply*init-agent*create*world-state*arm
   (state <s> ^top-state <s>
              ^operator.name init-agent
              ^agent-params.domain arm
              ^world-usage external)
-->
   (<s> ^world <w>)
   (<w> ^objects <objs>
        ^predicates <preds>
        ^robot <rob>)
   (<rob> ^arm <arm>
          ^handle rosie
          ^predicates.name rosie)
   (<arm> ^state external)
}

sp {top-state*apply*init-agent*create*world-state*mobile
   (state <s> ^top-state <s>
              ^operator.name init-agent
              ^agent-params.domain mobile
              ^world-usage external)
-->
   (<s> ^world <w>)
   (<w> ^objects <objs>
        ^predicates <preds>
        ^robot <rob>)
   (<rob> ^arm <arm>
          ^handle rosie
          ^predicates.name rosie
          ^moving-state stopped)
   (<arm> ^state internal)
}

sp {top-state*elaborate*simulated*mobile*objects
   (state <s> ^superstate nil
              ^agent-params.domain mobile
              ^world-usage external
              ^world <world>)
   (<world> ^objects <objs>
            ^predicates.predicate <in-pred>)
   (<in-pred> ^handle in1)
-->
   (<objs> ^object <red-package> <conference> <soar> <kitchen> <main>)

   (<red-package> ^handle red-package1 ^item-type object ^predicates <red-package-preds>)
     (<red-package-preds> ^category block1 ^color red1 ^shape package1)
     (<in-pred> ^instance <red-package-loc>)
       (<red-package-loc> ^1 <red-package> ^2 <main>)
              
   	(<conference> ^handle conference-room1 ^item-type location ^predicates <confp> ^english-description |conference room| ^waypoint wp08)
  	(<confp> ^category location ^name conference1 ^spatial-shape room1)

	(<soar> ^handle soar-office1 ^item-type location ^predicates <soarp> ^english-description |soar office| ^waypoint wp06)
  	(<soarp> ^category location ^name soar1 ^spatial-shape room1)

	(<kitchen> ^handle kitchen-room1 ^item-type location ^predicates <kitchenp> ^english-description |kitchen| ^waypoint wp03)
  	(<kitchenp> ^category location ^name kitchen1 ^spatial-shape room1)

	(<main> ^handle main-office1 ^item-type location ^predicates <mainp> ^english-description |main office| ^waypoint wp01)
  	(<mainp> ^category location ^name main1 ^spatial-shape room1)
}

sp {top-state*mobile*elaborate*world*unknown-objects
   (state <s> ^superstate nil
              ^agent-params.domain mobile
              ^world-usage external
              ^world <world>)
   (<world> ^predicates.predicate <in-pred>
            ^objects <objs>)
   (<in-pred> ^handle in1)
   (<objs> ^object <kitchen>)
   (<kitchen> ^handle kitchen-room1)
-->
   (<world> ^unknown-objects <unknowns>)
#   (<unknowns> ^object <soda1>)
#
#   (<soda1> ^handle soda1 ^item-type object ^predicates <soda1-preds>)
#     (<soda1-preds> ^category object ^shape soda1)
#     (<in-pred> ^instance <soda1-loc>)
#       (<soda1-loc> ^1 <soda1> ^2 <kitchen>)
}

#sp {top-state*elaborate*smem-query-cue*locations
#   (state <s> ^superstate nil
#              ^agent-params.domain mobile
#              ^world-usage external)
#-->
##   (<s> ^smem-query <q1>)
##   (<q1> ^cue <cue1>
##         ^depth 3)
##   (<cue1> ^handle april-office1)
#
#   (<s> ^smem-query <q2>)
#   (<q2> ^cue <cue2>
#         ^depth 3)
#   (<cue2> ^handle main-office1)
#
#   (<s> ^smem-query <q3>)
#   (<q3> ^cue <cue3>
#         ^depth 3)
#   (<cue3> ^handle soar-office1)
#
#   (<s> ^smem-query <q4>)
#   (<q4> ^cue <cue4>
#         ^depth 3)
#   (<cue4> ^handle conference-room1)
#
#   (<s> ^smem-query <q5>)
#   (<q5> ^cue <cue5>
#         ^depth 3)
#   (<cue5> ^handle kitchen1)
#}

sp {top-state*copy*location*query*results
   :o-support
   (state <s> ^superstate nil
              ^smem-query <query>
              ^world.objects <objs>)
   (<query> ^cue <cue>
            ^result <lti>)
   (<lti> ^item-type location)
-->
   (<objs> ^object <lti>)
   (<s> ^smem-query <query> -)
}

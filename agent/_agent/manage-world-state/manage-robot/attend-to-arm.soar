# Update world.robot.arm.action

sp {anystate*apply*attend-to-arm*add*current*action
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.action <action>)
-->
   (<arm> ^action <action>)
}

sp {anystate*apply*attend-to-arm*remove*old*action
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.action <action>)
   (<arm> ^action {<old-action> <> <action>})
-->
   (<arm> ^action <old-action> -)
}

# Update world.robot.arm.grabbed

sp {anystate*apply*attend-to-arm*add*grabbed
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.grabbed-object <> -1)
   (<arm> ^moving <obj>)
-->
   (<arm> ^grabbed <obj>)
}

sp {anystate*apply*attend-to-arm*remove*old*grabbed
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.grabbed-object -1)
   (<arm> ^grabbed <obj>)
-->
   (<arm> ^grabbed <obj> -)
}

# Update world.robot.arm.moving

sp {anystate*apply*attend-to-arm*finished*drop*remove*moving
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.action wait)
   (<arm> ^action drop
          ^moving <obj>)
-->
   (<arm> ^moving <obj> -)
}

# Update world.robot.arm.missing
sp {anystate*apply*attend-to-arm*finish*grab*object*missing
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.action failure)
   (<arm> ^action grab
          ^moving <obj>)
-->
   (<arm> ^moving <obj> -
          ^missing <obj>)
}

sp {anystate*apply*attend-to-arm*finish*drop*object*missing
   (state <s> ^operator <o>
              ^topstate.world.robot.arm <arm>)
   (<o> ^name attend-to-scene-change
        ^change.type arm-status-change
        ^change.self-info.action wait)
   (<arm> ^action drop
          ^moving <obj>)
   (<obj> ^predicates.status stale)
-->
   (<arm> ^missing <obj>)
}
   






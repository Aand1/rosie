##########################################################################################
# Change info for predicates
#############################################################################################

sp {topstate*elaborate*scene-changes*change-info*properties
   (state <s> ^topstate <s>
              ^scene-monitor.scene-changes.change-info <info>)
-->
   (<info> ^change <new-pred> <changed-pred>)
   (<new-pred> ^name new-predicate
               ^op-name attend-to-new-predicate)
   (<changed-pred> ^name changed-predicate
                  ^op-name attend-to-changed-predicate)
}


############################################################################################
# Change: new-predicate
#    When a unary predicate appears for a predicate category we haven't added yet
#############################################################################################
sp {monitor-scene-changes*elaborate*scene-changes*new-predicate
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^scene-monitor.scene-changes <sc>)
   (<obj> ^predicates.predicate <pred>
          ^wm-obj.predicates <wm-preds>)
   (<pred> ^predicate-category <pred-cat>
           ^predicate-value <pred-val>)
   (<wm-preds> -^<pred-cat> <any>)
-->
   (<sc> ^change <change>)
   (<change> ^type new-predicate
             ^object <obj>
             ^predicate <pred>)
}

############################################################################################
# Change: changed-predicate
#    When a unary predicate for a given category is different between 
#    belief and perception objects
#############################################################################################

sp {monitor-scene-changes*elaborate*scene-changes*changed-predicate*visual
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^scene-monitor.scene-changes <sc>)
   (<obj> ^predicates.predicate <pred>
          ^wm-obj.predicates <wm-preds>
          ^differences.is-occluded false)
   (<pred> ^predicate-type visual
           ^predicate-category <pred-cat>
           ^predicate-value <cur-value>)
   (<wm-preds> ^<pred-cat> {<old-value> <> <cur-value>})
-->
   (<sc> ^change <change>)
   (<change> ^type changed-predicate
             ^object <obj>
             ^predicate <pred>)
}

sp {monitor-scene-changes*elaborate*scene-changes*changed-predicate*state
   (state <s> ^topstate <s>
              ^scene-monitor.object <obj>
              ^scene-monitor.scene-changes <sc>)
   (<obj> ^predicates.predicate <pred>
          ^wm-obj.predicates <wm-preds>)
   (<pred> ^predicate-type state
           ^predicate-category <pred-cat>
           ^predicate-value <cur-value>)
   (<wm-preds> ^<pred-cat> {<old-value> <> <cur-value>})
-->
   (<sc> ^change <change>)
   (<change> ^type changed-predicate
             ^object <obj>
             ^predicate <pred>)
}

sp {top-state*perception-monitor*object-monitor*object-info*elaborate*properties
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type> <obj-info>)
   (<obj-info> ^object-handle <obj-handle>)
-->
   (<obj-info> ^properties <props>)
}

sp {top-state*perception-monitor*object-monitor*object-info*elaborate*property-info*state
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type> <obj-info>)
   (<obj-info> ^input-link-obj.{ <prop-handle> <> id <> property } <pred-handle>
               ^properties <props>)
-->
   (<props> ^property-info <prop-info>)
   (<prop-info> ^property-handle <prop-handle>
                ^type state
                ^predicate-handle <pred-handle>)
}

sp {top-state*perception-monitor*object-monitor*object-info*elaborate*property-info*name
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type> <obj-info>)
   (<obj-info> ^input-link-obj.property <prop>
               ^properties <props>)
   (<prop> ^handle name
           ^values.<obj-name> <any>)
-->
   (<props> ^property-info <prop-info>)
   (<prop-info> ^property-handle name
                ^type linguistic
                ^property-handle <obj-name>)
}

sp {top-state*perception-monitor*object-monitor*object-info*elaborate*property-info*visual*state
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type> <obj-info>)
   (<obj-info> ^input-link-obj.property <prop>
               ^properties <props>)
   (<prop> ^property-handle <prop-handle>
           ^type {<type> << visual state >> })
-->
   (<props> ^property-info <prop-info>)
   (<prop-info> ^handle <prop-handle>
                ^type <type>
                ^input-link-prop <prop>)
}

sp {top-state*perception-monitor*object-monitor*object-info*property-info*visual*elaborate*hypothesis
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type>.properties.property-info <prop-info>)
   (<prop-info> ^type visual
                ^input-link-prop.values.<pred-handle> {<conf> > .1})
-->
   (<prop-info> ^hypothesis <h>)
   (<h> ^predicate-handle <pred-handle>
        ^confidence <conf>)
}

sp {top-state*perception-monitor*object-monitor*object-info*property-info*visual*elaborate*hypothesis*best
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type>.properties.property-info <prop-info>)
   (<prop-info> ^type visual
                ^hypothesis <h1>)
   (<h1> ^confidence <best>)
   -{(<prop-info> ^hypothesis.confidence > <best>)}
-->
   (<h1> ^best true)
}

sp {top-state*perception-monitor*object-monitor*object-info*property-info*visual*elaborate*hypothesis*lower-threshold
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type>.properties.property-info <prop-info>)
   (<prop-info> ^type visual 
                ^hypothesis <h>)
   (<h> ^best true
        ^confidence <conf>)
-->
   (<h> ^lower-threshold (* <conf> .8))
}

sp {top-state*perception-monitor*object-monitor*object-info*property-info*visual*elaborate*predicate-handle
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type>.properties.property-info <prop-info>)
   (<prop-info> ^type visual
                ^hypothesis <h>)
   (<h> ^best true
        ^predicate-handle <pred-handle> 
        ^lower-threshold <low-thresh>)
   -{(<prop-info> ^hypothesis {<h2> <> <h>})
     (<h2> ^confidence > <low-thresh>)}
-->
   (<prop-info> ^predicate-handle <pred-handle>)
}

sp {top-state*perception-monitor*object-monitor*object-info*property-info*state*elaborate*predicate-handle
   (state <s> ^superstate nil
              ^perception-monitor.object-monitor.<any-type>.properties.property-info <prop-info>)
   (<prop-info> ^type state
                ^input-link-prop.predicate-handle <pred-handle>)
-->
   (<prop-info> ^predicate-handle <pred-handle>)
}


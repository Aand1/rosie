sp {execute-explore*propose*ask-about-object
   (state <s> ^problem-space.name execute-composite-action
              ^action-handle explore1
              ^world.robot.current-location <loc>
              ^until-clause.predicate <pred>)
   (<pred> ^handle visible
           ^1 <obj>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name ask-about-object
        ^object <obj>)
}

sp {execute-explore*apply*ask-about-object*send-message*ask-about-item
   (state <s> ^problem-space.name execute-composite-action
              ^action-handle explore1
              ^operator <o>
              ^top-state.interaction.changes <changes>)
   (<o> ^name ask-about-object
        ^object.predicates.{ << shape name >> } <name>)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type ask-about-item
          ^item <name>)
}

sp {execute-explore*apply*ask-about-object*push-segment
   (state <s> ^problem-space.name execute-composite-action
              ^action-handle explore1
              ^operator <o>
              ^top-state.interaction.changes <changes>)
   (<o> ^name ask-about-object
        ^object <obj>)
-->
   (<changes> ^new-segment-info <info>)
   (<info> ^purpose <p>
   	   ^originator agent)
   (<p> ^type ask-about-object
        ^parameters.object <obj>
   	^satisfaction.dialog-event <de>)
   (<de> ^type yes
         ^type no
         ^originator instructor)
}
             
sp {execute-explore*apply*ask-about-object*mark*searched
   (state <s> ^problem-space.name execute-composite-action
              ^action-handle explore1
              ^operator.name ask-about-object
              ^world.robot.current-location <loc>)
-->
   (<loc> ^searched true)
}
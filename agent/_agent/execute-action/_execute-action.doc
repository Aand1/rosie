################ execute-action ##################
Proposed from the top-state when there is an action on the action-stack
	
##### Superoperator Rep #####

^action <action> - From action-stack.actions.action


###### State Representation #####

^current-action <a> - elaborated from superstate.operator.action

# problem-space
^name action
^action.type execute
^learning.type exploration
^world.copy-type shallow

###### Operator Info ######

# remove-start-of-execution-flag : highest preference
	Proposed if there is a ^start-of-execution true flag on the top action
	Removes that flag
	
# propose-current-action
	Propose current-action.execution-operator to execute the action
    Once the action is validated (flag action.validated true)

# validate-composite-action
  For now, we assume all composite actions are valid, so we 
  immediately validate them

# validate-primitive-action
  To execute a primitive action, we must be sure we can propose it
  If the action was given through a command, we first try to match it
    against all proposed operators, if successful, we mark the action as validated

	

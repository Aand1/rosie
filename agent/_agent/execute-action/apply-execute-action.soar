sp {top-state*apply*execute-action
   (state <s> ^superstate nil
              ^operator <o>)
   (<o> ^name execute-action
        ^action-operator <op>)
   (<op> ^first true)
-->
   (<op> ^first true -)
}

sp {top-state*apply*execute-action*add*hypothetical*objects*to*world*depth1
   (state <s> ^superstate nil
              ^operator <o>
              ^world.objects <objs>)
   (<o> ^name execute-action
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <obj>)
   (<objs> -^object <obj>)
-->
   (<objs> ^object <obj>)
}

sp {top-state*apply*execute-action*add*hypothetical*locations*to*world*depth1
   (state <s> ^superstate nil
              ^operator <o>
              ^world.locations <locs>)
   (<o> ^name execute-action
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type concept
          ^id <loc>)
   (<loc> ^item-type location)
   (<locs> -^location <loc>)
-->
   (<locs> ^location <loc>)
}

sp {top-state*apply*execute-action*add*hypothetical*objects*to*world*depth2
   (state <s> ^superstate nil
              ^operator <o>
              ^world.objects <objs>)
   (<o> ^name execute-action
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^{ << 1 2 >> } <obj>)
   (<obj> ^item-type object)
   (<objs> -^object <obj>)
-->
   (<objs> ^object <obj>)
}

sp {top-state*apply*execute-action*add*hypothetical*locations*to*world*depth2
   (state <s> ^superstate nil
              ^operator <o>
              ^world.locations <locs>)
   (<o> ^name execute-action
        ^action-operator.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^{ << 1 2 >> } <loc>)
   (<loc> ^item-type location)
   (<locs> -^location <loc>)
-->
   (<locs> ^location <loc>)
}
sp {duplicate-state*copy*indexed-action
   (state <s> ^name evaluate-operator
   	      ^duplicate-of <ss>
	      ^problem-space.deep-copy indexed-action
	      ^pairs <dup>)
   (<ss> ^indexed-action <sop>)
-->
   (<s> ^indexed-action <op>)
   (<dup> ^<sop> <op>)
}

### copy indexed-action
sp {duplicate-state*copy*indexed-action*attributes
   (state <s> ^name evaluate-operator
	      ^problem-space.deep-copy indexed-action
	      ^pairs.<sop> <op>
	      ^indexed-action <op>)
   (<sop> ^name <name>
   	  ^_metadata <met>
	  ^action-type <type>
	  ^_instantiation-of <ins>)
-->
   (<op> ^name <name>
   	 ^_metadata <met>
	 ^action-type <type>
	 ^_instantiation-of <ins>)
}

sp {duplicate-state*copy*indexed-action*argument*one-level
   (state <s> ^name evaluate-operator
	      ^problem-space.deep-copy indexed-action
	      ^duplicates <dup>
	      ^pairs <pair>
	      ^duplicate-of <ss>)
   (<ss> ^indexed-action <sop>)
   (<pair> ^<sop> <op>)
   (<dup> ^<val> <obj>)
   (<sop> ^<arg> <val>)
   (<val> -^argument)
-->
   (<op> ^<arg> <obj>)
}

sp {duplicate-state*copy*indexed-action*argument*two-level
   (state <s> ^name evaluate-operator
	      ^problem-space.deep-copy indexed-action
	      ^pairs <pairs>
	      ^duplicates <dup>
	      ^duplicate-of <ss>)
   (<ss> ^indexed-action <sop>)
   (<dup> ^<val> <obj>)
   (<pairs> ^<sop> <op>)
   (<sop> ^<arg> <aval>)
   (<aval> ^argument <val>)
-->
   (<op> ^<arg> <anew>)
   (<anew> ^argument <obj>)
   (<pairs> ^<aval> <anew>)
}

sp {duplicate-state*copy*indexed-action*relation*two-level
   (state <s> ^name evaluate-operator
	      ^problem-space.deep-copy indexed-action
	      ^pairs <pairs>
	      ^duplicates <dup>
	      ^indexed-action <op>
	      ^duplicate-of <ss>)
   (<ss> ^indexed-action <sop>)
   (<pairs> ^<sop> <op>
	  ^<aval> <anew>)
   (<sop> ^<arg> <aval>)
   (<aval> ^relation <rel>)
   (<op> ^<arg> <anew>)
-->
   (<anew> ^relation <rel>)
}

########### deep copy other put-down operator
sp {evaluate-operator*elaborate*operator*duplicate*argument*relation
   (state <s> ^superstate <ss>
   	      ^problem-space.deep-copy operator-argument
	      ^look-ahead-operator <o-copy>
	      ^duplicates <d>)
   (<o-copy> ^duplicate-of <o>)
   (<o> ^<arg> <sub-arg>)
   (<sub-arg> ^relation <relation>
   	      ^<arg2> <val2>)
   (<d> ^<val2> <obj2>)
-->
   (<d> ^<sub-arg> <nval>)
   (<nval> ^relation <relation>
   	   ^<arg2> <obj2>)
}

sp {evaluate-operator*elaborate*operator*duplicate*argument*no-relation
   (state <s> ^superstate <ss>
   	      ^problem-space.deep-copy operator-argument
	      ^look-ahead-operator <o-copy>
	      ^duplicates <d>)
   (<o-copy> ^duplicate-of <o>)
   (<o> ^<arg> <sub-arg>)
   (<sub-arg> -^relation <relation>
   	      ^<arg2> <val2>)
   (<d> ^<val2> <obj2>)
-->
   (<d> ^<sub-arg> <nval>)
   (<nval> ^<arg2> <obj2>)
}


sp {evaluate-operator*elaborate*operator*duplicate*metadata
   (state <s> ^superstate <ss>
   	      ^problem-space.deep-copy operator-argument
	      ^look-ahead-operator <o-copy>
	      ^duplicates <d>)
   (<o-copy> ^duplicate-of <o>)
   (<o> ^_metadata <met>)
-->
   (<o-copy> ^_metadata <met>)
}



	      
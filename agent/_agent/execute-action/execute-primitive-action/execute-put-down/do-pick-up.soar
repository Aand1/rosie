sp {execute-put-down*goal*not*achieved*propose*do-pick-up
   (state <s> ^problem-space.name execute-primitive-action
               ^action-handle put-down1
              ^held-object.predicates.visibility visible1
             -^held-object.predicates.arm-status grabbed
              ^held-object <obj1>
              ^destination <obj2>
              ^predicate-handle <pred-handle>
              ^world.predicates.predicate <pred>)
   (<pred> ^handle <pred-handle>)
   -{(<pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> +)
   (<o> ^name do-pick-up)
}

sp {execute-put-down*apply*do-pick-up*push*action
   (state <s> ^problem-space.name execute-primitive-action
               ^action-handle put-down1
              ^operator.name do-pick-up
              ^top-state.action-stack.changes <c>
              ^held-object <obj>)
-->
   (<c> ^push <action>)
   (<action> ^execution-operator <op>
             ^first-appearance true
             ^task-subaction false)
   (<op> ^name op_pick-up1
         ^action-handle pick-up1
         ^action-type primitive
          ^arg1 <arg>
          ^next-action <cur>)
   (<arg> ^arg-type object
          ^id <obj>)
}

sp {execute-put-down*apply*do-pick-up*remove*put-down-command
   (state <s> ^problem-space.name execute-primitive-action
               ^action-handle put-down1
              ^operator.name do-pick-up
              ^current-action <a>)
   (<a> ^put-down-command <cmd>)
-->
   (<a> ^put-down-command <cmd> -)
}

  

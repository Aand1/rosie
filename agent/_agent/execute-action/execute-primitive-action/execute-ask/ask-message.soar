sp {execute-ask*propose*ask-message
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle ask1
             -^current-action.answer
              ^sentence <msg>)
-->
   (<s> ^operator <o> + >)
   (<o> ^name ask-message
        ^message <msg>)
}

sp {execute-ask*apply*ask-message*send*message
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle ask1
              ^operator <o>
              ^top-state.interaction.changes <changes>)
   (<o> ^name ask-message
        ^message <msg>)
-->
   (<changes> ^outgoing-message <send>)
   (<send> ^type say-sentence
           ^sentence <msg>)
}

sp {execute-ask*apply*ask-message*push*segment*wait-for-answer
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle ask1
              ^operator <o>
              ^top-state.interaction.changes <changes>)
   (<o> ^name ask-message
        ^message <msg>)
-->
   (<changes> ^new-segment-info <info>)
   (<info> ^purpose <p>
   	   ^originator agent)
   (<p> ^type wait-for-answer
   	    ^satisfaction.dialog-event <de>)
   (<de> ^type object-description
         ^originator instructor)
}
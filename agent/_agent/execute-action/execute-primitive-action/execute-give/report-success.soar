sp {execute-give1*propose*report-success
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle give1
              ^current-action.put-down-command.status success)
-->
   (<s> ^operator <o> +)
   (<o> ^name report-success)
}

sp {execute-give1*apply*report-success*mark*finished
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle give1
              ^operator.name report-success
              ^current-action <a>)
-->
   (<a> ^status complete)
}

sp {execute-give1*apply*report-success*remove*give-command
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle give1
              ^operator.name report-success
              ^current-action <a>
              ^io.output-link <out>)
   (<a> ^{ <name> << drive-command give-command >> } <cmd>)
   (<out> ^do-control-law <cmd>)
-->
   (<a> ^<name> <cmd> -)
   (<out> ^do-control-law <cmd> -)
}

sp {execute-give*apply*report-success*add*holding*predicate
   (state <s> ^problem-space.name execute-primitive-action
              ^action-handle give1
              ^operator.name report-success
              ^held-object <obj>
              ^person <person>
              ^top-state.world.predicates.predicate <holding>)
   (<holding> ^handle holding1)
   -{(<holding> ^instance <cur-i>)
     (<cur-i> ^1 <person> ^2 <obj>)}
-->
   (<holding> ^instance <i>)
   (<i> ^1 <person> ^2 <obj>)
}

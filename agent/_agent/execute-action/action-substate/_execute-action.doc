##### Superoperator Rep #####

^action - reference to an action-stack action


##### Substate Results ######

If ^status complete is on the action,
	pop the action from the action stack 


###### State Representation #####

^current-action - from superoperator.action
^action-operator - from superoperator.action.execution-operator
^parent-action - from current-action.prev (if exists)
^action-to-match <op> - from action-operator if its a primitive action


###### problemspace ######

^problem-space
	^name action
	^action
		^type execute
		^propose-driving-operators - true if primitive, false if task
		^propose-primitive-actions - true if primitive and not validated
	^world
		^copy-type shallow
	^learning
		^type exploration
	
###### Operator Info ######

# propose action-operator 
	if primitive and current-action.validated true
	or composite always
	
# propose primitive actions
	If primitive and not validated, if a primitive action matches and is selected,
	marks the action as validated

# remove-first-appearance-flag
	first thing to do is to remove the first-apperance flag if its there
	

###### Operator Tie ######

assign state name multiple-argument-instantiations

###### State No-Change #####

assign state name no-proposed-action (see _problem-space_action)

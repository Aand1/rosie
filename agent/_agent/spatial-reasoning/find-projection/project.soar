#sp {find-projection*project*svs*propose*lookup-preposition
#   (state <s> ^name find-projection
#             -^found-prep
#              ^a <ida>
#              ^b <idb>
#              ^result <res>
#              ^prep <type>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name lookup-preposition
#        ^category svs
#        ^type <type>)
#}
#
#sp {find-projection*project*svs*failure*prep-exist*after-interaction
#   (state <s> ^name find-projection
#              ^superstate <ss>
#              ^a <ida>
#              ^b <idb>
#              ^result <res>
#              ^interaction true
#              ^topstate.interaction.stack.segment.info.status.no-teaching true)
#   (<s> ^stat default)
#-->
#   (<ss> ^projection-result failure
#         ^proj-failure-reason no-prep)
#}
#
#sp {find-projection*project*svs*failure*prep-exist
#   (state <s> ^name find-projection
#              ^superstate <ss>
#              ^a <ida>
#              ^b <idb>
#              ^result <res>
#             -^interaction true)
#   (<s> ^stat default)
#-->
#   (<ss> ^projection-result failure
#         ^proj-failure-reason no-prep)
#}

sp {find-projection*project*svs*failure*obja-exist
   (state <s> ^name find-projection
              ^superstate <ss>
              ^a <ida>
              ^result <res>
              ^svs-link.spatial-scene <sp>)
   (<sp> -^child.id <ida>)
-->
   (<ss> ^projection-result failure
         ^proj-failure-reason no-object)
}
sp {find-projection*project*svs*failure*objb-exist
   (state <s> ^name find-projection
              ^superstate <ss>
              ^b <idb>
              ^result <res>
              ^svs-link.spatial-scene <sp>)
   (<sp> -^child.id <idb>)
-->
   (<ss> ^projection-result failure
         ^proj-failure-reason no-object)
}

sp {find-projection*project*svs*create-projection
   (state <s> ^name find-projection
              ^a <ida>
              ^b <idb>
              ^result <res>
              ^predicate <p1>
              ^svs-link.command <cmd>)
   (<p1> ^all-aligned <val>)
-->
   (<cmd> ^project <P11>)
   (<P11> ^a <N7> ^b <N8> ^aligned <val>)
   (<N7> ^type node ^name <ida>)
   (<N8> ^type node ^name <idb>)
}

sp {find-projection*project*svs*create-projection*add-axis
   (state <s> ^name find-projection
              ^a <ida>
              ^b <idb>
              ^result <res>
              ^svs-link.command <cmd>
              ^predicate <p1>)
   (<p1> ^name <prep>
         ^relation <r>)
   (<r> ^avg <avg> ^axis <axis>)
   (<cmd> ^project <P11>)
   (<P11> ^a <N7> ^b <N8>)
   (<N7> ^type node ^name <ida>)
   (<N8> ^type node ^name <idb>)
-->
   (<P11> ^rel <rel>)
   (<rel> ^axis <axis> ^avg <avg>)
}

sp {find-projection*project*svs*create-projection*add-primitives
   (state <s> ^name find-projection
              ^a <ida>
              ^b <idb>
              ^result <res>
              ^svs-link.command <cmd>
              ^predicate <p1>)
   (<p1> ^name <prep>
         ^relation <r>)
   (<r> ^type <ptype> ^axis <axis>)
   (<cmd> ^project <P11>)
   (<P11> ^a <N7> ^b <N8> ^rel <rel>)
   (<rel> ^axis <axis>)
   (<N7> ^type node ^name <ida>)
   (<N8> ^type node ^name <idb>)
-->
   (<rel> ^type <ptype>)
}

sp {find-projection*project*svs*complete-projection
   (state <s> ^name find-projection
              ^a <ida>
              ^b <idb>
              ^result <res>
              ^superstate <ss>
              ^svs-link.command <cmd>)
   (<cmd> ^project <P11>)
   (<P11> ^a <N7> ^b <N8> ^result <r>)
   (<r> ^x <x> ^y <y> ^z <z>)
   (<N7> ^type node ^name <ida>)
   (<N8> ^type node ^name <idb>)
-->
   (<ss> ^projection-result <result>)
   (<result> ^x <x> ^y <y> ^z <z> ^a <ida> ^b <idb>)
}

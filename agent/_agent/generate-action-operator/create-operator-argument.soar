sp {generate-action-operator*propose*create-operator-argument
   (state <s> ^name generate-action-operator
              ^action-operator <op>
              ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>)
   (<op> -^<arg-name> <arg>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
}

###################
# arg-type object

sp {generate-action-operator*apply*create-operator-argument*copy*object*arg
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type object
               ^arg-status <status>
               ^object-id <obj>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type object
          ^arg-status <status>
          ^id <obj>)
   (<arg-info> ^created <arg>)
}

###################
# arg-type location

sp {generate-action-operator*apply*create-operator-argument*copy*location*arg
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type location
               ^arg-status <status>
               ^object-id <loc>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type location
          ^id <loc>
          ^arg-status <status>)
   (<arg-info> ^created <arg>)
}


######################
## arg-type concept

sp {generate-action-operator*apply*create-operator-argument*copy*concept*arg
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type concept
               ^arg-status <status>
               ^value.handle <concept-handle>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type concept
           ^arg-status <status>
          ^handle <concept-handle>)
   (<arg-info> ^created <arg>)
}


#######################
### arg-type predicate

sp {generate-action-operator*apply*create-operator-argument*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-name <arg-name>
               ^arg-type predicate
               ^arg-status <status>
               ^value.handle <pred-handle>
               ^value.id2 <obj2>)
-->
   (<op> ^<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^arg-status <status>
          ^handle <pred-handle>
          ^2 <obj2>)
   (<arg-info> ^created <arg>)
}


###########################
## arg-type until-clause

sp {generate-action-operator*apply*create-operator-argument*until-clause*count-shape
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <cmd>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^clause-type count-shape
               ^shape <shape>
               ^final-count <c>)
-->
   (<cmd> ^until-clause <new-clause>)
   (<new-clause> ^name count
             ^parameters <params>)
   (<params> ^count <c>
             ^class <shape>)
   (<arg-info> ^created <arg>)
}
              
sp {generate-action-operator*apply*create-operator-argument*arg-type*until-clause*state*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <cmd>)
   (<o> ^name create-operator-argument
        ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^clause-type detect-predicate
               ^predicate-handle <pred-handle>
               ^object <obj>)
-->
   (<cmd> ^until-clause <new-clause>)
   (<new-clause> ^arg-type until-clause
                 ^predicate <until-pred>)
   (<until-pred> ^type state
           ^handle <pred-handle>
           ^1 <obj>)
   (<arg-info> ^created <arg>)
}
   

# imagined object not on the top-state for an arg-status=real argument
#    add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*imagined*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type object
               ^arg-status real
              -^object-id
               ^value <obj>)
   (<obj> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <obj>)
}

# smem object not on the top-state 
#   add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*smem*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type object
               ^arg-status <any>
              -^object-id
               ^value <obj>)
   (<obj> ^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type smem-obj
        ^source-obj <obj>)
}

# add an imagined predicate object to the world
sp {generate-action-operator*propose*add-argument-to-world*predicate*object*imagined
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type predicate
              -^object-id2
               ^value.{2} <obj>)
   (<obj> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <obj>)
}

# add an smem predicate object to the world
sp {generate-action-operator*propose*add-argument-to-world*predicate*object*smem
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type predicate
              -^object-id2
               ^value.{2} <obj>)
   (<obj> ^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type smem-obj
        ^source-obj <obj>)
}

# add a predicate instance to the topstate world if it doesn't exist
#   but the arg-status is existing
sp {generate-action-operator*propose*add-argument-to-world*predicate
   (state <s> ^name generate-action-operator
              ^argument-info <arg1-info>
              ^argument-info <arg2-info>
              ^top-state.world.predicates.predicate <ts-pred>)
   (<arg1-info> ^arg-type object
                ^arg-status real
                ^object-id <obj1>)
   (<arg-info> ^arg-type predicate
               ^arg-status existing
               ^predicate-handle <pred-handle>
               ^object-id2 <obj2>)
   (<ts-pred> ^handle <pred-handle>)
   -{(<ts-pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type predicate
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
}

# imagined object on an until-clause not on the top-state 
#    add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*until-clause*object*imagined*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^predicate <pred>)
   (<pred> ^{ <num> << 1 2 >> } <obj>
          -^object-id.<num>)
   (<obj> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <obj>)
}

# smem object not on the top-state in an until-clause
#   add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*until-clause*object*smem*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type until-clause
               ^predicate <pred>)
   (<pred> ^{ <num> << 1 2 >> } <obj>
          -^object-id.<num>)
   (<obj> ^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type smem-obj
        ^source-obj <obj>)
}

# add an until clause imagined object not on the top-state for an arg-status=real argument
#    add the object to the world
sp {generate-action-operator*propose*add-argument-to-world*object*imagined*real
   (state <s> ^name generate-action-operator
              ^argument-info <arg-info>)
   (<arg-info> ^arg-type object
               ^arg-status real
              -^object-id
               ^value <obj>)
   (<obj> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type imagined-obj
        ^source-obj <obj>)
}

sp {generate-action-operator*apply*add-argument-to-world*predicate
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^top-state.world.predicates.predicate <ts-pred>)
   (<o> ^name add-argument-to-world
        ^arg-type predicate
        ^handle <pred-handle>
        ^1 <obj1>
        ^2 <obj2>)
   (<ts-pred> ^handle <pred-handle>)
-->
   (<ts-pred> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
}

sp {generate-action-operator*apply*add-argument-to-world*create*add-object*change
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name add-argument-to-world
        ^arg-type object
        ^source-type <type>
        ^source-obj <obj>)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^<type> <obj>)
}
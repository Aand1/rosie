sp {go-to-next-waypoint*propose*drive-to-waypoint*no-turn
   (state <s> ^name go-to-next-waypoint
              ^intermediate-turn none
              ^waypoint.handle <handle>
              ^face-command.status success
             -^drive-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name drive-to-waypoint
        ^termination-condition <term>)
   (<term> ^name count
           ^parameters <params>)
   (<params> ^count 1
             ^class <handle>)
}

sp {go-to-next-waypoint*propose*drive-to-waypoint*turn*part1
   (state <s> ^name go-to-next-waypoint
              ^intermediate-turn <> none
              ^face-command.status success
             -^turn-command
             -^drive-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name drive-to-waypoint
        ^termination-condition <term>)
   (<term> ^name stabilized)
}

sp {go-to-next-waypoint*propose*drive-to-waypoint*turn*part2
   (state <s> ^name go-to-next-waypoint
              ^intermediate-turn <> none
              ^waypoint.handle <handle>
              ^turn-command.status success
             -^drive-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name drive-to-waypoint
        ^termination-condition <term>)
   (<term> ^name count
           ^parameters <params>)
   (<params> ^count 1
             ^class <handle>)
}

sp {go-to-next-waypoint*apply*drive-to-waypoint
   (state <s> ^name go-to-next-waypoint
              ^operator <o>
              ^top-state.io.output-link <out>
              ^wall-side <side>)
   (<o> ^name drive-to-waypoint
        ^termination-condition <term>)
-->
   (<out> ^do-control-law <law>)
   (<law> ^name follow-wall
          ^parameters.side <side>
          ^termination-condition <term>)
   (<s> ^drive-command <law>)
}



   
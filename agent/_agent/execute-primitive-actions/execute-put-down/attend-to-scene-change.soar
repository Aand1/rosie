# Don't attend to stale-object on the object being grabbed
sp {execute-put-down1*reject*attend-to-stale-object*held*object
   (state <s> ^name execute-put-down1
              ^operator <o> +
              ^held-object.handle <handle>)
   (<o> ^name attend-to-scene-change
        ^change.type stale-object
        ^change.object-info.object-handle <handle>)
-->
   (<s> ^operator <o> -)
}

# Don't attend to new objects while the arm is moving
# (only evaluate those that were added during the put down as candidates for missing)
sp {execute-put-down1*reject*attend-to-new-object
   (state <s> ^name execute-put-down1
              ^current-action.put-down-command <cmd>
              ^operator <o> +)
   (<o> ^name attend-to-scene-change
        ^change.type new-object)
   (<cmd> -^status)
-->
   (<s> ^operator <o> -)
}

# Don't attend at all to the object being put down up while the arm is moving
sp {execute-put-down1*reject*attend-to-scene-change*grabbed*object
   (state <s> ^name execute-put-down1
              ^operator <o> +
              ^target-object.handle <handle>
              ^current-action.put-down-command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.object-info.object-handle <handle>)
   (<cmd> -^status)
-->
   (<s> ^operator <o> -)
}

sp {execute-put-down1*elaborate*evaluate-new-object*candidate-for-missing-object
   (state <s> ^name execute-put-down1
              ^operator <o> +
              ^held-object.handle <obj-handle>
              ^top-state.perception-monitor.object-monitor.object-info <obj-info>)
   (<o> ^name attend-to-scene-change
        ^change.type new-stable-object
        ^change.object-info <cand>)
   (<obj-info> ^object-handle <obj-handle>)
-->
   (<cand> ^candidate-for-missing-object <obj-info>)
}

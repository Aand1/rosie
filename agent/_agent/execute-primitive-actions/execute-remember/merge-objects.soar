sp {execute-remember*propose*merge-objects
   (state <s> ^name execute-remember1
              ^object1 <obj1>
              ^object2 <obj2>)
-->
   (<s> ^operator <o> + )
   (<o> ^name merge-objects
        ^object1 <obj1>
        ^object2 <obj2>)
}

sp {execute-remember*apply*merge-objects*mark*source
   (state <s> ^name execute-remember1
              ^operator <o>)
   (<o> ^name merge-objects
        ^object1 <obj1>
        ^object2 <obj2>)
-->
   (<obj2> ^source <obj1>)
}

sp {execute-remember*apply*merge-objects*copy*predicates
   (state <s> ^name execute-remember1
              ^operator <o>)
   (<o> ^name merge-objects
        ^object2.predicates.{ <att> << property category >> } <val>
        ^object1.predicates <preds>)
   (<preds> -^<att> <val>)
-->
   (<preds> ^<att> <val>)
}

sp {execute-remember*apply*merge-objects*mark*as*remembered
   (state <s> ^name execute-remember1
              ^top-state.interaction.stack.segment.next.info <info>
              ^operator <o>)
   (<o> ^name merge-objects
        ^object2.predicates.{ <att> << property category >> } <val>
        ^object1 <obj>)
   (<obj> ^predicates <preds>)
   (<preds> -^<att> <val>)
-->
    (<info> ^remembered <rem>)
    (<rem> ^object <obj>
           ^property <att>
           ^predicate <val>)
}

sp {execute-remember*apply*merge-objects*remove*object2*from*world
   (state <s> ^name execute-remember1
              ^operator <o>
              ^top-state.world.objects <objs>)
   (<o> ^name merge-objects
        ^object2 <obj2>)
   (<objs> ^object <obj2>)
-->
   (<objs> ^object <obj2> -)
}

sp {execute-remember*apply*merge-objects*mark*complete
   (state <s> ^name execute-remember1
              ^operator.name merge-objects
              ^current-action <a>)
-->
   (<a> ^status complete)
}


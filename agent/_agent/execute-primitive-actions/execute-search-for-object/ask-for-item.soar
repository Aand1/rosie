sp {execute-search-for-object*propose*ask-for-item
   (state <s> ^name execute-search-for-object1
              ^target-object <obj>
              ^top-state.world.robot.arm.state internal)
-->
   (<s> ^operator <o> + >)
   (<o> ^name ask-for-item
        ^object <obj>
        ^command-operator true)
}

sp {execute-search-for-object*apply*ask-for-item*send-message
   (state <s> ^name execute-search-for-object1
              ^operator <o>
              ^current-action <a>
              ^top-state.interaction.changes <c>)
   (<o> ^name ask-for-item
        ^object.predicates.shape <shape>)
   (<a> -^sent-message true)
-->
   (<c> ^outgoing-message <msg>)
   (<msg> ^type ask-about-item
          ^item <shape>)
   (<a> ^sent-message true)
}

sp {execute-search-for-object*apply*ask-for-item*mark*complete
   (state <s> ^name execute-search-for-object1
              ^operator.name ask-for-item
              ^current-action <a>)
   (<a> ^{ << received-yes received-no >> } true)
-->
   (<a> ^status complete)
}

sp {execute-search-for-object*apply*ask-for-item*mark*current-waypoint*searched
   (state <s> ^name execute-search-for-object1
              ^operator.name ask-for-item
              ^world.robot.current-waypoint <wp>
              ^current-action <a>)
   (<a> ^{ << received-yes received-no >> } true
        ^action-context <context>)
-->
   (<context> ^searched <wp>)
}

sp {execute-search-for-object*apply*ask-for-item*yes*mark*visible
   (state <s> ^name execute-search-for-object1
              ^operator.name ask-for-item
              ^target-object.predicates <preds>
              ^current-action.received-yes true)
-->
   (<preds> ^visible false -
            ^visible true)
}


##If CP << , then >> CP. 
        
smem --add {(<then> ^spelling |then|
                    ^structure-type THEN)
                        
           
           (<is>  ^spelling |if| 
                  ^structure-type CP
                  ^message-type conditional	
                  ^assigners <IS1> <IS2> <IS3> <IS4>
                  ^current-word-first true)
          (<IS1> ^structure-type CP
                 ^before <IS2> <IS3> <IS4>
                 ^relative-position after
                  ^semantic-structure *embed*
                  ^embed-structure if-subclause
                 ^syntactic-structure nil
                 ^required true)
          (<IS2> ^structure-type THEN
                 ^exclusive <IS3>
                 ^before <IS4>
                 ^optional true
                 ^syntactic-structure nil)
          (<IS3> ^structure-type COMMA
                 ^exclusive <IS2>
                 ^before <IS4>
                 ^optional true
                 ^syntactic-structure nil)
          (<IS4> ^structure-type CP
                 ^semantic-structure *embed*
                 ^embed-structure then-subclause
                 ^syntactic-structure nil
                 ^required true)
}
   

# check if the conference room is empty
# ask if someone is there.
# you can CP if the X is Y. 
# if CP
        
smem --add {(<is>  ^spelling |V-if| 
                   ^current-word |if|
                   ^current-word |whether|
                   ^prior-word V
                   ^structure-type IF
                   ^converts-to IF-CLAUSE	
                   ^assigners <IS1>
                   ^current-word-first false)
          (<IS1> ^structure-type CP
                 ^relative-position after
                  ^semantic-structure *embed*
                  ^embed-structure if-subclause
                 ^syntactic-structure nil
                 ^required true)
}
   
## Normal DP-VP-T -
smem --add {
           (<sentence> ^spelling |*-DP-VP-T|
                       ^structure-type C
                       ^current-word V
                       ^prior-word DP
                       ^message-type object-action
                       ^assigners <ass0> <ass1> <ass2>
                       ^converts-to-receiver-structure CP)
           (<ass0> ^structure-type DP
                   ^parent-lexical-item <sentence>
                   ^relative-position after
                   ^before <ass1>
                   ^before-type V
                   ^before-type VP
                   ^syntactic-structure head
                   ^semantic-structure agent
                   ^default.name self
                   ^required true)
           (<ass1> ^structure-type VP
                   ^after <ass0>
                   ^after-type DP
                   ^required true
                   ^before-type T
                   ^syntactic-structure predicate
                   ^semantic-structure action
                   ^parent-lexical-item <sentence>)
           (<ass2> ^structure-type T
                   ^after <ass1>
                   ^after-type VP
                   ^required true
                   ^syntactic-structure terminator
                   ^parent-lexical-item <sentence>)
}

## Proper-noun VP T
smem --add {
           (<sentence> ^spelling |*-PN-VP-T|
                       ^structure-type C
                       ^current-word V
                       ^prior-word PN
                       ^message-type object-action
                       ^assigners <ass0> <ass1> <ass2>
                       ^converts-to-receiver-structure CP)
           (<ass0> ^structure-type DP
                   ^parent-lexical-item <sentence>
                   ^relative-position after
                   ^before <ass1>
                   ^before-type V
                   ^before-type VP
                   ^syntactic-structure head
                   ^semantic-structure agent
                   ^default.name self
                   ^required true)
           (<ass1> ^structure-type VP
                   ^after <ass0>
                   ^after-type DP
                   ^required true
                   ^before-type T
                   ^syntactic-structure predicate
                   ^semantic-structure action
                   ^parent-lexical-item <sentence>)
           (<ass2> ^structure-type T
                   ^after <ass1>
                   ^after-type VP
                   ^required true
                   ^syntactic-structure terminator
                   ^parent-lexical-item <sentence>)
}

## Command *-VP-T - Store the red block.
smem --add {
           (<VP-T> ^spelling |*-VP-T|
                   ^structure-type C
                   ^current-word T
                   ^prior-word VP
                   ^message-type command	
                   ^assigners <ass1> <ass2>
                   ^converts-to-receiver-structure CP)
           (<ass1> ^structure-type VP
                   ^required true
                   ^before-type T
                   ^syntactic-structure predicate
                   ^semantic-structure action
                   ^parent-lexical-item <VP-T>)
           (<ass2> ^structure-type T
                   ^after <ass1>
                   ^after-type VP
                   ^required true
                   ^syntactic-structure terminator
                   ^parent-lexical-item <VP-T>)
}

# The green block is {in the pantry} {big} {a rabbit}
smem --add {
           (<sentence> ^spelling |*-DP-is-ADJ/DP/PP-T|
                       ^structure-type C
                       ^current-word IS-V
                       ^message-type object-description
                       ^prior-word DP
                       ^assigners <isa> <is-is> <isb> <isc> <isd> <ise>
                       ^referent <iso1>
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type DP
                  ^parent-lexical-item <sentence>
                  ^relative-position before
                  ^syntactic-structure head
                  ^semantic-structure indicated-object
                  ^required true)
           (<iso1> ^name soar-assign)
           (<is-is> ^structure-type IS-V
                    ^lexical-item-spelling |is|
                    ^parent-lexical-item <sentence>
                    ^syntactic-structure predicate
                    ^semantic-structure assignment
                    ^before-type T
                    ^required true)
           (<isb> ^structure-type ADJ
                  ^exclusive <isc> <isd>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true)
           (<isc> ^structure-type DP
                  ^exclusive <isb> <isd>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true)
           (<isd> ^structure-type PP
                  ^exclusive <isb> <isc>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure complement
                  ^semantic-structure location
                  ^optional true)
           (<ise> ^structure-type T
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}
# Green is a color.
smem --add {
           (<sentence> ^spelling |*-ADJ-is-DP-T|
                       ^structure-type C
                       ^current-word IS-V
                       ^prior-word ADJ
                       ^message-type adjective-definition
                       ^assigners <isa> <isb> <isc> <isd>
                       ^referent <iso1>
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type ADJ
                  ^before-type IS-V
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure head
                  ^semantic-structure object-feature-instance-head
                  ^required true)
           (<iso1> ^name soar-assign)
           (<isb> ^structure-type IS-V
                  ^after <isa>
                  ^before <isb>
                  ^lexical-item-spelling |is|
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure predicate
                  ^semantic-structure adj-assignment
                  ^before-type T
                  ^required true)
           (<isc> ^structure-type DP
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true)
           (<isd> ^structure-type T
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}

# Green is a color. - Unknown - could be proper noun
smem --add {
           (<sentence> ^spelling |*-U-is-DP-T|
                       ^structure-type C
                       ^current-word IS-V
                       ^prior-word U
                       ^message-type adjective-definition
                       ^assigners <isa> <isb> <isc> <isd>
                       ^referent <iso1>
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type U
                  ^before-type IS-V
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure head
                  ^semantic-structure unknown
                  ^required true)
           (<iso1> ^name soar-assign)
           (<isb> ^structure-type IS-V
                  ^after <isa>
                  ^before <isb>
                  ^lexical-item-spelling |is|
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure predicate
                  ^semantic-structure assignment
                  ^before-type T
                  ^required true)
           (<isc> ^structure-type DP
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true)
           (<isd> ^structure-type T
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}

# This is red / a block.
smem --add {
           (<sentence> ^spelling |*-This-is-DP-T|
                       ^structure-type C
                       ^message-type object-description
                       ^current-word IS-V
                       ^prior-word |this|
                       ^assigners <isa> <isb> <isc> <isd> <ise> <isf>
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type DP
                  ^lexical-item-spelling |this|
                  ^before-type IS-V
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure head
                  ^semantic-structure indicated-object
                  ^required true)
           (<isb> ^structure-type IS-V
                  ^after <isa>
                  ^before <isc> 
                  ^before <isd>
                  ^before <ise>
                  ^lexical-item-spelling |is|
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure predicate
                  ^semantic-structure assignment
                  ^before-type T
                  ^required true
                  ^referent <iso1>)
           (<iso1> ^name soar-assign)
           (<isc> ^structure-type DP
                  ^after-type IS-V
                  ^exclusive <isd> <ise>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true
                  ^referent nil)
           (<isd> ^structure-type ADJ
                  ^exclusive <isc> <ise>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure predicate
                  ^semantic-structure predicate
                  ^optional true
                  ^referent nil)
           (<ise> ^structure-type PP
                  ^exclusive <isc> <isd>
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure complement
                  ^semantic-structure location
                  ^optional true)
           (<isf> ^structure-type T
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}
# What is in the pantry?
smem --add {
           (<sentence> ^spelling |*-What-IS-PP-QT|
                       ^current-word IS-V
                       ^prior-word |what|
                       ^assigners <isa> <isb> <isc> <isd>
                       ^message-type what-is-question
                       ^structure-type C
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type QP
                  ^lexical-item-spelling |what|
                  ^before-type IS-V
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure head
                  ^required true)
           (<isb> ^structure-type IS-V
                  ^after <isa>
                  ^before <isb>
                  ^lexical-item-spelling |is|
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure predicate
                  ^semantic-structure what-question
                  ^before-type T
                  ^required true)
           (<isc> ^structure-type PP
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure destination
                  ^constraint <con2>
                  ^required true)
           (<con2> ^type location)
           (<isd> ^structure-type QT
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}
# Where is on the green block?
smem --add {
           (<sentence> ^spelling |*-Where-IS-DP-QT|
                       ^current-word IS-V
                       ^prior-word |where|
                       ^message-type where-is-question
                       ^assigners <isa> <isb> <isc> <isd>
                       ^structure-type C
                       ^converts-to-receiver-structure CP)
           (<isa> ^structure-type QP
                  ^lexical-item-spelling |where|
                  ^before-type IS-V
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure head
                  ^required true)
           (<isb> ^structure-type IS-V
                  ^after <isa>
                  ^before <isb>
                  ^lexical-item-spelling |is|
                  ^parent-lexical-item <sentence>
                  ^syntactic-structure predicate
                  ^semantic-structure where-question
                  ^before-type T
                  ^required true)
           (<isc> ^structure-type DP
                  ^parent-lexical-item <sentence>
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure object
                  ^constraint <con2>
                  ^required true)
           (<con2> ^type object)
           (<isd> ^structure-type QT
                  ^required true
                  ^syntactic-structure terminator
                  ^parent-lexical-item <sentence>)
}



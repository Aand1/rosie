#   @T999  Move DP PP 
#   @T998  Pick DP (movable)
#   @T997  Clean (not movable)
#   @T996  Store DP (PP optional)
#   @T995  Point PP
#   @T994  Stop

    
## STOP at the intersection/t-intersection/hall/door/hallway on the left.
smem --add {  
           (<stop> ^spelling |stop|
                   ^referent <stop1>
                   ^super-type @T995)
           (<stop1> ^id @A1106)
           
           
            (<stopx> ^spelling-single-word |stop|
                   ^structure-type CP
                   ^semantic-structure action
                   ^message-type command
                   ^referent <stop1>)
            
           (<deliver> ^spelling |deliver|
                   ^referent <oo1>
                   ^super-type @T999)
           (<oo1> ^id @A1018)  
           
           (<fetch> ^spelling |fetch|
                   ^referent <oo2>
                   ^super-type @T998)
           (<oo2> ^id @A1019)  
           
           (<find> ^spelling |find|
                   ^referent <find-action>
                   ^super-type @T998)
           (<find-action> ^id @A1020)  
            
}
## Drive forward, down the hall

## Turn left

smem --add {
           (<turn-left> ^prior-word |turn|
                         ^current-word |left|
                         ^spelling |turn-left|
                         ^structure-type CP
                         ^semantic-structure action
                         ^referent <turn-left01>
                         ^prior-word-first true
                         ^message-type command)
           (<turn-left01> ^id @A1100)
         }

## Turn right
smem --add {
           (<turn-right> ^prior-word |turn|
                         ^current-word |right|
                         ^spelling |turn-right|
                         ^structure-type CP
                         ^semantic-structure action
                         ^referent <turn-right01>
                         ^prior-word-first true
                         ^message-type command)
           (<turn-right01> ^id @A1101)
         }


## Turn around
smem --add {
           (<turn-around> ^prior-word |turn|
                         ^current-word |around|
                         ^spelling |turn-around|
                         ^structure-type CP
                         ^semantic-structure action
                         ^referent <turn-around01>
                         ^prior-word-first true
                         ^message-type command)
           (<turn-around01> ^id @A1102)
         }

########## SENSING VERBS
# detect/see/encounter/sense DP
smem --add {  
           (<see> ^spelling |see|
                  ^referent <sense>
                  ^super-type @T997)
           
           (<detect> ^spelling |detect|
                     ^referent <sense>
                     ^super-type @T997)           
            
           (<sensex> ^spelling |sense|
                     ^referent <sense>
                    ^super-type @T997)             
           
           (<encounter> ^spelling |encounter|
                     ^referent <sense>
                     ^super-type @T997)  
             
           (<reach> ^spelling |reach|
                     ^referent <sense>
                     ^super-type @T997) 
           (<sense> ^id @A1111)
}
##################### Different ways to say: Drive Forward 
## Go down the hall, go forward, go to the end of the hall, go until you ...: Go PP
smem --add {     
           (<explore> ^spelling |explore|
                      ^referent <explore1>
                      ^super-type @T992)
            (<explore1> ^id @A1110)
                   
          (<go> ^spelling |go|
                 ^referent <go1>
                 ^super-type @T992)
           
            (<gox> ^spelling-single-word |go|
                   ^structure-type CP
                   ^semantic-structure action
                   ^message-type command
                   ^referent <go1>)          
           ## GO
     (<go1> ^id @A1103)

#     forward
           (<forward> ^spelling |forward|
                      ^super-type @T995
                      ^referent <go1>) 

           (<forwardx> ^spelling-single-word |forward|
                       ^structure-type CP
                       ^semantic-structure action
                       ^message-type command
                       ^referent <go1>) 

           (<go-forward> ^prior-word |go|
                         ^current-word |forward|
                         ^spelling |go-forward|
                         ^super-type @T992
                         ^referent <go1>
                         ^prior-word-first true)
           

           (<go-down> ^prior-word |go|
                      ^current-word |down|
                      ^spelling |go-down|
                      ^super-type @T993
                      ^referent <go1>
                      ^prior-word-first true)

#     drive
           (<drive> ^spelling |drive|
                      ^super-type @T992
                      ^referent <go1>) 

           (<drivex> ^spelling-single-word |drive|
                       ^structure-type CP
                       ^semantic-structure action
                       ^message-type command
                       ^referent <go1>) 

           (<drive-forward> ^prior-word |drive|
                            ^current-word |forward|
                         ^spelling |drive-forward|
                         ^super-type @T992
                         ^referent <go1>
                         ^prior-word-first true)
           

           (<drive-down> ^prior-word |drive|
                      ^current-word |down|
                      ^spelling |drive-down|
                      ^super-type @T993
                      ^referent <go1>
                      ^prior-word-first true)

}

######### Follow A1104

## Follow the left wall / Follow the right wall
smem --add {
           (<folllow> ^spelling |follow|
                      ^super-type @T993
                      ^referent <follow1>)
          
           (<follow1> ^id @A1104)  # follow
 
}
   
smem --add {
           (<orient> ^spelling |orient|
                      ^semantic-structure action
                      ^referent <orient1>
                      ^converts-to VP
                      ^structure-type V
                      ^semantic-structure action
                      ^tense present
                      ^number singular
                      ^assigners  <VT1>
                      ^converts-to  VP)                   
          (<orient1> ^id @A1107)  
          (<VT1> ^structure-type CARDINAL
                 ^syntactic-structure head
                 ^referent-type literal-lti
                 ^semantic-structure arg1
                 ^required true)
}                         
    
smem --add {
           (<orient> ^spelling |face|
                      ^semantic-structure action
                      ^referent <orient1>
                      ^converts-to VP
                      ^structure-type V
                      ^semantic-structure action
                      ^tense present
                      ^number singular
                      ^assigners  <VT1>
                      ^converts-to VP)                   
          (<orient1> ^id @A1107)  
          (<VT1> ^structure-type CARDINAL
                 ^syntactic-structure head
                 ^referent-type literal-lti
                 ^semantic-structure arg1
                 ^required true)
}     
 
## NOT Sure really need this - T992 should handle the PP phrase.
#
#smem --add {                   
#           (<go-to> ^prior-word |go|
#                    ^current-word |to|
#                    ^spelling |go-to|
#                    ^structure-type CP
#                    ^semantic-structure action
#                    ^referent <turn-left01>
#                    ^prior-word-first true
#                    ^assigners  <VT1> <VT2>
#                    ^message-type command)
#           (<turn-left01> ^id @A1020)
#           (<VT1> ^structure-type N
#                  ^exclusive <VT2>
#                  ^syntactic-structure nil
#                  ^semantic-structure arg1
#                  ^lexical-item-spelling |waypoint|
#                  ^referent-type literal-lti
#                  ^optional true)
#          (<VT2> ^structure-type DP
#                  ^exclusive <VT1>
#                  ^syntactic-structure nil
#                  ^semantic-structure arg1
#                 # ^referent-type literal-lti
#                  ^optional true)
#} 

#
#smem --add {                   
#           (<go-to> ^prior-word |drive|
#                    ^current-word |to|
#                    ^spelling |drive-to|
#                    ^structure-type CP
#                    ^semantic-structure action
#                    ^referent <turn-left01>
#                    ^prior-word-first true
#                    ^assigners  <VT1> <VT2>
#                    ^message-type command)
#           (<turn-left01> ^id @A1020)
#           (<VT1> ^structure-type N
#                  ^exclusive <VT2>
#                  ^syntactic-structure nil
#                  ^semantic-structure arg1
#                  ^lexical-item-spelling |waypoint|
#                  ^referent-type literal-lti
#                  ^optional true)
#          (<VT2> ^structure-type DP
#                  ^exclusive <VT1>
#                  ^syntactic-structure nil
#                  ^semantic-structure arg1
#                  ^referent-type literal-lti
#                  ^optional true)
#} 
                              
#############################################
           
smem --add {           
         
#### Wall
           (<wall>  ^spelling |wall|
                    ^structure-type N
                    ^referent nil
                    ^semantic-value <wallx>
                    ^number singular)
           (<wallx> ^id @P12002)
           
                      
           (<end> ^spelling |end|
                   ^structure-type N
                    ^referent nil
                   ^number singular
                   ^semantic-value <end>)
           (<end> ^id @P12001)

                 
## CARDINAL DIRECTIONS: N, S, E, W

           (<north>  ^spelling |north| 
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8001)

           (<south>  ^spelling |south| 
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8003)

          (<east>  ^spelling |east| 
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8002)

           (<west>  ^spelling |west| 
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8004)
}
smem --add {   
           (<north>  ^spelling  |n|
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8001)

           (<south>  ^spelling  |s|
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8003)
           
          (<east>  ^spelling  |e|
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8002)

           (<west>  ^spelling  |w|
                    ^structure-type CARDINAL
                    ^number singular
                    ^id @P8004)

                      
   
## Adverbs in adverb.soar
##  forward, around, backward

## Adjectives;
##  Next (the next), 
    

#### Hall
           (<waypoint>  ^spelling |waypoint|
                        ^structure-type N
                        ^number singular
                        ^id @P12009)

#### Hall
           (<hall>  ^spelling |hall|
                    ^structure-type N
                    ^number singular
                    ^id @P12003)
#### Hallway
           (<hallway>  ^spelling |hallway|
                    ^structure-type N
                    ^number singular
                    ^id @P12003)
           
#### intersection
           (<intersection> ^spelling |intersection|
                    ^structure-type N
                    ^number singular
                    ^id @P12005)

         (<intersections> ^spelling |intersections|
                    ^structure-type N
                    ^number plural
                    ^id @P12005)
           
           (<junction> ^spelling |junction|
                    ^structure-type N
                    ^number singular
                    ^id @P12005)
           
#### door
           (<door>  ^spelling |door|
                    ^structure-type N
                    ^number singular
                    ^id @P12004)
           
          (<doors>  ^spelling |doors|
                    ^structure-type N
                    ^number plural
                    ^id @P12004)
           
           
                      
#### door
           (<doorway>  ^spelling |doorway|
                    ^structure-type N
                    ^number singular
                    ^id @P12004)
           
           (<doorways>  ^spelling |doorways|
                    ^structure-type N
                    ^number plural
                    ^id @P12004)
           
#### opening
           (<opening>  ^spelling |opening|
                    ^structure-type N
                    ^number singular
                    ^id @P12006)
           
                      
#### t-intersection
           (<t-intersection> ^spelling |t-intersection|
                    ^structure-type N
                    ^number singular
                    ^id @P12007)
           
            (<room> ^spelling |room|
                    ^structure-type N
                    ^number singular
                    ^id @P12008)
       
}

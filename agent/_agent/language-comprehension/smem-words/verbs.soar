## Example Verbs: Move, Store, Put {down}, Pick {up}, Open, Close, Turn {on/off}, Cook, Discard, Serve, Organize, Set, Clean {up}
##        is, are
#Action verbs: run, hop, think, dream, imagine [have a direct object, sometimes indirect object]
# Linking Verbs: is, are, seems,  [have a predicate noun or predicate adjective]


smem --add {
           
############################
   #### VERBS
        

   ## MOVE
           (<move> ^spelling |move|
                   ^referent @A1008
                   ^super-type @T999)
        
   ## PUT
           (<put> ^spelling |put|
                   ^referent @A1000
                   ^super-type @T999 
                   ^can-be-part-of |put-down|)
            
   ## discard
           (<discard> ^spelling |discard|
                      ^referent @A1010
                      ^super-type @T998)
              
    ## pick
           (<pick> ^spelling |pick|
                  ^referent @A1001
                  ^super-type @T998
                  ^can-be-part-of |pick-up|)
          
    ## cook
           (<cook> ^spelling |cook|
                  ^referent @A1012
                  ^super-type @T998)
          
     ## serve
           (<serve> ^spelling |serve|
                  ^referent @A1017
                  ^super-type @T998)
                  
    ## open
           (<open> ^spelling |open|
                   ^referent @A1003
                   ^super-type @T997                 
                   ^can-be-part-of |open-up|)
           
     ## close           
           (<close> ^spelling |close|
                    ^referent @A1004
                    ^super-type @T997 
                    ^converts-to VP)
           
    ## organize           
           (<organize> ^spelling |organize|
                    ^referent @O8009
                    ^super-type @T997)
           (@O8009 ^handle organize)

    ## clean           
           (<clean> ^spelling |clean|
                    ^referent @A1014
                    ^super-type @T997)
 
    ## set           
           (<set> ^spelling |set|
                    ^referent @A1013
                    ^super-type @T997)
                     
    ## activate           
           (<activate> ^spelling |activate|
                    ^referent @A1005
                    ^super-type @T997)
                          
    ## STORE
          (<store> ^spelling |store|
                   ^referent @A1009
                   ^super-type @T996)         
                                    
    ## Point
          (<point> ^spelling |point|
                   ^referent @A1002
                   ^super-type @T995)
          
         
### Sense Verbs        
            
   ## Stack - can take a conjunction of objects to stack
           
           (<stack> ^spelling |stack|
                  ^structure-type V
                  ^semantic-structure action
                  ^tense present
                  ^number singular
                  ^assigners <stack1> <stack2> 
                  ^referent @A1011
                  ^converts-to VP)
           (<stack1> ^structure-type DP
                     ^relative-position after
                     ^syntactic-structure head
                     ^semantic-structure arg1
                     ^constraint <stackcon2>
                     ^repeatable true
                     ^optional true)
           (<stackcon2> ^category block1)
           (<stack2> ^structure-type CONJP
                     ^after <stack1>
                     ^syntactic-structure predicate
                     ^semantic-structure *copy*
                     ^repeatable true
                     ^optional true)
}           
 
smem --add { 
      ## turn
           (<turn> ^spelling |turn|
                   ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners  <turna1>
                               <turna2>
                               <turna3>
                   ^referent @A1015
                   ^converts-to VP)
           (<turna1> ^structure-type DP
                     ^relative-position after
                     ^syntactic-structure complement
                     ^semantic-structure arg1
                     ^before <turna2> 
                     ^before <turna3>
                     ^optional true)
           (<turna2> ^structure-type ADJ
                     ^exclusive <turna3>
                     ^lexical-item-spelling |on| 
                     ^relative-position after
                     ^after <turna1>
                     ^syntactic-structure adjunct
                     ^semantic-structure on-off-state
                     ^required true
                     ^referent-type literal)
           (<turna3> ^structure-type ADJ
                     ^exclusive <turna2>
                     ^lexical-item-spelling |off|
                     ^relative-position after
                     ^after <turna1>
                     ^syntactic-structure adjunct
                     ^semantic-structure on-off-state
                     ^required true
                     ^referent-type literal)
          ## WAIT
           (<wait> ^spelling-single-word |wait|
                   ^structure-type CP
                   ^message-type wait)
           
            ## WAIT
           (<wait2> ^spelling |wait|
                   ^super-type @T995 
                   ^referent @A1007)
           (@A1007 ^handle wait)
}

#   @T999  Move DP PP (optional - but usually there) ADV
#   @T998  Pick DP ADV
#   @T997  Clean DP ADV PP (optional) 
#   @T996  Store DP (PP optional)
#   @T995  Point PP
#   @T994  Stop
#   @T993  Go-down [DP: the hall] [PP: until...]

### VERB such as Move, Put, Store - has a object (DP) it is moving and a destination specified by a PP

## Should add adverb to it
         
smem --add {            
           (@T999 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT1> <VT2> <VT3>
                   ^converts-to VP)
          (<VT1> ^structure-type DP
                 ^relative-position after
                 ^syntactic-structure head
                 ^semantic-structure arg1
                 ^required true)
           (<VT2> ^structure-type PP
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure arg2
                  ^optional true)
           (<VT3> ^structure-type ADV  # Up down slowly ...
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
}
#         
## Has single argument, it is manipulating
## Includes adverb - Pick up the block slowly; pick the block up

smem --add {            
           (@T998 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners  <VT1> <VT2>
                   ^converts-to VP)
          (<VT1> ^structure-type DP
                 ^relative-position after
                 ^syntactic-structure head
                 ^semantic-structure arg1
                 ^required true)
           (<VT2> ^structure-type ADV  # Up down slowly ...
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
}
   
## Has single argument, such as Set or Organize, not necessarily a movable object.
##  Optional PP - such as until ...
smem --add {            
           (@T997 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT1> <VT2> <VT3>
                   ^converts-to VP)
          (<VT1> ^structure-type DP
                 ^before <VT3>
                 ^relative-position after
                 ^syntactic-structure head
                 ^semantic-structure arg1
                 ^required true)
          (<VT2> ^structure-type ADV  # Up down slowly ...
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
          (<VT3> ^structure-type PP
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure arg2
                  ^optional true)
}        

## Has required dp, optional PP (Store) - 

smem --add {            
           (@T996  ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT1> <VT2> <VT3>
                   ^converts-to VP)
          (<VT1> ^structure-type DP
                 ^relative-position after
                 ^syntactic-structure head
                 ^semantic-structure arg1
                 ^required true)
           (<VT2> ^structure-type PP
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure arg2
                  ^optional true)
           (<VT3> ^structure-type ADV  # Up down slowly ...
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
}

### VERB such as Point a destination specified by a PP
         
smem --add {            
           (@T995 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT1> <VT2> <VT3>
                   ^converts-to VP)
           (<VT1> ^structure-type PP
                  ^relative-position after
                  ^syntactic-structure complement
                  ^semantic-structure arg1
                  ^optional true)
           (<VT2> ^structure-type ADV  # Up down slowly ...
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
           (<VT3> ^structure-type UNTIL-PP  # Until Clause
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure arg2
                   ^optional true)
}

### VERB such as stop that has no arguments except a possible adverb      
smem --add {            
           (@T994 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular 
                   ^assigners <VT0> 
                   ^converts-to VP)
           (<VT0> ^structure-type ADV  
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
}
#
#### VERB such as Forward with an optional a destination specified by a DP or PP, or PP: until
#         
smem --add {            
           (@T993 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT1> <VT2> <VT3>
                   ^converts-to VP)
           (<VT1> ^structure-type DP
                  ^before <VT2>
                  ^relative-position after
                  ^syntactic-structure head
                  ^semantic-structure arg1
                  ^referent-type literal
                  ^optional true)
           (<VT2> ^structure-type UNTIL-PP
                  ^relative-position after
                  ^syntactic-structure complement
                  ^semantic-structure arg2
                  ^optional true)
           (<VT3> ^structure-type ADV 
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)
}

smem --add {            
           (@T992 ^structure-type V
                   ^semantic-structure action
                   ^tense present
                   ^number singular
                   ^assigners <VT0> <VT1> <VT2> <VT3>
                   ^converts-to VP)
           (<VT0> ^structure-type DP
                  ^before <VT1> <VT3>
                  ^relative-position after
                  ^syntactic-structure head
                  ^semantic-structure arg1
                  ^referent-type literal
                  ^optional true)
           (<VT1> ^structure-type UNTIL-PP
                  ^relative-position after
                  ^syntactic-structure complement
                  ^semantic-structure arg2
                  ^optional true)
           (<VT2> ^structure-type ADV 
                  ^relative-position after
                  ^syntactic-structure adverb-modifier
                  ^semantic-structure modifier
                  ^optional true)           
          (<VT3> ^structure-type PP
                  ^relative-position after
                  ^syntactic-structure complement2
                  ^semantic-structure relation
                  ^optional true)
}
 

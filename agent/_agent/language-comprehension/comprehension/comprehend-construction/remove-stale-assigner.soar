sp {comprehend-construction*propose*remove-stale-assigner
   (state <s> ^name comprehend-construction
              ^segment <seg>)
   (<seg> ^retrieved-stack.item.current-word.spelling <pw>
          ^unfilled-assigner-item <uai>
         -^comprehension-structure.successful-query.<< prior-word current-word >> <uai>
         -^comprehension-structure.successful-query.<< prior-word current-word >> <pst>
         -^comprehension-structure.remove-assigner <uai>)
   (<uai> ^lt-lexical-assigner.parent-lexical-item.spelling <pw>
          ^parent-structure.structure-type <pst>)
-->
   (<s> ^operator <op> + =, <)
   (<op> ^name remove-stale-assigner
         ^assigner <uai>
         ^word <pw>)
}

sp {comprehend-construction*propose*remove-stale-assigner2
   (state <s> ^name comprehend-construction
              ^segment <seg>)
   (<seg> ^retrieved-stack.prior.item.current-word.spelling <pw>
          ^unfilled-assigner-item <uai>
         -^comprehension-structure.successful-query.<< prior-word current-word >> <uai>
         -^comprehension-structure.successful-query.<< prior-word current-word >> <pst>
         -^comprehension-structure.remove-assigner <uai>)
   (<uai> ^lt-lexical-assigner.parent-lexical-item.spelling <pw>
          ^parent-structure.structure-type <pst>)
-->
   (<s> ^operator <op> + =, <)
   (<op> ^name remove-stale-assigner
         ^assigner <uai>
         ^word <pw>)
}

sp {apply*remove-stale-assigner
   (state <s> ^operator <op>
              ^segment <seg>)
   (<seg> ^unfilled-assigner-item <uai>
          ^comprehension-structure <cs>)
   (<op> ^name remove-stale-assigner
         ^assigner <uai>
         ^word <pw>)
   (<uai> ^structure-type <st>)
-->
   (write (crlf) |Remove assigner for word: | <pw> |, type: | <st>)
   (<cs> ^remove-assigner <uai>)
}

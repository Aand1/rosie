#sp {ground-referent*propose*prefer-real-to-not-visible
# #  :interrupt
#   (state <s> ^name ground-referent
#              ^candidate-set <cs>
#              ^constraint-processing-finished true)
#   (<cs> ^proto-referent <pr> { <> <pr> <pr2> })
#   (<pr> ^object <pr-g>)
#   (<pr2> ^object { <> <pr-g> <pr-d> })
#   (<pr-g> ^predicates.status live)
#  # (<pr-d> ^predicates.visible << false unknown >>)
#   (<pr-d> ^predicates.visible << unknown >>)     # Don't prefer live to false (meaning not visible but known to exist)
#   -->
#   (<s> ^operator <op> + =, >)
#   (<op> ^name prefer-real-to-not-visible)
#}
#
#sp {ground-referent*propose*prefer-not-visible-unknown
# #  :interrupt
#   (state <s> ^name ground-referent
#              ^candidate-set <cs>
#              ^constraint-processing-finished true)
#   (<cs> ^proto-referent <pr> { <> <pr> <pr2> })
#   (<pr> ^object <pr-g>)
#   (<pr2> ^object { <> <pr-g> <pr-d> })
#   (<pr-g> ^predicates.visible false)
#  # (<pr-d> ^predicates.visible << false unknown >>)
#   (<pr-d> ^predicates.visible << unknown >>)     # Don't prefer live to false (meaning not visible but known to exist)
#   -->
#   (<s> ^operator <op> + =, >)
#   (<op> ^name prefer-real-to-not-visible)
#}

sp {comprehend*apply*process-multiple-groundings
   (state <s> ^operator <op>             
              ^candidate-set <cs>)
   (<cs> ^proto-referent <pr2>)
   (<pr2> ^object <pr-d>)
   (<pr-d> ^predicates.visible << false unknown >>
          -^predicates.status live)
   (<op> ^name prefer-real-to-not-visible)
-->
   (<cs> ^proto-referent <pr2> -)
  # (write (crlf) |Remove not visible referent: | <pr2> | when live one is available|)
}
sp {ground-referent*compare*prefer-real-to-not-visible
   (state <s> ^name ground-referent
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name prefer-real-to-not-visible)
   (<op2> ^name tested-referent)
-->
   (<s> ^operator <op1> > <op2>)
}
sp {ground-referent*propose*quantifier
#:interrupt
  (state <s> ^name ground-referent
             ^constraints.quantifier.lt-referent <quant>)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name quantifier
         ^quantifier <quant>)
}

sp {ground-referent*apply*quantifier
   (state <s> ^operator <op>
             -^superstate.name evaluate-operator
              ^top-state.dialog-world.objects <objs>)
   (<op> ^name quantifier
         ^quantifier <quant>)
  -{(<s> ^superstate.operator.<< double-constraints constraints >>.constraint <con>)
    (<con> ^handle <obj-type>
          ^property.handle category)}
-->
   (<s> ^proto-referent <pr>)
   (<objs> ^object <pr>)
   (<pr> ^predicates <pred>
         ^handle (make-constant-symbol |new-object-id|)
         ^item-type object)
   (<pred> ^quantified <quant>
           ^dialog-object true
           ^category object)
   (write (crlf) |Quantifier used. Creating ^quant object.|)
}
  

sp {ground-referent*apply*quantifier
   (state <s> ^operator <op>
             -^superstate.name evaluate-operator
              ^top-state.dialog-world.objects <objs>
              ^superstate.operator.<< double-constraints constraints >>.constraint <con>)
   (<op> ^name quantifier
         ^quantifier <quant>)
      (<con> ^handle <obj-type>
          ^property.handle category)
-->
   (<s> ^proto-referent <pr>)
   (<objs> ^object <pr>)
   (<pr> ^predicates <pred>
         ^handle (make-constant-symbol |new-object-id|)
         ^item-type <obj-type>)
   (<pred> ^quantified <quant>
           ^dialog-object true
           ^category <obj-type>)
   (write (crlf) |Quantifier used. Creating ^quant object.|)
}
  
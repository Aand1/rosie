## New version of process-semantics.
## Puts semantics on assigner.parent-receiver.semantics - need to create for every receiver.
##    So previously computed semantics for receiver structures are accessible via receiver.semantics 

##### APPLY

######### COPY Semantic substructure


sp {apply*process-semantics*process-semantics-copy
 #:interrupt
   (state <s> ^operator <o>)
   (<o> ^name process-semantics
        ^copy-semantics true
        ^assigner <ass>)
   (<ass> ^parent-receiver.semantics <sem>
          ^merged-receiver.semantics <sem2>)
   (<sem2> ^<att> <val>)
-->
   (<sem> ^<att> <val>)
   (<ass> ^processed-semantics *copy*)
   (write (crlf) |Copy semantics: | <sem> | ^| <att> | | <val>)
}
   
######### Embed Semantic substructure


sp {apply*process-semantics*process-semantics-embed
 #:interrupt
   (state <s> ^operator <o>)
   (<o> ^name process-semantics
        ^embed-semantics true
        ^embed-structure <embed>
        ^assigner <ass>)
   (<ass> ^parent-receiver.semantics <sem>
          ^merged-receiver.semantics <sem2>)
-->
   (<sem> ^<embed> <sem2>)
   (<ass> ^processed-semantics *embed*)
   (write (crlf) |Embed semantics: | <sem> | ^| <embed> | | <sem2>)
}

sp {apply*process-semantics*process-semantics-mark-processed
 #:interrupt
   (state <s> ^operator <o>)
   (<o> ^name process-semantics
        ^assigner <ass>
        ^semantics <sem>)
-->
   (write (crlf) |Mark | <ass> | with processed semantics for | <sem>)
   (<ass> ^processed-semantics <sem>)
}
   

##### APPLY Process-semantics


sp {apply*process-semantics*create-empty*semantics
   (state <s> ^operator <o>)
   (<o> ^name process-semantics
        ^assigner.parent-receiver <rec>)
  -(<rec> ^semantics <sem>)
-->
   (<rec> ^semantics <sem>)
}

sp {apply*process-semantics*simple
   (state <s> ^operator <op>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>
         ^value <value>
        -^special literal-lti
        -^extra-value
        -^extra-attribute <of>
        -^relation <sr>)
   (<ass> ^parent-receiver.semantics <sem>)
-->
   (write (crlf) | Add to assigner: | <ass> | Semantics: | <sem> | ^|  <att> | | <value>)
   (<sem> ^<att> <value>)
   (<ass> ^processed-semantics <value>)
}


sp {apply*process-semantics*simple*literal-lti*id
   (state <s> ^operator <op>
              ^smem.command <cmd>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>
         ^value-id <value>
         ^special literal-lti
        -^extra-value
        -^extra-attribute <of>
        -^relation <sr>)
   (<ass> ^parent-receiver.semantics <sem>)
-->
   (write (crlf) | Add to assigner (value lti): | <ass> | Semantics: | <sem> | ^|  <att> |.id | <value>)
   (<cmd> ^store <v1>)
   (<sem> ^<att> <v1>)
   (<v1> ^id <value>)
   (<ass> ^processed-semantics <value>)
}

sp {apply*process-semantics*simple*literal-lti
 #  :interrupt
   (state <s> ^operator <op>
              ^smem.command <cmd>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>
         ^value <value>
         ^special literal-lti
        -^extra-value
        -^extra-attribute <of>
        -^relation <sr>
         ^property <prop>)
   (<ass> ^parent-receiver.semantics <sem>)
-->
   (write (crlf) | Add to assigner (value lti): | <ass> | Semantics: | <sem> | ^|  <att> |.id.name | <value>)
   (<cmd> ^store <v2>)
   (<sem> ^<att> <v1>)
   (<v1> ^id <v2>)
   (<v2> ^name <value>
         ^property <prop>)
   (<ass> ^processed-semantics <value>)
}

sp {apply*process-semantics*simple*literal-lti*special
   (state <s> ^operator <op>
              ^smem.command <cmd>)
   (<op> ^name process-semantics
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>
         ^value-special <value>
         ^special literal-lti)
   (<ass> ^parent-receiver.semantics <sem>)
-->
   (write (crlf) | Add to assigner (value lti): | <ass> | Semantics: | <sem> | ^|  <att> | | <value>)
   (<sem> ^<att> <value>)
   (<ass> ^processed-semantics <value>)
}
sp {apply*process-semantics*unknown
   (state <s> ^operator <op>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>
         ^value <value>
         ^extra-attribute <of>
        -^special literal-lti
        -^extra-value <pf>)   
   (<ass> ^parent-receiver.semantics <sem>)
-->
    (write (crlf) | Add to assigner: | <ass> | Semantics: | <sem> | ^|  <att> |.| <of> | unknown.|)
   (<sem> ^<att> <value>)
   (<value> ^<of> unknown)
   (<ass> ^processed-semantics <att>)
}

sp {apply*process-semantics*complex
   (state <s> ^operator <op>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
        -^special literal-lti
         ^assigner <ass>
         ^attribute <att>
         ^value <value>
         ^extra-attribute <of>
         ^extra-value <pf>)
   (<ass> ^parent-receiver.semantics <sem>)
-->
    (write (crlf) | Add to assigner: | <ass> | Semantics: | <sem> | ^|  <att> |.| <of> | | <pf>)
   (<sem> ^<att> <value>)
   (<value> ^<of> <pf>)
   (<ass> ^processed-semantics <pf>)
}

sp {apply*process-semantics*relation
   #:interrupt
  # :o-support
   (state <s> ^operator <op>
              ^assigner <ass>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
        -^special literal-lti
         ^assigner <ass>
         ^attribute <att>
         ^relation <sr>)
   (<sr> ^id <sp>
         ^arg2 <sg>)
   (<ass> ^parent-receiver.semantics <sem>)
-->
    (write (crlf) | Add to assigner: | <ass> | Semantics: | <sem> | ^|  <att> | | <sp> | (| <sg> |)|)
   (<sem> ^<att> <sr2>)
   (<sr2> ^id <sp>                 # To guarantee o-support
          ^arg2 <sg>)
   (<ass> ^processed-semantics <sg>)}

sp {apply*process-semantics*remove-ungrounded
   #:interrupt
   (state <s> ^operator <op>)
   (<op> ^name process-semantics
        -^copy-semantics true
        -^embed-semantics true
         ^assigner <ass>
         ^attribute <att>)
   (<ass> ^parent-receiver.semantics <sem>)
   (<sem> ^<att> <val>)
   (<val> ^ungrounded <x>)
-->
   (write (crlf) | Removing ungrounded: | <sem> | ^| <att> | | <x>)
   (<sem> ^<att> <val> -)}


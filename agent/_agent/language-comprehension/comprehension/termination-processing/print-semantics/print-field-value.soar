# agent, action, object, adjunct
sp {print-semantics*propose*print-field-value*general
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> predicate } .name <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>)
}

sp {print-semantics*propose*print-field-value*general*object
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> action-adjunct  <> predicate }.object <value>)
   (<value> ^id <name>
           -^name)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>)
}
sp {print-semantics*propose*print-field-value*general*object*name
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> action-adjunct  <> predicate }.object <value>)
   (<value> ^name <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>)
}
sp {print-semantics*propose*print-field-value*general*object*no-id
   (state <s> ^name print-semantics
             -^<value> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> action-adjunct  <> predicate }.object <value>)
   (<value> -^id
            -^name)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <value>)
}
sp {print-semantics*propose*print-field-value*general*id
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> action-adjunct  <> predicate } <value>)
   (<value> ^id <name>
           -^name)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>)
}

sp {print-semantics*propose*print-field-value*general*no-name*no-id
   (state <s> ^name print-semantics
             -^<value> true
              ^segment.semantics.{ <field> <> original-sentence <> location <> destination <> action-adjunct  <> predicate } <value>)
   (<value> -^name
            -^id
            -^object)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <value>)
}

sp {print-semantics*propose*print-field-value*predicat
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.predicate.object.id <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field object-id
         ^name print-field-value
         ^value <name>)
}

sp {print-semantics*propose*print-field-value*predicate2
   (state <s> ^name print-semantics
             -^<value> true
              ^segment.semantics.predicate <predx>)
   (<predx> -^object.id <name>
            ^<pred> <value>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <pred>
         ^name print-field-value
         ^value <value>)
}


sp {print-semantics*propose*print-field-value*predicate3
   (state <s> ^name print-semantics
             -^<predx> true
              ^segment.semantics.predicate <predx>)
  - (<predx> ^<pred> <value>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field predicate
         ^name print-field-value
         ^value <predx>)
}

sp {print-semantics*propose*print-field-value*sentence
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.original-sentence.complete-sentence <name>)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^field original-sentence
         ^name print-field-value
         ^value <name>)
}

sp {print-semantics*propose*print-field-value*relation*simple
   (state <s> ^name print-semantics
             -^<loc> true
              ^segment.semantics.{<< location action-adjunct destination spatial-relation >> <field> } <loc>)
  -(<loc> ^spatial-relation)
  -(<loc> ^object)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <loc>)
}

sp {print-semantics*propose*print-field-value*object
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{<< location action-adjunct destination spatial-relation >> <field> } <loc>)
   (<loc> ^object.id <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>)
}

sp {print-semantics*propose*print-field-value*relation
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{<< location action-adjunct destination spatial-relation >> <field> } <loc>)
   (<loc> ^<< spatial-relation relation >> <sp>
          ^object.name <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>
         ^relation <sp>)
}

sp {print-semantics*propose*print-field-value*relation*indirect
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{<< location action-adjunct destination >> <field> }.spatial-relation <loc>)
   (<loc> ^relation <sp>
          ^object. << id name >> <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>
         ^relation <sp>)
}
sp {print-semantics*propose*print-field-value*relation*indirect2
   (state <s> ^name print-semantics
             -^<name> true
              ^segment.semantics.{<< location action-adjunct destination >> <field> }.spatial-relation <loc>)
   (<loc> ^relation <sp>
          ^object.object. << id name >> <name>)
-->
   (<s> ^operator <op> + =)
   (<op> ^field <field>
         ^name print-field-value
         ^value <name>
         ^relation <sp>)
}

##############################################
sp {apply*print-field-value*special
   (state <s> ^operator <op>)
   (<op> ^field original-sentence
         ^name print-field-value)
-->
   (write (crlf) |----------------------|)
}

sp {apply*print-field-value
   (state <s> ^operator <op>)
   (<op> ^field <field>
         ^name print-field-value
         ^value <value>
        -^relation)
-->
   (cmd watch 0)
   (<s> ^<value> true)
   (write (crlf) |     | <field> | = | <value> )
}

sp {apply*print-field-value*relation
   (state <s> ^operator <op>)
   (<op> ^field <field>
         ^name print-field-value
         ^value <value>
         ^relation <relation>)
-->
   (<s> ^<value> true)
   (write (crlf) |     | <field> |: | <relation> | (|<value>|)|)
}


##########################################
## Search Control
sp {print-semantics*compare*print-field-value*agent
   (state <s> ^name print-semantics
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name print-field-value
          ^field agent)
   (<op2> ^name print-field-value
          ^field <> agent <> original-sentence)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {print-semantics*compare*print-field-value*action
   (state <s> ^name print-semantics
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name print-field-value
          ^field action)
   (<op2> ^name print-field-value
          ^field <> agent <> action <> original-sentence)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {print-semantics*compare*print-field-value*adjunct
   (state <s> ^name print-semantics
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name print-field-value
          ^field adjunct)
   (<op2> ^name print-field-value
          ^field <> agent <> action <> adjunct <> original-sentence)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {print-semantics*compare*print-field-value*object
   (state <s> ^name print-semantics
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name print-field-value
          ^field patient)
   (<op2> ^name print-field-value
          ^field <> agent <> action <> adjunct <> patient <> original-sentence)
-->
   (<s> ^operator <op1> > <op2>)
}




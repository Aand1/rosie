
sp {comprehension*propose*process-missing-assigner*before
   (state <s> ^name comprehension
              ^operator.name next-word
              ^segment <seg>)
   (<seg> ^not-merged-assigner <ass1>
         -^not-merged-assigner.lt <ass-before>)
   (<ass1> ^structure-type <stype>
           ^lt.before <ass-before>
          -^failed merge)
  -(<seg> ^not-merged-receiver.structure-type <stype>)
-->
#   (write (crlf) |Before Assigner removal: | <ass1>)
#   (<s> ^operator <op> + =, >)
#   (<op> ^name process-missing-assigner
#         ^item <ass1>)
   (write (crlf) |Remove assigner | <ass1> | type | <stype>)
   (<seg> ^not-merged-assigner <ass1> -)
}

sp {comprehension*propose*process-missing-assigner*after
   (state <s> ^name comprehension
              ^operator.name next-word
              ^segment <seg>)
   (<seg> ^not-merged-assigner <ass1>
          ^not-merged-assigner.lt <ass-after>)
   (<ass1> ^structure-type <stype>
           ^lt.after <ass-after>
          -^failed merge)
   (<seg> ^not-merged-receiver.structure-type <stype>)
-->
#   (write (crlf) |After Assigner removal: | <ass1>)
#   (<s> ^operator <op> + =, >)
#   (<op> ^name process-missing-assigner
#         ^item <ass1>)
   (write (crlf) |Remove assigner | <ass1> | type | <stype>)
   (<seg> ^not-merged-assigner <ass1> -)
}

sp {comprehension*propose*process-missing-assigner*exclusive
   (state <s> ^name comprehension
              ^operator.name next-word
              ^segment <seg>)
   (<seg> ^not-merged-assigner <ass1>
         -^not-merged-assigner.lt <ass2>)
   (<ass1> ^lt.exclusive <ass2>)
-->
#   (write (crlf) |Exclusive Assigner removal: | <ass1>)
#   (<s> ^operator <op> + =, >)
#   (<op> ^name process-missing-assigner
#         ^item <ass1>)
   (write (crlf) |Remove exclusive assigner | <ass1>)
   (<seg> ^not-merged-assigner <ass1> -)
}

# If just hit phrase end and there is a previous assigner that can't be matched 
#  by a current receiver - even if that receiver gets promoted (to avoid dropping PP at end of DP).
#  This will be used to remove dangling ADJ in a DP
sp {comprehension*propose*process-missing-assigner*phrase-end
   (state <s> ^name comprehension
              ^operator.name << process-phrase-end next-word >>
              ^segment <seg>)
   (<seg> ^not-merged-assigner <ass1>
         -^not-merged-receiver.lt.converts-to  <rst>)
   (<ass1> ^parent-receiver <ps>
           ^lt <lla>)
   (<lla> ^optional true
          ^structure-type <rst>)
   (<ps> ^lt.converts-to  <nstruct>
         ^structure-type <nstruct>)
-->
 #  (write (crlf) |Remove optional assigner: | <ass1> | that didn't get included in the phrase.|)
 #  (<s> ^operator <op> + =, >)
 #  (<op> ^name process-missing-assigner
 #        ^item <ass1>)
      (<seg> ^not-merged-assigner <ass1> -)
}

##################

sp {comprehension*compare*process-missing-assigner
   (state <s> ^name comprehension
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name process-missing-assigner)
   (<op2> ^name << next-word comprehend-construction >>)
-->
   (<s> ^operator <op1> > <op2>)
}

sp {comprehension*compare*process-missing-assigner*comprehend
   (state <s> ^name comprehension
              ^operator <op1> +
                        <op2> +)
   (<op1> ^name process-missing-assigner)
   (<op2> ^name << process-phrase-end comprehend-word >>)
-->
   (<s> ^operator <op1> < <op2>)
}
sp {apply*process-missing-assigner*optional*remove
   (state <s> ^operator <op>
             -^segment.not-merged-receiver.structure-type unknown
              ^segment <seg>)
   (<seg> ^not-merged-assigner <ass1>)
   (<op> ^name process-missing-assigner
         ^item <ass1>)
   (<ass1> ^lt.optional true
           ^structure-type <stype>)
   (<ass1> ^parent-receiver <pr>)
-->
   (write (crlf) |Remove assigner | <ass1> | type | <stype>)
   (<seg> ^not-merged-assigner <ass1> -)
}



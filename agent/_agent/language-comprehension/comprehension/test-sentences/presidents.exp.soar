#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Tue Sep 29 11:47:10 EDT 2015
#    from file 'presidents.exp.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 5
        ^failure-count 0
        ^success-count 0)
}


#   The name of the game is president.
sp {elaborate*state*sentence*the-name-of-the-game-is-president
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S137>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is president.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |president|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
   (<S137> ^arg1 <S256>
           ^message-type object-description
           ^predicate <N10067>)
   (<S256> ^2 <S257>
           ^handle of1
           ^item-type predicate)
   (<S257> ^2 <N10047>
           ^handle name1)
   (<N10047> ^handle game1
             ^property <C27>)
   (<C27> ^handle concept
           ^type conceptual)
   (<N10067> #^handle president1
             ^item-type predicate
             ^word-structure <N10066>)
   (<N10066> ^referent <R10176>
              ^spelling president)
   (<R10176> ^handle president1
              ^word-structure <N10066>)
}


#   If the rank of one of your cards is equal to the rank of the top card then you can play your card.
sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-equal-to-the-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S314>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is equal to the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |equal|
         ^next <w10>)
   (<w10> ^spelling |to|
         ^next <w11>)
   (<w11> ^spelling |the|
         ^next <w12>)
   (<w12> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
   (<S314> ^if-subclause <S519>
           ^message-type conditional
           ^then-subclause <S866>)
   (<S519> ^arg1 <R10337>
           ^predicate <S675>)
   (<R10337> ^handle rank1
             ^item-type object
             ^predicates <P90150>
             ^predicates-copied true
             ^property <P4000>
             ^relation <S498>
             ^visibility not-visible)
   (<P90150> ^category object
             ^dialog-object true)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S498> ^2 <R10333>
           ^handle of1)
   (<R10333> ^number 1
             ^relation <S493>)
   (<S493> ^2 <P90123>
           ^handle of1)
   (<P90123> #^handle new-object-id2
             ^item-type card
             ^possessive true
             ^predicates <P90124>
             ^predicates-copied true)
   (<S675> ^2 <R10458>
           ^handle equal
           ^item-type predicate)
   (<R10458> ^handle rank1
             ^item-type object
             ^predicates <P90228>
             ^predicates-copied true
             ^property <P4000>
             ^relation <S669>
             ^visibility not-visible)
   (<P90228> ^category object
             ^dialog-object true)
   (<S669> ^2 <P90200>
           ^handle of1)
   (<P90200> #^handle new-object-id3
             ^item-type card
             ^predicates <P90201>
             ^predicates-copied true)
   (<P90201> ^category card
             ^dialog-object true
             ^handle top
             ^name top
             ^visibility not-visible)
   (<S866> ^action <N10161>
           ^action-modifier <N10159>
           ^agent <R10047>
           ^arg1 <P90242>)
   (<N10161> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<N10159> ^handle can)
   (<R10047> ^arm <A10082>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10082> ^action wait)
   (<P90068> ^handle rosie)
   (<P90242> #^handle new-object-id4
             ^item-type card
             ^possessive true
             ^predicates <P90243>
             ^predicates-copied true)
   (<P90243> ^category card
             ^dialog-object true
             ^visibility not-visible)
}


#   If the rank of one of your cards is greater than the rank of the top card then you can play your card.
sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-greater-than-the-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S893>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is greater than the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |greater|
         ^next <w10>)
   (<w10> ^spelling |than|
         ^next <w11>)
   (<w11> ^spelling |the|
         ^next <w12>)
   (<w12> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
   (<S893> ^if-subclause <S1098>
           ^message-type conditional
           ^then-subclause <S1445>)
   (<S1098> ^arg1 <R10748>
            ^predicate <S1254>)
   (<R10748> ^handle rank1
             ^item-type object
             ^predicates <P90297>
             ^predicates-copied true
             ^property <P4000>
             ^relation <S1077>
             ^visibility not-visible)
   (<P90297> ^category object
             ^dialog-object true)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S1077> ^2 <R10744>
            ^handle of1)
   (<R10744> ^number 1
             ^relation <S1072>)
   (<S1072> ^2 <P90265>
            ^handle of1)
   (<P90265> #^handle new-object-id5
             ^item-type card
             ^possessive true
             ^predicates <P90266>
             ^predicates-copied true)
   (<S1254> ^2 <R10869>
            ^handle greater-than1
            ^item-type predicate)
   (<R10869> ^handle rank1
             ^item-type object
             ^predicates <P90382>
             ^predicates-copied true
             ^property <P4000>
             ^relation <S1248>
             ^visibility not-visible)
   (<P90382> ^category object
             ^dialog-object true)
   (<S1248> ^2 <P90200>
            ^handle of1)
   (<P90200> #^handle new-object-id3
             ^item-type card
             ^predicates <P90201>
             ^predicates-copied true)
   (<P90201> ^category card
             ^dialog-object true
             ^handle top
             ^name top
             ^visibility not-visible)
   (<S1445> ^action <N10278>
            ^action-modifier <N10276>
            ^agent <R10047>
            ^arg1 <P90396>)
   (<N10278> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<N10276> ^handle can)
   (<R10047> ^arm <A10082>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10082> ^action wait)
   (<P90068> ^handle rosie)
   (<P90396> #^handle new-object-id6
             ^item-type card
             ^possessive true
             ^predicates <P90397>
             ^predicates-copied true)
   (<P90397> ^category card
             ^dialog-object true
             ^visibility not-visible)
}


#   If one of your cards is a clear card then you can play the card.
sp {elaborate*state*sentence*if-one-of-your-cards-is-a-clear-card-then-you-can-play-the-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1472>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If one of your cards is a clear card then you can play the card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |one|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |your|
         ^next <w4>)
   (<w4> ^spelling |cards|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |clear|
         ^next <w8>)
   (<w8> ^spelling |card|
         ^next <w9>)
   (<w9> ^spelling |then|
         ^next <w10>)
   (<w10> ^spelling |you|
         ^next <w11>)
   (<w11> ^spelling |can|
         ^next <w12>)
   (<w12> ^spelling |play|
         ^next <w13>)
   (<w13> ^spelling |the|
         ^next <w14>)
   (<w14> ^spelling |card|
         ^next <w15>)
   (<w15> ^spelling |.|
         ^next nil)
   (<S1472> ^if-subclause <S1609>
            ^message-type conditional
            ^then-subclause <S1872>)
   (<S1609> ^arg1 <R11110>
            ^predicate <N10348>
            ^predicate <N10351>)
   (<R11110> ^number 1
             ^relation <S1588>)
   (<S1588> ^2 <P90411>
            ^handle of1)
   (<N10348> ^handle clear
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
   (<N10351> ^handle card
             ^item-type predicate
             ^property <P7000>)
   (<P7000> ^handle category
             ^item-type property
             ^type visual)
   (<S1872> ^action <N10362>
            ^action-modifier <N10360>
            ^agent <R10047>
            ^arg1 <P90411>)
   (<N10362> ^handle play
             ^item-type action
             ^procedural <E12>
             ^type action)
   (<E12> ^op_name initiate-play1)
   (<N10360> ^handle can)
   (<R10047> ^arm <A10082>
             ^handle rosie
             ^item-type object
             ^predicates <P90068>)
   (<A10082> ^action wait)
   (<P90068> ^handle rosie)
   (<P90411> #^handle new-object-id7
             ^item-type card
             ^possessive true
             ^predicates <P90412>
             ^predicates-copied true)
   (<P90412> ^category card
             ^dialog-object true
             ^multiple true
             ^visibility not-visible)
}


#   If a card has a value of two then it is clear.
sp {elaborate*state*sentence*if-a-card-has-a-value-of-two-then-it-is-clear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1899>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a card has a value of two then it is clear.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |card|
         ^next <w3>)
   (<w3> ^spelling |has|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |value|
         ^next <w6>)
   (<w6> ^spelling |of|
         ^next <w7>)
   (<w7> ^spelling |two|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |clear|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
   (<S1899> ^if-subclause <S2009>
            ^message-type conditional
            ^then-subclause <S2181>)
   (<S2009> ^action <N10403>
            ^agent <P90478>
            ^arg1 <S2101>
            ^arg1 <N10418>)
   (<N10403> ^handle has
             ^item-type action
             ^procedural <E11>
             ^type action)
   (<E11> ^op_name initiate-has1)
   (<P90478> #^handle new-object-id8
             ^item-type card
             ^predicates <P90479>
             ^predicates-copied true)
   (<P90479> ^category card
             ^dialog-object true)
   (<S2101> ^2 <S2102>
            ^handle of1
            ^item-type predicate)
   (<S2102> ^2 <R11471>
            ^handle value)
   (<R11471> ^number 2)
   (<N10418> ^handle value
             ^property <C27>
             ^relation <S2099>)
   (<C27> ^handle concept
           ^type conceptual)
   (<S2099> ^2 <R11471>
            ^handle of1)
   (<S2181> ^arg1 <P90478>
            ^predicate <N10446>)
   (<N10446> ^handle clear
             ^item-type predicate
             ^property <C12>)
   (<C12> ^handle property
           ^type visual)
}



#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Thu Aug 20 11:36:31 EDT 2015
#    from file 'mobile-task-instructions.exp.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 31
        ^failure-count 0
        ^success-count 0)
}


#   Deliver the box to the kitchen.
sp {elaborate*state*sentence*deliver-the-box-to-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S122>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Deliver the box to the kitchen.|)
   (<w0> ^spelling |deliver|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |box|
         ^next <w3>)
   (<w3> ^spelling |to|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S122> ^action <A1018>
           ^arg1 <O8036>
           ^arg2 <S250>
           ^message-type command)
   (<A1018> ^action-type composite
             #^handle deliver1
             ^item-type action
             ^procedural <P90015>
             ^type action)
   (<P90015> ^arg1 <P90016>
              ^arg2 <P90017>
              ^op_name initiate-deliver1)
   (<P90016> ^arg-type object
              ^id <O8>)
   (<P90017> ^2 <O9>
              ^arg-type predicate
              ^id <P90018>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
   (<S250> ^2 <R10160>
           ^handle on1
           ^item-type predicate)
   (<R10160> ^handle kitchen1
             ^item-type location
             ^predicates <P90141>
             ^predicates-copied true
             ^property <P13000>
             ^visible false)
   (<P90141> ^category object
             ^dialog-object true
             ^location kitchen1)
   (<P13000> ^handle location
              ^item-type property
              ^type visual)
}


#   The goal is that the box is in the kitchen.
sp {elaborate*state*sentence*the-goal-is-that-the-box-is-in-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S277>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the box is in the kitchen.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |box|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |kitchen|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S277> ^arg1 <G4>
           ^message-type object-description
           ^subclause <S354>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S354> ^arg1 <O8036>
           ^predicate <S528>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
   (<S528> ^2 <R10160>
           ^handle in1
           ^item-type predicate)
   (<R10160> ^handle kitchen1
             ^item-type location
             ^predicates <P90141>
             ^predicates-copied true
             ^property <P13000>
             ^visible false)
   (<P90141> ^category object
             ^dialog-object true
             ^location kitchen1)
   (<P13000> ^handle location
              ^item-type property
              ^type visual)
}


#   Pick up the box.
sp {elaborate*state*sentence*pick-up-the-box3
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S551>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the box.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S551> ^action <A1001>
           ^arg1 <O8036>
           ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action
             ^procedural <P90005>
             ^type action)
   (<P90005> ^arg1 <P90006>
              ^execution-operator execute-pick-up1
              ^op_name initiate-pick-up1)
   (<P90006> ^arg-type object
              ^id <O3>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
}


#   Go to the kitchen.
sp {elaborate*state*sentence*go-to-the-kitchen4
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S657>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the kitchen.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |kitchen|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S657> ^action <A1103>
           ^message-type command
           ^predicate <S747>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<P90031> ^arg1 <P90032>
              ^initiation-operator initiate-go1)
   (<P90032> ^arg-type concept
              ^id <C5>
              ^optional true)
   (<S747> ^2 <R10160>
           ^handle on1
           ^item-type predicate)
   (<R10160> ^handle kitchen1
             ^item-type location
             ^predicates <P90141>
             ^predicates-copied true
             ^property <P13000>
             ^visible false)
   (<P90141> ^category object
             ^dialog-object true
             ^location kitchen1)
   (<P13000> ^handle location
              ^item-type property
              ^type visual)
}


#   Put down the box.
sp {elaborate*state*sentence*put-down-the-box5
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S774>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put down the box.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S774> ^action <A1000>
           ^arg1 <O8036>
           ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^type action)
   (<P90001> ^arg1 <P90002>
              ^arg2 <P90003>
              ^execution-operator execute-put-down1
              ^op_name initiate-put-down1)
   (<P90002> ^arg-type object
              ^id <O1>)
   (<P90003> ^2 <O2>
              ^arg-type predicate
              ^id <P90004>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
}


#   Fetch the box from the kitchen.
sp {elaborate*state*sentence*fetch-the-box-from-the-kitchen
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S880>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Fetch the box from the kitchen.|)
   (<w0> ^spelling |fetch|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |box|
         ^next <w3>)
   (<w3> ^spelling |from|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |kitchen|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S880> ^action <R10603>
           ^arg1 <O8036>
           ^arg2 <S1021>
           ^message-type command
           ^message-type new-verb)
   (<R10603> #^handle fetch1
              ^item-type action
              ^word-structure <N10182>)
   (<N10182> ^new-action true
              ^referent <R10603>
              ^spelling fetch
              ^super-type <T996>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
   (<S1021> ^2 <R10160>
            ^handle from
            ^item-type predicate)
   (<R10160> ^handle kitchen1
             ^item-type location
             ^predicates <P90141>
             ^predicates-copied true
             ^property <P13000>
             ^visible false)
   (<P90141> ^category object
             ^dialog-object true
             ^location kitchen1)
   (<P13000> ^handle location
              ^item-type property
              ^type visual)
}


#   The goal is that the box is in the office.
sp {elaborate*state*sentence*the-goal-is-that-the-box-is-in-the-office
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1044>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the box is in the office.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |box|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |office|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S1044> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S1121>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S1121> ^arg1 <O8036>
            ^predicate <S1295>)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
   (<S1295> ^2 <L23>
            ^handle in1
            ^item-type predicate)
   (<L23> ^handle office1
          ^item-type location
          ^predicates <P90061>)
   (<P90061> ^arm-status not-grabbed
             ^category location
             ^status live)
}


#   Go to the kitchen.
sp {elaborate*state*sentence*go-to-the-kitchen8
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1318>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the kitchen.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |kitchen|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1318> ^action <A1103>
            ^message-type command
            ^predicate <S1408>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S1408> ^2 <R10160>
            ^handle on1
            ^item-type predicate)
   (<R10160> ^handle kitchen1
             ^item-type location
             ^predicates <P90141>
             ^predicates-copied true
             ^property <P13000>
             ^visible false)
   (<P90141> ^category object
             ^dialog-object true
             ^location kitchen1)
   (<P13000> ^handle location
              ^item-type property
              ^type visual)
}


#   Pick up the box.
sp {elaborate*state*sentence*pick-up-the-box9
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1435>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the box.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1435> ^action <A1001>
            ^arg1 <O8036>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action
             ^procedural <P90005>
             ^type action)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
}


#   Go to the office.
sp {elaborate*state*sentence*go-to-the-office10
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 10)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1541>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the office.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |office|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1541> ^action <A1103>
            ^message-type command
            ^predicate <S1631>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S1631> ^2 <L23>
            ^handle on1
            ^item-type predicate)
   (<L23> ^handle office1
          ^item-type location
          ^predicates <P90061>)
   (<P90061> ^arm-status not-grabbed
             ^category location
             ^status live)
}


#   Put down the box.
sp {elaborate*state*sentence*put-down-the-box11
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 11)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1658>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put down the box.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |box|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S1658> ^action <A1000>
            ^arg1 <O8036>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^type action)
   (<O8036> ^handle small-green-box1
            ^item-type object
            ^predicates <P90071>)
   (<P90071> ^arm-status not-grabbed
             ^category block
             ^color green1
             ^movable true
             ^shape box1
             ^size small1
             ^status live)
}


#   Turn off the lights in the conference room.
sp {elaborate*state*sentence*turn-off-the-lights-in-the-conference-room
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 12)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1764>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn off the lights in the conference room.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |off|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |lights|
         ^next <w4>)
   (<w4> ^spelling |in|
         ^next <w5>)
   (<w5> ^spelling |the|
         ^next <w6>)
   (<w6> ^spelling |conference|
         ^next <w7>)
   (<w7> ^spelling |room|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
   (<S1764> ^action <A1016>
            ^arg1 <R11312>
            ^message-type command)
   (<A1016> ^action-type primitive
             ^handle turn-off1
             ^item-type action
             ^procedural <P90013>
             ^type action)
   (<P90013> ^arg1 <P90014>
              ^execution-operator execute-turn-off1
              ^op_name initiate-turn-off1)
   (<P90014> ^arg-type object
              ^id <O7>)
   (<R11312> ^handle lights1
             ^item-type predicate
             ^predicates <P90680>
             ^predicates-copied true
             ^property <P4000>
             ^visible false
             ^relations <rel>)
   (<P90680> ^category object
             ^dialog-object true
             ^name lights1)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<rel> ^2 <L30> ^handle in1)
   (<L30> ^handle 8 ^item-type location ^predicates <P90080>)
   (<P90080> ^arm-status not-grabbed ^category location ^name conference
               ^property current ^spatial-shape room1 ^status live)
}


#   The goal is that the lights in the conference room are off.
sp {elaborate*state*sentence*the-goal-is-that-the-lights-in-the-conference-room-are-off
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 13)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S1959>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the lights in the conference room are off.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |lights|
         ^next <w6>)
   (<w6> ^spelling |in|
         ^next <w7>)
   (<w7> ^spelling |the|
         ^next <w8>)
   (<w8> ^spelling |conference|
         ^next <w9>)
   (<w9> ^spelling |room|
         ^next <w10>)
   (<w10> ^spelling |are|
         ^next <w11>)
   (<w11> ^spelling |off|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
   (<S1959> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S2036>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S2036> ^arg1 <R11494>
            ^predicate <X1000>)
   (<R11494> ^handle lights1
             ^item-type predicate
             ^predicates <P90748>
             ^predicates-copied true
             ^property <P4000>
             ^relations <S2188>
             ^visible false)
   (<P90748> ^category object
             ^dialog-object true
             ^name lights1)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S2188> ^2 <L30>
            ^handle in1)
   (<L30> ^handle 8
          ^item-type location
          ^predicates <P90079>)
   (<P90079> ^arm-status not-grabbed
             ^category location
             ^name conference
             ^spatial-shape room1
             ^status live)
   (<X1000> ^handle turned-off1
             ^item-type predicate
             ^property <Y1001>)
   (<Y1001> ^handle on-off)
}


#   Go to the conference room.
sp {elaborate*state*sentence*go-to-the-conference-room14
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 14)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2266>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the conference room.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |conference|
         ^next <w4>)
   (<w4> ^spelling |room|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S2266> ^action <A1103>
            ^message-type command
            ^predicate <S2373>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S2373> ^2 <L30>
            ^handle on1
            ^item-type predicate)
   (<L30> ^handle 8
          ^item-type location
          ^predicates <P90079>)
   (<P90079> ^arm-status not-grabbed
             ^category location
             ^name conference
             ^spatial-shape room1
             ^status live)
}


#   Turn off the lights.
sp {elaborate*state*sentence*turn-off-the-lights15
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 15)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2400>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Turn off the lights.|)
   (<w0> ^spelling |turn|
         ^next <w1>)
   (<w1> ^spelling |off|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |lights|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S2400> ^action <A1016>
            ^arg1 <R11494>
            ^message-type command)
   (<A1016> ^action-type primitive
             ^handle turn-off1
             ^item-type action
             ^procedural <P90013>
             ^type action)
   (<R11494> ^handle lights1
             ^item-type predicate
             ^predicates <P90748>
             ^predicates-copied true
             ^property <P4000>
             ^relations <S2188>
             ^visible false)
   (<P90748> ^category object
             ^dialog-object true)
   (<P4000> ^handle name
             ^item-type property
             ^type visual)
   (<S2188> ^2 <L30>
            ^handle in1)
   (<L30> ^handle 8
          ^item-type location
          ^predicates <P90079>)
   (<P90079> ^arm-status not-grabbed
             ^category location
             ^name conference
             ^spatial-shape room1
             ^status live)
}


#   Find the soda.
sp {elaborate*state*sentence*find-the-soda16
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 16)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2511>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Find the soda.|)
   (<w0> ^spelling |find|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |soda|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S2511> ^action <R11722>
            ^arg1 <P90863>
            ^message-type command
            ^message-type new-verb)
   (<R11722> #^handle find2
              ^item-type action
              ^word-structure <N10569>)
   (<N10569> ^new-action true
              ^referent <R11722>
              ^spelling find
              ^super-type <T996>)
   (<P90863> #^handle new-object-id3
             ^item-type object
             ^predicates <P90864>
             ^predicates-copied true)
   (<P90864> ^category object
             ^dialog-object true
             ^shape soda1
             ^visible false)
}


#   The goal is that the soda is in the office.
sp {elaborate*state*sentence*the-goal-is-that-the-soda-is-in-the-office
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 17)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2617>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the soda is in the office.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |soda|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |office|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S2617> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S2694>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S2694> ^arg1 <P90863>
            ^predicate <S2868>)
   (<P90863> #^handle new-object-id3
             ^item-type object
             ^predicates <P90864>
             ^predicates-copied true)
   (<P90864> ^category object
             ^dialog-object true
             ^shape soda1
             ^visible false)
   (<S2868> ^2 <L23>
            ^handle in1
            ^item-type predicate)
   (<L23> ^handle office1
          ^item-type location
          ^predicates <P90061>)
   (<P90061> ^arm-status not-grabbed
             ^category location
             ^status live)
}


#   Explore until you see the soda.
sp {elaborate*state*sentence*explore-until-you-see-the-soda
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 18)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S2891>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Explore until you see the soda.|)
   (<w0> ^spelling |explore|
         ^next <w1>)
   (<w1> ^spelling |until|
         ^next <w2>)
   (<w2> ^spelling |you|
         ^next <w3>)
   (<w3> ^spelling |see|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |soda|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S2891> ^action <A1110>
            ^arg2 <S2925>
            ^message-type command)
   (<A1110> #^handle explore1
             ^item-type action
             ^procedural <E2>
             ^type action)
   (<E2> ^op_name initiate-explore1)
   (<S2925> ^until-clause <S3004>)
   (<S3004> ^action <A1111>
            ^agent <R10036>
            ^arg1 <P90863>)
   (<A1111> ^handle sense1
             ^item-type action
             ^procedural <E3>
             ^type action)
   (<E3> ^op_name initiate-sense1)
   (<R10036> ^arm <A10070>
             ^handle rosie
             ^item-type object
             ^predicates <P90060>)
   (<A10070> ^action wait)
   (<P90060> ^handle rosie)
   (<P90863> #^handle new-object-id3
             ^item-type object
             ^predicates <P90864>
             ^predicates-copied true)
   (<P90864> ^category object
             ^dialog-object true
             ^shape soda1
             ^visible false)
}


#   Pick up the soda.
sp {elaborate*state*sentence*pick-up-the-soda19
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 19)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3086>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the soda.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |soda|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3086> ^action <A1001>
            ^arg1 <P90863>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action
             ^procedural <P90005>
             ^type action)
   (<P90863> #^handle new-object-id3
             ^item-type object
             ^predicates <P90864>
             ^predicates-copied true)
   (<P90864> ^category object
             ^dialog-object true
             ^shape soda1
             ^visible false)
}


#   Go to the office.
sp {elaborate*state*sentence*go-to-the-office20
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 20)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3192>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the office.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |office|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3192> ^action <A1103>
            ^message-type command
            ^predicate <S3282>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S3282> ^2 <L23>
            ^handle on1
            ^item-type predicate)
   (<L23> ^handle office1
          ^item-type location
          ^predicates <P90061>)
   (<P90061> ^arm-status not-grabbed
             ^category location
             ^status live)
}


#   Put down the soda.
sp {elaborate*state*sentence*put-down-the-soda21
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 21)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3309>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put down the soda.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |down|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |soda|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S3309> ^action <A1000>
            ^arg1 <P90863>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^type action)
   (<P90863> #^handle new-object-id3
             ^item-type object
             ^predicates <P90864>
             ^predicates-copied true)
   (<P90864> ^category object
             ^dialog-object true
             ^shape soda1
             ^visible false)
}


#   If you see some trash then throw it away.
sp {elaborate*state*sentence*if-you-see-some-trash-then-throw-it-away
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 22)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3415>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If you see some trash then throw it away.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |you|
         ^next <w2>)
   (<w2> ^spelling |see|
         ^next <w3>)
   (<w3> ^spelling |some|
         ^next <w4>)
   (<w4> ^spelling |trash|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |throw|
         ^next <w7>)
   (<w7> ^spelling |it|
         ^next <w8>)
   (<w8> ^spelling |away|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
   (<S3415> ^if-subclause <S3503>
            ^message-type conditional
            ^then-subclause <S3747>)
   (<S3503> ^action <A1111>
            ^agent <R10036>
            ^arg1 <R12473>)
   (<A1111> ^handle sense1
             ^item-type action
             ^procedural <E3>
             ^type action)
   (<R10036> ^arm <A10070>
             ^handle rosie
             ^item-type object
             ^predicates <P90060>)
   (<A10070> ^action wait)
   (<P90060> ^handle rosie)
   (<R12473> #^handle new-object-id1 
             ^item-type object 
             ^predicates <P91146>
             ^predicates-copied true)
   (<P91146> ^category object
             ^dialog-object true
             ^name trash1
             ^quantified <N10049>)
   (<N10049> ^handle some)
   (<S3747> ^action <A1032>
            ^arg1 <R12473>
            ^modifier <A10004>)
   (<A1032> ^action-type composite
             ^handle throw1
             ^item-type action
             ^procedural <P90027>
             ^type action)
   (<P90027> ^arg1 <P90028>
              ^op_name initiate-throw1)
   (<P90028> ^arg-type object
              ^id <O14>)
   (<A10004> ^handle away1)
}


#   The goal is that the trash is in the garbage.
sp {elaborate*state*sentence*the-goal-is-that-the-trash-is-in-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 23)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S3774>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that the trash is in the garbage.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |trash|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |in|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |garbage|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
   (<S3774> ^arg1 <G4>
            ^message-type object-description
            ^subclause <S3851>)
   (<G4> ^handle goal
          ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
   (<S3851> ^arg1 <R12473>
            ^predicate <S4025>)
   (<R12473> #^handle new-object-id1 
             ^item-type object 
             ^predicates <P91146>
             ^predicates-copied true)
   (<P91146> ^category object
             ^dialog-object true
             ^name trash1)
   (<S4025> ^2 <L26>
            ^handle in1
            ^item-type predicate)
   (<L26> ^handle 3
          ^item-type object
          ^predicates <P90075>)
   (<P90075> ^arm-status not-grabbed
             ^category location1
             ^category location
             ^door closed
             ^name garbage
             ^status live)
}


#   Pick up the trash.
sp {elaborate*state*sentence*pick-up-the-trash24
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 24)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4048>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Pick up the trash.|)
   (<w0> ^spelling |pick|
         ^next <w1>)
   (<w1> ^spelling |up|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |trash|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S4048> ^action <A1001>
            ^arg1 <R12473>
            ^message-type command)
   (<A1001> ^action-type primitive
             ^handle pick-up1
             ^item-type action
             ^procedural <P90005>
             ^type action)
   (<R12473> #^handle new-object-id1 
             ^item-type object 
             ^predicates <P91146>
             ^predicates-copied true)
   (<P91146> ^category object
             ^dialog-object true
             ^name trash1)
}


#   Go to the garbage.
sp {elaborate*state*sentence*go-to-the-garbage25
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 25)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4154>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the garbage.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |garbage|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S4154> ^action <A1103>
            ^message-type command
            ^predicate <S4244>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S4244> ^2 <L26>
            ^handle on1
            ^item-type predicate)
   (<L26> ^handle 3
          ^item-type object
          ^predicates <P90075>)
   (<P90075> ^arm-status not-grabbed
             ^category location1
             ^category location
             ^door closed
             ^name garbage
             ^status live)
}


#   Put the trash in the garbage.
sp {elaborate*state*sentence*put-the-trash-in-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 26)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4271>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Put the trash in the garbage.|)
   (<w0> ^spelling |put|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |trash|
         ^next <w3>)
   (<w3> ^spelling |in|
         ^next <w4>)
   (<w4> ^spelling |the|
         ^next <w5>)
   (<w5> ^spelling |garbage|
         ^next <w6>)
   (<w6> ^spelling |.|
         ^next nil)
   (<S4271> ^action <A1000>
            ^arg1 <R12473>
            ^arg2 <S4409>
            ^message-type command)
   (<A1000> ^action-type primitive
             ^handle put-down1
             ^item-type action
             ^procedural <P90001>
             ^type action)
   (<R12473> #^handle new-object-id1 
             ^item-type object 
             ^predicates <P91146>
             ^predicates-copied true)
   (<P91146> ^category object
             ^dialog-object true
             ^name trash1)
   (<S4409> ^2 <L26>
            ^handle in1
            ^item-type predicate)
   (<L26> ^handle 3
          ^item-type object
          ^predicates <P90075>)
   (<P90075> ^arm-status not-grabbed
             ^category location1
             ^category location
             ^door closed
             ^name garbage
             ^status live)
}


#   Check if the conferene room is empty.
sp {elaborate*state*sentence*check-if-the-conferene-room-is-empty
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 27)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4440>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Check if the conference room is empty.|)
   (<w0> ^spelling |check|
         ^next <w1>)
   (<w1> ^spelling |if|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |conference|
         ^next <w4>)
   (<w4> ^spelling |room|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |empty|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
  (<S4440> ^action <A1113> ^arg1 <S4464>  ^message-type command)
  (<A1113> ^handle check ^item-type action ^type action)
  (<S4464> ^if-subclause <S4601>)
  (<S4601> ^arg1 <L30> ^predicate <E8>)
  (<L30> ^handle 8 ^item-type location ^predicates <P90079>)
  (<P90079> ^arm-status not-grabbed ^category location ^name conference
               ^spatial-shape room1 ^status live)
  (<E8> ^handle empty ^item-type predicate)
}


#   Follow these steps.
sp {elaborate*state*sentence*follow-these-steps
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 28)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4545>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Follow these steps.|)
   (<w0> ^spelling |follow|
         ^next <w1>)
   (<w1> ^spelling |these|
         ^next <w2>)
   (<w2> ^spelling |steps|
         ^next <w3>)
   (<w3> ^spelling |.|
         ^next nil)
   (<S4545> ^action <A1104>
            ^arg1 <S18>
            ^message-type command)
   (<A1104> ^action-type primitive
             ^handle follow-wall1
             ^item-type action
             ^procedural <P90033>
             ^type action)
   (<P90033> ^arg1 <P90034>
              ^execution-operator execute-follow-wall1
              ^op_name initiate-follow-wall1)
   (<P90034> ^arg-type concept
              ^id <C6>)
   (<S18> ^handle steps1
           ^multiple true
           ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
}


#   Go to the conference room.
sp {elaborate*state*sentence*go-to-the-conference-room29
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 29)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S4639>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the conference room.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |conference|
         ^next <w4>)
   (<w4> ^spelling |room|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S4639> ^action <A1103>
            ^message-type command
            ^predicate <S4746>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S4746> ^2 <L30>
            ^handle on1
            ^item-type predicate)
   (<L30> ^handle 8
          ^item-type location
          ^predicates <P90079>)
   (<P90079> ^arm-status not-grabbed
             ^category location
             ^name conference
             ^spatial-shape room1
             ^status live)
}



#   Go to the starting location.
sp {elaborate*state*sentence*go-to-the-starting-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 30)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5032>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Go to the starting location.|)
   (<w0> ^spelling |go|
         ^next <w1>)
   (<w1> ^spelling |to|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |starting|
         ^next <w4>)
   (<w4> ^spelling |location|
         ^next <w5>)
   (<w5> ^spelling |.|
         ^next nil)
   (<S5032> ^action <A1103>
            ^message-type command
            ^predicate <S5139>)
   (<A1103> ^action-type composite
             ^handle go1
             ^item-type action
             ^procedural <P90031>
             ^type action)
   (<S5139> ^2 <P91554>
            ^handle on1
            ^item-type predicate)
   (<P91554> #^handle new-object-id5
             ^item-type location
             ^predicates <P91555>
             ^predicates-copied true)
   (<P91555> ^category object
             ^dialog-object true
             ^modifier starting
             ^visible false)
}


#   Tell me the answer.
sp {elaborate*state*sentence*tell-me-the-answer
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 31)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected <S5166>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Tell me the answer.|)
   (<w0> ^spelling |tell|
         ^next <w1>)
   (<w1> ^spelling |me|
         ^next <w2>)
   (<w2> ^spelling |the|
         ^next <w3>)
   (<w3> ^spelling |answer|
         ^next <w4>)
   (<w4> ^spelling |.|
         ^next nil)
   (<S5166> ^action <A1031>
            ^arg1 <M11>
            ^arg2 <A10028>
            ^message-type command)
   (<A1031> ^action-type composite
             ^handle tell1
             ^item-type action
             ^procedural <P90025>
             ^type action)
   (<P90025> ^arg1 <P90026>
              ^op_name initiate-tell1)
   (<P90026> ^arg-type object
              ^id <O13>)
   (<M11> ^handle me
           ^item-type object
           ^property <P90051>)
   (<P90051> ^handle name
              ^item-type property
              ^type person)
   (<A10028> ^handle answer1
              ^property <C25>)
   (<C25> ^handle concept
           ^type conceptual)
}



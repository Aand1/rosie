#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Tue Sep 01 18:17:13 EDT 2015
#    from file 'risk.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 6
        ^failure-count 0
        ^success-count 0)
}


sp {elaborate*state*sentence*the-name-of-the-game-is-risk
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is risk.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |risk|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-name-of-an-action-is-attack
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is attack.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |attack|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-a-captured-location-has-more-than-one-soldier-on-it-then-you-can-attack-an-enemy-location-that-is-next-to-the-captured-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a captured location has more than one soldier on it then you can attack an enemy location that is next to the captured location.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |captured|
         ^next <w3>)
   (<w3> ^spelling |location|
         ^next <w4>)
   (<w4> ^spelling |has|
         ^next <w5>)
   (<w5> ^spelling |more|
         ^next <w6>)
   (<w6> ^spelling |than|
         ^next <w7>)
   (<w7> ^spelling |one|
         ^next <w8>)
   (<w8> ^spelling |soldier|
         ^next <w9>)
   (<w9> ^spelling |on|
         ^next <w10>)
   (<w10> ^spelling |it|
         ^next <w11>)
   (<w11> ^spelling |then|
         ^next <w12>)
   (<w12> ^spelling |you|
         ^next <w13>)
   (<w13> ^spelling |can|
         ^next <w14>)
   (<w14> ^spelling |attack|
         ^next <w15>)
   (<w15> ^spelling |an|
         ^next <w16>)
   (<w16> ^spelling |enemy|
         ^next <w17>)
   (<w17> ^spelling |location|
         ^next <w18>)
   (<w18> ^spelling |that|
         ^next <w19>)
   (<w19> ^spelling |is|
         ^next <w20>)
   (<w20> ^spelling |next|
         ^next <w21>)
   (<w21> ^spelling |to|
         ^next <w22>)
   (<w22> ^spelling |the|
         ^next <w23>)
   (<w23> ^spelling |captured|
         ^next <w24>)
   (<w24> ^spelling |location|
         ^next <w25>)
   (<w25> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-all-locations-are-captured-then-you-win
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If all locations are captured then you win.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |all|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |are|
         ^next <w4>)
   (<w4> ^spelling |captured|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |you|
         ^next <w7>)
   (<w7> ^spelling |win|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-all-locations-are-occupied-then-you-lose
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If all locations are occupied then you lose.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |all|
         ^next <w2>)
   (<w2> ^spelling |locations|
         ^next <w3>)
   (<w3> ^spelling |are|
         ^next <w4>)
   (<w4> ^spelling |occupied|
         ^next <w5>)
   (<w5> ^spelling |then|
         ^next <w6>)
   (<w6> ^spelling |you|
         ^next <w7>)
   (<w7> ^spelling |lose|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-all-locations-are-captured
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that all locations are captured.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |all|
         ^next <w5>)
   (<w5> ^spelling |locations|
         ^next <w6>)
   (<w6> ^spelling |are|
         ^next <w7>)
   (<w7> ^spelling |captured|
         ^next <w8>)
   (<w8> ^spelling |.|
         ^next nil)
}



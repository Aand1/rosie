#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Sun Mar 27 09:38:42 EDT 2016
#    from file 'mahjong.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 5
        ^failure-count 0
        ^success-count 0)
}


sp {elaborate*state*sentence*the-name-of-the-puzzle-is-mahjong
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the puzzle is mahjong.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |puzzle|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |mahjong|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-the-color-of-a-clear-free-block-is-the-color-of-another-clear-free-block-then-you-can-move-the-blocks-onto-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |if the color of a clear free block is the color of another clear free block then you can move the blocks onto the garbage.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |color|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |clear|
         ^next <w6>)
   (<w6> ^spelling |free|
         ^next <w7>)
   (<w7> ^spelling |block|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w9>)
   (<w9> ^spelling |the|
         ^next <w10>)
   (<w10> ^spelling |color|
         ^next <w11>)
   (<w11> ^spelling |of|
         ^next <w12>)
   (<w12> ^spelling |another|
         ^next <w13>)
   (<w13> ^spelling |clear|
         ^next <w14>)
   (<w14> ^spelling |free|
         ^next <w15>)
   (<w15> ^spelling |block|
         ^next <w16>)
   (<w16> ^spelling |then|
         ^next <w17>)
   (<w17> ^spelling |you|
         ^next <w18>)
   (<w18> ^spelling |can|
         ^next <w19>)
   (<w19> ^spelling |move|
         ^next <w20>)
   (<w20> ^spelling |the|
         ^next <w21>)
   (<w21> ^spelling |blocks|
         ^next <w22>)
   (<w22> ^spelling |onto|
         ^next <w23>)
   (<w23> ^spelling |the|
         ^next <w24>)
   (<w24> ^spelling |garbage|
         ^next <w25>)
   (<w25> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-a-location-is-not-below-an-object-then-it-is-clear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |if a location is not below an object then it is clear.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |not|
         ^next <w5>)
   (<w5> ^spelling |below|
         ^next <w6>)
   (<w6> ^spelling |an|
         ^next <w7>)
   (<w7> ^spelling |object|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |clear|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-a-block-is-not-on-a-location-then-it-is-free
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |if a block is not on a location then it is free.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |block|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |not|
         ^next <w5>)
   (<w5> ^spelling |on|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |location|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |free|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-all-blocks-are-on-the-garbage
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |the goal is that all blocks are on the garbage.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |all|
         ^next <w5>)
   (<w5> ^spelling |blocks|
         ^next <w6>)
   (<w6> ^spelling |are|
         ^next <w7>)
   (<w7> ^spelling |on|
         ^next <w8>)
   (<w8> ^spelling |the|
         ^next <w9>)
   (<w9> ^spelling |garbage|
         ^next <w10>)
   (<w10> ^spelling |.|
         ^next nil)
}



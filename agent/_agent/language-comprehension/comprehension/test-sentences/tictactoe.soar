learn --off

sp {elaborate*state*current-sentence-number
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment.original-sentence <first>)
   (<ss> ^current-sentence-number <csn>)
-->
   (<first> ^current-sentence-number <csn>)}

sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 9
        ^failure-count 0
        ^success-count 0)}


sp {elaborate*state*sentence*the*name*of*the*game*is*tic-tac-toe
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is tic-tac-toe.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |tic-tac-toe|
         ^next <w10>)
   (<w10> ^spelling |.|
          ^next nil)
}


sp {elaborate*state*sentence*the*name*of*an*action*is*place-block
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of an action is place-block.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |an|
         ^next <w4>)
   (<w4> ^spelling |action|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |place-block|
         ^next <w10>)
   (<w10> ^spelling |.|
          ^next nil)
}

sp {elaborate*state*sentence*move-a-free-red-block-onto-a-clear-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |Move a free red block onto a clear location.|)
   (<w0> ^spelling |move|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |free|
         ^next <w3>)
   (<w3> ^spelling |red|
         ^next <w4>)
   (<w4> ^spelling |block|
         ^next <w5>)
   (<w5> ^spelling |onto|
         ^next <w6>)
   (<w6> ^spelling |a|
         ^next <w7>)
   (<w7> ^spelling |clear|
         ^next <w8>)
   (<w8> ^spelling |location|
         ^next <w9>)
   (<w9> ^spelling |.|
          ^next nil)
}

sp {elaborate*state*sentence**if-a-location-is-clear-then-you-can-move-a-free-red-block-onto-the-location
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> #^skip true
            ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is clear then you can move a free red block onto the location.|)
    (<w0> ^spelling |if|
          ^next <w1>)
  (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |clear|
         ^next <w5>)
   (<w5> ^spelling |you|
         ^next <w6>)
   (<w6> ^spelling |can|
         ^next <w7>)
   (<w7> ^spelling |move|
         ^next <w8>)
   (<w8> ^spelling |a|
         ^next <w9>)
  (<w9> ^spelling |free|
         ^next <w10>)
   (<w10> ^spelling |red|
         ^next <w11>)
   (<w11> ^spelling |block|
         ^next <w12>)
  (<w12> ^spelling |onto|
         ^next <w13>)
   (<w13> ^spelling |the|
         ^next <w14>)
   (<w14> ^spelling |location|
         ^next <w15>)
   (<w15> ^spelling |.|
          ^next nil)
}

sp {elaborate*state*sentence*if-a-location-is-below-a-red-block-then-it-is-captured
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a location is below a red block then it is captured.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |location|
         ^next <w3>)
   (<w3> ^spelling |is|
         ^next <w4>)
   (<w4> ^spelling |below|
         ^next <w5>)
   (<w5> ^spelling |a|
         ^next <w6>)
   (<w6> ^spelling |red|
         ^next <w7>)
   (<w7> ^spelling |block|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |captured|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-three-captured-locations-are-liner
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 6)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three captured locations are linear.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |captured|
         ^next <w6>)
   (<w6> ^spelling |locations|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |linear|
         ^next <w9>)
   (<w9> ^spelling |.|
         ^next nil)
}

sp {elaborate*state*sentence*the-goal-is-that-three-captured-locations-are-in-a-line
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 7)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three captured locations are in a line.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |captured|
         ^next <w6>)
   (<w6> ^spelling |locations|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |in|
         ^next <w9>)
   (<w9> ^spelling |a|
         ^next <w10>)
   (<w10> ^spelling |line|
         ^next <w11>)   
   (<w11> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*the-goal-is-that-three-red-blocks-are-ontop-their-locations-and-those-locations-are-linear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 8)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three red blocks are ontop their locations and those locations are linear.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |blocks|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |ontop|
         ^next <w9>)
   (<w9> ^spelling |their|
         ^next <w95>)
   (<w95> ^spelling |locations|
         ^next <w10>)
   (<w10> ^spelling |and|
         ^next <w11>)   
   (<w11> ^spelling |those|
         ^next <w12>)
   (<w12> ^spelling |locations|
         ^next <w13>)
   (<w13> ^spelling |are|
         ^next <w14>)
   (<w14> ^spelling |linear|
         ^next <w15>)
   (<w15> ^spelling |.|
         ^next nil)
}

sp {elaborate*state*sentence*the-goal-is-that-three-red-blocks-are-ontop-their-locations-and-those-locations-are-in-a-row
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 9)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The goal is that three red blocks are ontop their locations and those locations are in a row.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |goal|
         ^next <w2>)
   (<w2> ^spelling |is|
         ^next <w3>)
   (<w3> ^spelling |that|
         ^next <w4>)
   (<w4> ^spelling |three|
         ^next <w5>)
   (<w5> ^spelling |red|
         ^next <w6>)
   (<w6> ^spelling |blocks|
         ^next <w7>)
   (<w7> ^spelling |are|
         ^next <w8>)
   (<w8> ^spelling |ontop|
         ^next <w85>)
   (<w85> ^spelling |their|
         ^next <w95>)
   (<w95> ^spelling |locations|
         ^next <w10>)
   (<w10> ^spelling |and|
         ^next <w11>)   
   (<w11> ^spelling |those|
         ^next <w12>)
   (<w12> ^spelling |locations|
         ^next <w13>)
   (<w13> ^spelling |are|
         ^next <w14>)
   (<w14> ^spelling |in|
         ^next <w15>)
   (<w15> ^spelling |a|
         ^next <w16>)
   (<w16> ^spelling |row|
         ^next <w17>)   
   (<w17> ^spelling |.|
         ^next nil)
}


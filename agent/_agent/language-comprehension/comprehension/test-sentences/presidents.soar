#### Test sentences for ROSIE - 
#    Built by the SentencesToSoar tool Wed Sep 02 09:07:26 EDT 2015
#    from file 'presidents.txt'.
learn --off
#   Apply initialize-rosie to set up the state.
sp {apply*initialize-rosie*sentence-number
   (state <s> ^name rosie
              ^operator.name initialize-rosie)
-->
   (<s> ^current-sentence-number 1
        ^max-sentence-number 5
        ^failure-count 0
        ^success-count 0)
}


sp {elaborate*state*sentence*the-name-of-the-game-is-president
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 1)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |The name of the game is president.|)
   (<w0> ^spelling |the|
         ^next <w1>)
   (<w1> ^spelling |name|
         ^next <w2>)
   (<w2> ^spelling |of|
         ^next <w3>)
   (<w3> ^spelling |the|
         ^next <w4>)
   (<w4> ^spelling |game|
         ^next <w5>)
   (<w5> ^spelling |is|
         ^next <w6>)
   (<w6> ^spelling |president|
         ^next <w7>)
   (<w7> ^spelling |.|
         ^next nil)
}


sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-the-same-as-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 2)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is equal to the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w10>)
   (<w10> ^spelling |equal|
         ^next <w11>)
   (<w11> ^spelling |to|
         ^next <w12>)
   (<w12> ^spelling |the|
         ^next <w112>)
   (<w112> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
}

sp {elaborate*state*sentence*if-the-rank-of-one-of-your-cards-is-the-greater-thant-the-rank-of-the-top-card-then-you-can-play-your-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 3)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If the rank of one of your cards is greater than the rank of the top card then you can play your card.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |the|
         ^next <w2>)
   (<w2> ^spelling |rank|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |one|
         ^next <w5>)
   (<w5> ^spelling |of|
         ^next <w6>)
   (<w6> ^spelling |your|
         ^next <w7>)
   (<w7> ^spelling |cards|
         ^next <w8>)
   (<w8> ^spelling |is|
         ^next <w10>)
   (<w10> ^spelling |greater|
         ^next <w11>)
   (<w11> ^spelling |than|
         ^next <w12>)
   (<w12> ^spelling |the|
         ^next <w112>)
   (<w112> ^spelling |rank|
         ^next <w13>)
   (<w13> ^spelling |of|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |top|
         ^next <w16>)
   (<w16> ^spelling |card|
         ^next <w17>)
   (<w17> ^spelling |then|
         ^next <w18>)
   (<w18> ^spelling |you|
         ^next <w19>)
   (<w19> ^spelling |can|
         ^next <w20>)
   (<w20> ^spelling |play|
         ^next <w21>)
   (<w21> ^spelling |your|
         ^next <w22>)
   (<w22> ^spelling |card|
         ^next <w23>)
   (<w23> ^spelling |.|
         ^next nil)
}

sp {elaborate*state*sentence*if-one-of-your-cards-is-a-clear-card-then-you-can-play-the-card
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 4)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If one of your cards is a clear card then you can play the card.|)
   (<w0> ^spelling |if|
         ^next <w2>)
   (<w2> ^spelling |one|
         ^next <w3>)
   (<w3> ^spelling |of|
         ^next <w4>)
   (<w4> ^spelling |your|
         ^next <w5>)
   (<w5> ^spelling |cards|
         ^next <w6>)
   (<w6> ^spelling |is|
         ^next <w7>)
   (<w7> ^spelling |a|
         ^next <w8>)
   (<w8> ^spelling |clear|
         ^next <w9>)
   (<w9> ^spelling |card|
         ^next <w10>)
   (<w10> ^spelling |then|
         ^next <w11>)
   (<w11> ^spelling |you|
         ^next <w12>)
   (<w12> ^spelling |can|
         ^next <w13>)
   (<w13> ^spelling |play|
         ^next <w14>)
   (<w14> ^spelling |the|
         ^next <w15>)
   (<w15> ^spelling |card|
         ^next <w16>)
   (<w16> ^spelling |.|
         ^next nil)
}


#   If a card has a value of eight then it is wild.
sp {elaborate*state*sentence*if-a-card-has-a-value-of-two-then-it-is-clear
   (state <s> ^name comprehension
              ^superstate <ss>
              ^segment <seg>)
   (<ss> ^current-sentence-number 5)
-->
   (<seg> ^input-sentence <first>
          ^current-word <first>
          ^original-sentence <first>
          ^expected nil)
   (<first> ^spelling |*|
            ^next <w0>
            ^complete-sentence |If a card has a value of two then it is clear.|)
   (<w0> ^spelling |if|
         ^next <w1>)
   (<w1> ^spelling |a|
         ^next <w2>)
   (<w2> ^spelling |card|
         ^next <w3>)
   (<w3> ^spelling |has|
         ^next <w4>)
   (<w4> ^spelling |a|
         ^next <w5>)
   (<w5> ^spelling |value|
         ^next <w6>)
   (<w6> ^spelling |of|
         ^next <w7>)
   (<w7> ^spelling |two|
         ^next <w8>)
   (<w8> ^spelling |then|
         ^next <w9>)
   (<w9> ^spelling |it|
         ^next <w10>)
   (<w10> ^spelling |is|
         ^next <w11>)
   (<w11> ^spelling |clear|
         ^next <w12>)
   (<w12> ^spelling |.|
         ^next nil)
  }


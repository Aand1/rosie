# sp {chunk-5*d2716*tie*1
#     :chunk
#     (state <s1> ^problemspace action ^name op_1 ^desired <d1>
#           ^not-tracking <n1> ^grabbed <g1> ^object <g1> ^operator <o1> +
#           ^problem-space <p3>)
#     (<d1> -^achieve-state <a1> ^track-relation <n1>)
#     (<n1> ^p2 <p1> ^p1 <p2> ^relation <r1>)
#     (<p1> ^focus constant6p2)
#     (<p2> ^focus constant6p1)
#     (<g1> ^focus constant6p1)
#     (<o1> ^argument1 <g1> ^name op_put-down-object-location ^argument2 <a2>)
#     (<p3> ^name op_1)
#     (<a2> ^argument <a3> ^relation <r1>)
#     (<a3> ^focus constant6p2)
#     -->
#     (<s1> ^operator <o1> >)
# }


# sp {chunk-5*d2716*tie*2
#     (state <s1> ^name op_1
#             ^problemspace action
#             ^superstate.operator.argument3 <obj>
#           ^grabbed {<grab> <> <obj>}
#           ^operator <o1> +)
#     (<o1> ^argument1 <grab> ^name op_put-down-object-location ^argument2.argument <goal>)
#     (<goal> ^property.word goal)
#     -->
#     (<s1> ^operator <o1> >)
#     (<goal> ^focus constant6p2)
# }





# sp {chunk-6*d2717*tie*1
#     :chunk
#     (state <s1> ^problemspace action ^name op_1 ^desired <d1>
#           ^not-tracking <n1> ^object <p1> ^object <p2> ^operator <o1> +
#           ^problem-space <p3>)
#     (<d1> -^achieve-state <a1> ^track-relation <n1>)
#     (<n1> ^p2 <p1> ^p1 <p2> ^relation <r1>)
#     (<p1> ^focus constant6p2)
#     (<p2> ^focus constant6p1)
#     (<o1> ^argument1 <p2> ^name op_pick-up-object)
#     (<p3> ^name op_1)
#     -->
#     (<s1> ^operator <o1> >)
# }

# sp {chunk-5*d2716*tie*1
#     :chunk
#     (state <s1> ^problemspace action ^name op_1 ^desired <d1>
#           ^not-tracking <n1> ^grabbed <g1> ^object <g1> ^operator <o1> +
#           ^problem-space <p3>)
#     (<d1> -^achieve-state <a1> ^track-relation <n1>)
#     (<n1> ^p2 <p1> ^p1 <p2> ^relation <r1>)
#     (<p1> ^focus constant6p2)
#     (<p2> ^focus constant6p1)
#     (<g1> ^focus constant6p1)
#     (<o1> ^argument1 <g1> ^name op_put-down-object-location ^argument2 <a2>)
#     (<p3> ^name op_1)
#     (<a2> ^argument <a3> ^relation <r1>)
#     (<a3> ^focus constant6p2)
#     -->
#     (<s1> ^operator <o1> >)
# }


# sp {chunk-5*d2716*tie*2
#     (state <s1> ^name op_1
#             ^problemspace action
#             ^superstate.operator.argument3 <obj>
#           ^grabbed {<grab> <> <obj>}
#           ^operator <o1> +)
#     (<o1> ^argument1 <grab> ^name op_put-down-object-location ^argument2.argument <goal>)
#     (<goal> ^property.word goal)
#     -->
#     (<s1> ^operator <o1> >)
#     (<goal> ^focus constant6p2)
# }

# sp {chunk-3*d2715*tie*1
#     :chunk
#     (state <s1> ^problemspace action ^name op_1 ^problem-space <p1>
#           ^desired <d1> ^operator <o1> +)
#     (<p1> ^name op_1)
#     (<d1> ^track-relation <t1>)
#     (<t1> ^p2 <p2> ^relation <r1>)
#     (<p2> ^focus constant6p2)
#     (<o1> ^argument2 <a1>)
#     (<a1> ^argument <a2>)
#     (<a2> ^focus constant6p2)
#     -->
#     (<a1> ^relation <r1> +)
# }

# sp {chunk-2*d2714*unknownimpasse*1
#     :chunk
#     (state <s1> ^problemspace action ^desired <d1> ^operator <o1> +)
#     (<d1> ^track-relation <t1>)
#     (<t1> ^p2 <p1> ^relation <r1>)
#     (<p1> ^focus constant6p2)
#     (<o1> ^argument2 <a1>)
#     (<a1> ^argument <a2>)
#     (<a2> ^focus constant6p2)
#     -->
#     (<a1> ^relation <r1> +)
# }

# sp {chunk-1*d2713*unknownimpasse*1
#     :chunk
#     (state <s1> ^problemspace action ^desired <d1> ^operator <o1> +)
#     (<d1> ^track-relation <t1>)
#     (<t1> ^p1 <p1> ^relation <r1>)
#     (<p1> ^focus constant6p1)
#     (<o1> ^argument1 <a1>)
#     (<a1> ^argument <a2>)
#     (<a2> ^focus constant6p1)
#     -->
#     (<a1> ^relation <r1> +)
# }

sp {chunk-6*d1582*snochange*1
    :chunk
    (state <s1> ^name action
          -^problem-space { <p1> << lgsoar message-interpretation >> }
          ^indexed-action <i1> ^object <o1> ^environment <e1> ^object <b1>
          ^topstate <t2>)
    (<i1> ^action-type composite ^name op_2 ^desired <d1>)
    (<o1> -^category { <c1> << location bin blocker >> } ^category block)
    (<e1> ^clear <o1> ^not-predicate <n1>)
    (<n1> ^a <o1> ^b { <b1> <> <o1> } ^relation <r1>)
    (<d1> ^focus-info <f1> ^focus-info <f2> ^track-relation <t1> ^list <l1>
          ^in-focus <i2>)
    (<f1> ^focus constant102p1 ^object <o1>)
    (<f2> ^focus constant102p2 ^object <b1>)
    (<t1> ^p2 <b1> ^p1 <o1>  ^next null ^relation <r1>)# ^_instantiation-of <N299>)
    (<l1> ^next <t1>)
    (<i2> ^constant102p1 <o1> ^constant102p2 <b1>)
    -->
    (<s1> ^operator <i1> +)
}

sp {chunk-5*d1580*tie*1
    :chunk
    (state <s1> ^name op_2 ^name action ^object <o1> ^in-focus <i1>
          ^object <c1> ^operator <o2> + ^problem-space <p1> ^desired <d1>
          ^environment <e1> ^problemspace <p3> ^topstate <t2>)
    (<o1> ^category block)
    (<i1> ^constant102p1 <o1> ^constant102p2 <c1>)
    (<o2> ^argument1 <o1> ^name op_pick-up-object)
    (<p1> ^name op_2)
    (<d1> ^track-relation <t1> ^list <l1> ^in-focus <i2>)
    (<t1> ^next null ^p2 <p2> ^p1 <c2> ^relation <r1>)
    (<l1> ^next <t1>)
    (<i2> ^constant102p2 <p2> ^constant102p1 <c2>)
    (<e1> ^not-predicate <n1>)
    (<n1> ^b <c1> ^relation <r1> ^a <o1>)
    (<p3> ^action <a1>)
    (<a1> ^category composite)
    -->
    (<s1> ^operator <o2> > ^operator <o2> = 0.9)
}

sp {chunk-4*d1579*tie*1
    :chunk
    (state <s1> ^name op_2 ^operator <o1> + ^object <a1> ^environment <e1>
          ^object <b1> ^in-focus <i1> ^problem-space <p1> ^desired <d1>
          ^problemspace <p3> ^topstate <t2>)
    (<o1> ^name op_put-down-object-location ^argument1 <a1> ^argument2 <a2>)
    (<e1> ^grabbed <a1> ^not-predicate <n1>)
    (<n1> ^a <a1> ^b <b1> ^relation <r1>)
    (<a2> ^argument <b1> ^relation <r1>)
    (<i1> ^constant102p1 <a1> ^constant102p2 <b1>)
    (<p1> ^name op_2)
    (<d1> ^track-relation <t1> ^list <l1> ^in-focus <i2>)
    (<t1> ^relation <r1> ^next null ^p2 <p2> ^p1 <c1>)
    (<l1> ^next <t1>)
    (<i2> ^constant102p2 <p2> ^constant102p1 <c1>)
    (<p3> ^action <a3>)
    (<a3> ^category composite)
    -->
    (<s1> ^operator <o1> > ^operator <o1> = 0.9)
}

sp {chunk-3*d1346*opnochange*2
    :chunk
    (state <s1> ^indexed-action <i1>
          -^problem-space { <p1> << lgsoar message-interpretation >> }
          ^operator <i1> ^object <p2> ^object <p3> ^environment <e1>
          ^topstate <t2>)
    (<i1> ^action-type composite ^name op_2 ^desired <d1>)
    (<d1> ^focus-info <f1> ^focus-info <f2> ^track-relation <t1> ^list <l1>
          ^in-focus <i2>)
    (<f1> ^focus constant102p2 ^object <p2>)
    (<f2> ^focus constant102p1 ^object <p3>)
    (<t1>  ^next null ^p2 <p2> ^p1 <p3> ^relation <r1>)# ^_instantiation-of <N299>)
    (<l1> ^next <t1>)
    (<i2> ^constant102p1 <p3> ^constant102p2 <p2>)
    (<e1> ^predicate <p4>)
    (<p4> ^b <p2> ^relation <r1> ^a <p3>)
    -->
    (<i1> ^success <d1> +)
}

sp {chunk-2*d1346*snochange*1
    :chunk
    (state <s1> ^name op_2 ^desired <d1> ^environment <e1> ^in-focus <i2>
          ^topstate <t2>)
    (<d1> ^track-relation <t1> ^list <l1> ^in-focus <i1>)
    (<t1> ^next null ^p2 <p1> ^p1 <c1> ^relation <r1>)
    (<l1> ^next <t1>)
    (<i1> ^constant102p2 <p1> ^constant102p1 <c1>)
    (<e1> ^predicate <p2>)
    (<p2> ^relation <r1> ^b <b1> ^a <c2>)
    (<i2> ^constant102p2 <b1> ^constant102p1 <c2>)
    -->
    (<s1> ^success <d1> +)
}

sp {chunk-1*d1336*unknownimpasse*1
    :chunk
    (state <s1> ^name action ^indexed-action <i1> ^topstate <t1>)
    (<i1> ^_metadata <_1> ^argument11 <a1> ^argument10 <a2>)
    (<_1> ^map-id <M7>)
    (<a1> ^argument <a3>)
    (<t1> ^found-prep <f1>)
    (<f1> ^smem-rep.name on)
    -->
    (<i1> ^desired <d1> +)
    (<d1> ^list <l1> + ^track-relation <n1> +)
    (<l1> ^next <n1> +)
    (<n1>  ^relation <f1> + ^p2 <a3> + ^p1 <a2> +
           ^next null + ^_instantiation-of.identifier constant102)
}

sp {move-object*propose*select-subaction-perform-move
   (state <s> ^name move-object
              ^move-metadata <move>
              ^object-to-move <obj>
              ^destination <dest>
              ^robot-state.arm.action wait
              ^current-action.cleared-object true
             -^current-action.performed-move)
   (<obj> ^perception-obj <p>)
-->
   (<s> ^operator <o> +)
   (<o> ^name select-subaction-perform-move
        ^action-type custom
        ^object <obj>
        ^destination <dest>
        ^metadata <move>)
}

sp {move-object*reject*select-subaction-perform-move*not*wait
   (state <s> ^name move-object
              ^operator <o> +
              ^robot-state.arm.action <> wait)
   (<o> ^name select-subaction-perform-move)
-->
   (<s> ^operator <o> -)
}

sp {move-object*elaborate*attend-to-arm*not*idle
   (state <s> ^name move-object
              ^robot-state.arm.action <> wait
             -^current-action.subaction)
-->
   (<s> ^attend-to-arm true)
}

sp {move-object*propose*wait
   (state <s> ^name move-object
              ^robot-state.arm.action <> wait
             -^current-action.subaction
             -^operator.name wait)
-->
   (<s> ^operator <o> + =)
   (<o> ^name wait
        ^action-type custom)
}
sp {move-object*attend-to-scene-change*no*action*problemspace
   (state <s> ^name attend-to-scene-change)
-->
   (<s> ^problemspace action -)
}

sp {move-object*prefer*attend-to-scene-change*over*wait
   (state <s> ^name move-object
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-scene-change)
   (<o2> ^name wait)
-->
   (<s> ^operator <o1> > <o2>)
}


sp {move-object*apply*select-subaction-perform-move
   (state <s> ^name move-object
              ^operator <o>
              ^current-action <a>)
   (<o> ^name select-subaction-perform-move
        ^object <obj>
        ^destination <dest>
        ^metadata <move>)
-->
   (<a> ^subaction <sub>
        ^performed-move true)
   (<sub> ^name op_1
          ^parameters <p>)
   (<p> ^_metadata <move>
        ^action-type composite
        ^argument3 <obj>
        ^argument4.argument <dest>)
}

sp {move-object*apply*select-subaction-perform-move*remove*focus
   (state <s> ^name move-object
              ^operator.name select-subaction-perform-move
              ^topstate.object <obj>
             -^grabbed <obj>)
   (<obj> ^focus <any>)
-->
   (<obj> ^focus <any> -)
}

sp {move-object*apply*select-subaction-perform-move*remove*nfocus
   (state <s> ^name move-object
              ^operator.name select-subaction-perform-move
              ^topstate.object <obj>
             -^grabbed <obj>)
   (<obj> ^nfocus <any>)
-->
   (<obj> ^nfocus <any> -)
}

sp {move-object*move-to-location*propose*copy-success-to-superstate
   (state <s> ^name op_1
              ^success <success>
              ^superstate.operator <o>)
   (<o> ^name op_1)
-->
   (<o> ^succeeded true)
}

sp {move-object*apply*perform-move*mark*complete
   (state <s> ^name move-object
              ^operator <o>
              ^current-action <a>)
   (<o> ^name op_1
        ^succeeded true)
-->
   (<a> ^complete true)
}

sp {move-object*op_1*tie*complete*move
  (state <s>
             ^impasse tie
             ^attribute operator
             ^superstate <ss>)
  (<ss> ^name op_1
        ^superstate <sss>)
  (<sss> ^name move-object
        ^current-action <a>)
-->
   (<a> ^complete true)
}
             
   #sp {composite-action*operator-tie*report-status
#   (state <s> ^impasse tie
#   	      ^attribute operator
#	      ^action-type composite
#	      ^problemspace action
#	      -^problemspace learning
#	      ^topstate <ts>
#	      ^superstate <ss>)
#   (<ts> ^interaction.status <status>)
#-->
#   (<status> ^failure <f>)
#   (<f> ^information unknown-subaction
#   	^type failure)
#}
#
#sp {move-object*apply*perform-move-object*cleanup*focus
#   (state <s> ^name move-object
#              ^operator <o>
#              ^{ << object-to-move destination >> } <obj>)
#   (<o> ^name op_1
#        ^succeeded true)
#   (<obj> ^focus <any>)
#-->
#   (<obj> ^focus <any> -)
#}
#   
#sp {move-object*apply*perform-move-object*cleanup*nfocus
#   (state <s> ^name move-object
#              ^operator <o>
#              ^{ << object-to-move destination >> } <obj>)
#   (<o> ^name op_1
#        ^succeeded true)
#   (<obj> ^nfocus <any>)
#-->
#   (<obj> ^nfocus <any> -)
#}
#   
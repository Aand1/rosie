sp {measure-object*propose*select-subaction-send-training-example
   (state <s> ^name measure-object
              ^object-to-measure <obj>
              ^train-sense <sense>
              ^object-on-location true
             -^current-action.trained)
-->
   (<s> ^operator <o> +)
   (<o> ^name select-subaction-send-training-example
        ^action-type custom
        ^object <obj>
        ^sense <sense>)
}

sp {measure-object*apply*select-subaction-send-training-example
   (state <s> ^name measure-object
              ^operator <o>
              ^current-action <a>)
   (<o> ^name select-subaction-send-training-example
        ^object <obj>
        ^sense <sense>)
-->
   (<a> ^subaction <sub>)
   (<sub> ^name send-training-example
          ^object <obj>
          ^sense <sense>)
}

sp {measure-object*apply*send-training-example
   (state <s> ^name measure-object
              ^operator <o>
              ^io.output-link <out>)
   (<o> ^name send-training-example
        ^subaction.object.id <id>
        ^subaction.sense <sense>)
   (<sense> ^label <label>
            ^property.name <prop-name>)
-->
   (<out> ^send-training-label <stl>)
   (<stl> ^id <id> ^label <label> ^property-name <prop-name>)
   (<s> ^ol-command <stl>)
}

sp {measure-object*apply*send-training-example*mark*trained
   (state <s> ^name measure-object
              ^operator <o>
              ^current-action <a>
              ^ol-command <cmd>)
   (<o> ^name send-training-example
        ^subaction <sub>)
   (<cmd> ^status complete)
-->
   (<s> ^ol-command <cmd> -)
   (<a> ^trained true)
   (<sub> ^complete true)
}
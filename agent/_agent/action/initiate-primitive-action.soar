sp {action*apply*primitive*initiate-operator*create*local*current-action
   (state <s> ^problemspace.action <act>
              ^operator <o>)
   (<o> ^action-type primitive
        ^action-name <action-name>)
   (<act> -^type none)
-->
   (<s> ^current-action-copy <ca>)
   (<ca> ^name <action-name>
         ^execution-operator (concat |execute-| <action-name>)
         ^arguments <args>)
}

sp {action*apply*primitive*initiate-operator*mark*copied-arguments
   (state <s> ^problemspace.action <act>
              ^operator <o>
              ^current-action-copy <ca>)
   (<o> ^action-type primitive
        ^action-name <action-name>)
   (<act> -^type none)
   (<ca> ^name <action-name>)
-->
   (<s> ^copied-arguments true)
}

sp {action*apply*primitive*initiate-operator*copy*level1*args
   (state <s> ^problemspace.action <act>
              ^operator <o>
              ^current-action-copy <ca>)
   (<o> ^action-type primitive
        ^action-name <action-name>
        ^{ <arg-name> << arg1 direction >> } <arg1>)
   (<act> -^type none)
   (<ca> ^name <action-name>
         ^arguments <args>)
-->
   (<args> ^<arg-name> <arg1>)
}

sp {action*apply*primitive*initiate-operator*copy*level2*args
   (state <s> ^problemspace.action <act>
              ^operator <o>
              ^current-action-copy <ca>)
   (<o> ^action-type primitive
        ^action-name <action-name>
        ^arg2 <arg2>)
   (<act> -^type none)
   (<ca> ^name <action-name>
         ^arguments <args>)
   (<arg2> ^id <rel>
           ^arg2 <obj2>)
-->
   (<args> ^arg2 <new-arg2>)
   (<new-arg2> ^relation <rel>
               ^arg2 <obj2>)
}

sp {action*apply*primitive*initiate-operator*copy*until*args
   (state <s> ^problemspace.action <act>
              ^operator <o>
              ^current-action-copy <ca>)
   (<o> ^action-type primitive
        ^action-name <action-name>
        ^until <until>)
   (<act> -^type none)
   (<ca> ^name <action-name>
         ^arguments <args>)
   (<until> ^object-type <type>
            ^object-count <count>)
-->
   (<args> ^until <new-until>)
   (<new-until> ^object-type <type>
                ^object-count <count>)
}

sp {action*apply*primitive*initiate-operator*copy*current-action*topstate*segment
   (state <s> ^problemspace.action <act>
              ^operator <o>
              ^current-action-copy <ca>
              ^copied-arguments true
              ^topstate.interaction.stack.segment <seg>)
   (<o> ^action-type primitive
        ^action-name <action-name>)
   (<act> -^type none)
   (<ca> ^name <action-name>)
-->
   (<seg> ^current-action <ca>)
}

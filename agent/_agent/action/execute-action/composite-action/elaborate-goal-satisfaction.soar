sp {composite-action*elaborate*desired*state*predicate*satisfied
   (state <s> ^problem-space.name composite-action
              ^desired.predicate <p>)
   (<p> ^type state
        ^id.name <pred-name>
        ^1 <obj>)
   (<obj> ^predicates <preds>)
   (<preds> ^<pred-type> <pred-name>)
-->
   (<p> ^satisfied true)
}

sp {composite-action*elaborate*desired*relation*predicate*satisfied
   (state <s> ^problem-space.name composite-action
              ^desired.predicate <p>
              ^world.predicates <preds>)
   (<p> ^type relation
        ^id <rel-id>
        ^1 <obj1>
        ^2 <obj2>)
   (<preds> ^predicate <pred>)
   (<pred> ^predicate-info <rel-id>
           ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
-->
   (<p> ^satisfied true)
}

sp {composite-action*elaborate*predicate*not*satisfied
   (state <s> ^problem-space.name composite-action
              ^desired.predicate <p>)
   (<p> -^satisfied true)
-->
   (<p> ^satisfied false)
}

sp {composite-action*elaborate*desired*satisfied
   (state <s> ^problem-space.name composite-action
              ^desired <d>)
   (<d> ^predicate.satisfied true
       -^predicate.satisfied false)
-->
   (<d> ^satisfied true)
}

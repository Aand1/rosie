sp {generate-grounded-predicate*elaborate*grounding-info
   (state <s> ^name generate-grounded-predicate
              ^predicate.smem-rep <goal-pred>)
   (<goal-pred> ^{ <pred-arg-name> << id 1 2 >> } <pred-arg>)
-->
   (<s> ^grounding-info <info>)
   (<info> ^predicate-arg-name <pred-arg-name>
           ^predicate-arg <pred-arg>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*predicate-type
   (state <s> ^name generate-grounded-predicate
              ^predicate.smem-rep.type <pred-type>
              ^grounding-info <info>)
   (<info> ^predicate-arg-name id)
-->
   (<info> ^predicate-type <pred-type>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*matches*predicate*id
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^action-id.procedural <proc>
              ^action-context <action>)
   (<info> ^predicate-type state
           ^predicate-arg-name id
           ^predicate-arg <parg>)
   (<proc> ^<arg-name> <parg>)
   (<action> ^<arg-name>.id <pred>)
-->
   (<info> ^matches <pred>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*matches*relation*id
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^action-id.procedural <proc>
              ^action-context <action>)
   (<info> ^predicate-type relation
           ^predicate-arg-name id
           ^predicate-arg <parg>)
   (<proc> ^<arg-name> <rel-arg>)
   (<rel-arg> ^arg-type predicate
              ^id <parg>)
   (<action> ^<arg-name>.id <rel>)
-->
   (<info> ^matches <rel>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*matches*object*level1
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^action-id.procedural <proc>
              ^action-context <action>)
   (<info> ^predicate-arg-name << 1 2 >>
           ^predicate-arg <parg>)
   (<proc> ^<arg-name> <parg>)
   (<action> ^<arg-name>.id <obj>)
-->
   (<info> ^matches <obj>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*matches*object*level2
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^action-id.procedural <proc>
              ^action-context <action>)
   (<info> ^predicate-arg-name << 1 2 >>
           ^predicate-arg <parg>)
   (<proc> ^<arg-name>.{2} <parg>)
   (<action> ^<arg-name>.{2} <obj>)
-->
   (<info> ^matches <obj>)
}

sp {generate-grounded-predicate*elaborate*ground-default*no*matches
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>)
   (<info> -^matches
            ^predicate-arg.default <def>)
-->
   (<info> ^ground-default <def>)
}

sp {generate-grounded-predicate*elaborate*matches-default*id
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>)
   (<info> ^predicate-arg-name id
           ^ground-default <def>)
-->
   (<info> ^matches-default <def>)
}

sp {generate-grounded-predicate*elaborate*default-match-info*object
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>)
   (<info> ^predicate-arg-name << 1 2 >>
           ^ground-default <def>)
-->
   (<info> ^default-match-info <dmi>)
   (<dmi> ^default-arg <def>)
}

sp {generate-grounded-predicate*elaborate*default-match-info*no-matches*object
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^world.objects.object <obj>)
   (<info> ^default-match-info <match-info>)
   (<match-info> ^default-arg.<pred-name> <pred-val>)
   (<obj> -^predicates.<pred-name> <pred-val>)
-->
   (<match-info> ^no-matches <obj>)
}

sp {generate-grounded-predicate*elaborate*default-match-info*matches*object
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^world.objects.object <obj>)
   (<info> ^default-match-info <match-info>)
   (<match-info> ^default-arg.<pred-name> <pred-val>)
   (<obj> ^predicates.<pred-name> <pred-val>)
-->
   (<match-info> ^matches <obj>)
}

sp {generate-grounded-predicate*elaborate*grounding-info*matches-default*object
   (state <s> ^name generate-grounded-predicate
              ^grounding-info <info>
              ^world.objects.object <obj>)
   (<info> ^default-match-info <match-info>)
   (<match-info> ^matches <obj>
               -^no-matches <obj>)
-->
   (<info> ^matches-default <obj>)
}

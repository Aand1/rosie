#### elaborate state as a selection problem space if an operator-tie occurs during application of a composite operator
sp {elaborate*state*operator-tie*composite-operator
   (state <s> ^choices multiple
   	      ^action-type composite
	      ^problemspace action)
-->
   (<s> ^name selection)
   (force-learn <s>)
}

### set up the max depth
sp {apply*init-current-evaluation-depth*max
   (state <s> ^top-selection true
              ^operator <op>)
   (<op> ^name init-current-evaluation-depth)
-->
   (<s> ^max-evaluation-depth 0)
}

### set up the problem space
sp {iterative-search*selection*elaborate*problem-space
   (state <s> ^name {<sname> <> evaluate-operator <> operator-tie <> selection <> action-policy <> find-parameter})
-->  
   (<s> ^problem-space <p>)
   (<p> ^name <sname>
   	^default-state-copy yes
	^two-level-attributes object
	^two-level-attributes self
	^one-level-attributes grabbed on off closed open track-relation cooked action-space-id not-tracking not-achieved-state clear
	^deep-copy action-space-operator track-relation operator-argument
	^dont-copy vpredicates)
}

sp {operator-tie*elaborate*learning-type*exploration
   (state <s> ^configuration.learning-type <any>
   	      ^problem-space <ps>)
-->
   (<ps> ^learning-type <any>)
}


### elaborate configuration
sp {iterative-search*selection*configuration*exploration
   (state <s> ^action-type composite
   	      ^superstate.name action
	      ^configuration <conf>
	      ^quiescence t)
-->
   (<conf> ^learning-type exploration)
}
sp {elaborate*new*candidate*operator
   (state <s> ^name generate-action-space-operator
   	      ^map-id <map>
	      ^retrieved-actions.action <act>
	      ^pairs <p>)
   (<map> ^procedural <pid>)
   (<act> ^name <name>
	  ^_metadata.map-id <map>)
-->
   (<s> ^candidate-operator <cop>)
   (<cop> ^name <name>
   	  ^action-type composite
	  ^_metadata <met>
	  ^_instantiation-of <pid>)
   (<met> ^map-id <map>)
   (<p> ^<act> <cop>)
}

sp {elaborate*new*candidate*operator*argument*single-level
   (state <s> ^name generate-action-space-operator
   	      ^map-id <map>
	      ^retrieved-actions.action <act>
	      ^pairs.<act> <cop>
	      ^object <co>)
   (<act> ^<arg1> <val1>)
   (<val1> ^smem-rep <rep>)
   (<co> ^smem-rep <rep>)
-->
   (<cop> ^<arg1> <co>)
}

sp {elaborate*new*candidate*operator*argument*second*level
   (state <s> ^name generate-action-space-operator
   	      ^map-id <map>
	      ^retrieved-actions.action <act>
	      ^object <co>
	      ^pairs <pair>)
   (<pair> ^<act> <cop>)
   (<act> ^<arg1> <arg1-val>)
   (<arg1-val> ^argument <val1>)
   (<val1> ^smem-rep <rep>)
   (<co> ^smem-rep <rep>)
-->
   (<cop> ^<arg1> <argvalnew>)
   (<argvalnew> ^argument <co>)
   (<pair> ^<arg1-val> <argvalnew>)
}

sp {elaborate*new*candidate*operator*relation*second*level
   (state <s> ^name generate-action-space-operator
   	      ^map-id <map>
	      ^retrieved-actions.action <act>
	      ^pairs <p>
	      ^object <co>
	      ^topstate.found-prep <fp>)
   (<p> ^<act> <cop>
   	^<arg1-val> <argvalnew>)
   (<act> ^<arg1> <arg1-val>)
   (<arg1-val> ^relation <rel>)
   (<cop> ^<arg1> <argvalnew>)
   (<rel> ^smem-rep <id>)
   (<fp> ^smem-rep <id>)
-->
   (<argvalnew> ^relation <fp>)
}


   
######################### elaborate state ##############################
sp {generate-action-space-operator*elaborate*state
   (state <s> ^name generate-action-space-operator
   	      ^superstate.operator <sop>
	      ^problemspace <ps>)
   (<sop> ^name generate-action-space-operator
   	  ^template <op-id>)
-->
   (<s> ^operator-template <op-id>
   	^pairs <p>)
   (<ps> ^state <st>)
   (<st> ^dont-copy object)
}

#### elaborate objects
sp {generate-action-space-operator*elaborate*object
   (state <s> ^name generate-action-space-operator  
   	      ^superstate.superstate <sss>
	      ^in-focus <if>)
   (<sss> ^object <obj>
   	  ^in-focus.<f> <obj>)
-->
   (<s> ^object <obj>)
   (<if> ^<f> <obj>)
}

sp {generate-action-space-operator*elaborate*relation
   (state <s> ^name generate-action-space-operator  
   	      ^superstate.superstate.desired <des>)
   (<des> ^track-relation.relation <rel>)
-->
   (<s> ^relation <rel>)
}

######################### elaborate retrieve-id #########################
sp {generate-action-space-operator*retrieve*template-id
   (state <s> ^name generate-action-space-operator
   	      ^operator-template <op-id>
	      -^retrieved-lti <pobj>)
   (<op-id> -^<any>)
-->
   (<s> ^nretrieve-lti <op-id>)
}

sp {generate-action-space-operator*retrieve*pp-object
   (state <s> ^name generate-action-space-operator
   	      ^operator-template <op-id>
	      -^retrieved-lti <pobj>)
   (<op-id> ^{<arg> <> op_name} <pobj>)
   (<pobj> -^<any>)
-->
   (<s> ^nretrieve-lti <pobj>)
}

##### query semantic memory ###############################################
sp {generate-action-space-operator*query*map-id
   (state <s> ^name generate-action-space-operator
   	      ^operator-template <pid>)
-->
   (<s> ^smem-query-cue <cue>)
   (<cue> ^procedural <pid>)
}

sp {generate-action-space-operator*copy*map-id
   (state <s> ^name generate-action-space-operator
   	      ^operator-template <pid>
	      ^retrieved-lti-cue <rlc>)
   (<rlc> ^cue <cue>
   	  ^retrieved-lti <ret>)
-->
   (<s> ^map-id <ret>)
}


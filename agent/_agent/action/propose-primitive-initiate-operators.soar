####### propose pick-up for objects #########################################
sp {action*propose*initiate-pick-up1
   (state <s> ^problemspace.action <act>
              ^world.objects.object <obj>
             -^world.robot.arm.grabbed <any>)
   (<obj> ^predicates.category block1)
   (<act> -^type none)
-->
   (<s> ^operator <op> +)
   (<op> ^name initiate-pick-up1 
         ^action-name pick-up1
         ^arg1 <obj>
         ^action-type primitive)
}

####### propose put-down for objects #########################################
sp {action*propose*initiate-put-down1
   (state <s> ^problemspace.action <act>
              ^world.objects.object <obj>)
   (<obj> ^predicates.arm-status grabbed)
   (<act> -^type none)
-->
   (<s> ^operator <op> +)
   (<op> ^name initiate-put-down1
         ^action-name put-down1
     ^arg1 <obj>
     ^action-type primitive)
}

sp {action*elaborate*initiate-put-down1*arg2*from*action-command
   (state <s> ^problemspace.action <act>
              ^operator <o> +
              ^action-command <cmd>)
   (<o> ^name initiate-put-down1)
   (<cmd> ^arg2 <arg2>)
   (<arg2> ^arg2 <obj>
           ^id <rel>)
-->
   (<o> ^arg2 <new-arg2>)
   (<new-arg2> ^arg2 <obj>
               ^id <rel>)
}

####################### propose open location #################################
sp {action*propose*initiate-open1
   (state <s> ^problemspace.action <act>
              ^world.objects.object <obj>)
   (<obj> ^predicates.door closed)
   (<act> -^type none)
-->
   (<s> ^operator <op> +)
   (<op> ^name initiate-open1
         ^action-name open1
     ^arg1 <obj>
     ^action-type primitive)
}

####################### propose close location ##################################
sp {action*propose*initiate-close1
   (state <s> ^problemspace.action <act>
              ^world.objects.object <obj>)
   (<obj> ^predicates.door open)
   (<act> -^type none)
-->
   (<s> ^operator <op> +)
   (<op> ^name initiate-close1
         ^action-name close1
     ^arg1 <obj>
     ^action-type primitive)
}

####################### propose initiate-turn-on ##################################
sp {action*propose*initiate-turn-on1
   (state <s> ^problemspace.action <act>
              ^world.objects.object <obj>)
   (<obj> ^predicates.<any> off)
   (<act> -^type none)
-->
   (<s> ^operator <op> +)
   (<op> ^name initiate-turn-on1
         ^action-name turn-on1
     ^arg1 <obj>
     ^action-type primitive)
}

####################### propose initiate-stop ##################################
sp {action*propose*initiate-stop1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-stop1
        ^action-name stop1
         ^action-type primitive)
}

####################### propose initiate-orient ##################################
sp {action*propose*initiate-orient1*each*direction
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <on> +
        ^operator <os> +
        ^operator <oe> +
        ^operator <ow> +)
   (<on> ^name initiate-orient1
         ^direction north
         ^action-name orient1
         ^action-type primitive)
   (<os> ^name initiate-orient1
         ^direction south
         ^action-name orient1
         ^action-type primitive)
   (<oe> ^name initiate-orient1
         ^direction east
         ^action-name orient1
         ^action-type primitive)
   (<ow> ^name initiate-orient1
         ^direction west
         ^action-name orient1
         ^action-type primitive)
}

####################### propose initiate-turn-right ##################################
sp {action*propose*initiate-turn-right1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-turn-right1
        ^action-name turn-right1
         ^action-type primitive)
}

####################### propose initiate-turn-left ##################################
sp {action*propose*initiate-turn-left1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-turn-left1
        ^action-name turn-left1
         ^action-type primitive)
}

####################### propose initiate-turn-around ##################################
sp {action*propose*initiate-turn-around1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-turn-around1
        ^action-name turn-around1
         ^action-type primitive)
}

####################### propose initiate-drive-forward1 ##################################
sp {action*propose*initiate-drive-forward1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-drive-forward1
        ^action-name drive-forward1
         ^action-type primitive)
}

####################### propose initiate-follow-left-wall1 ##################################
sp {action*propose*initiate-follow-left-wall1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-follow-left-wall1
        ^action-name follow-left-wall1
         ^action-type primitive)
}

####################### propose initiate-follow-right-wall1 ##################################
sp {action*propose*initiate-follow-right-wall1
   (state <s> ^problemspace.action <act>)
   (<act> -^type none)
-->
   (<s> ^operator <o> +)
   (<o> ^name initiate-follow-right-wall1
        ^action-name follow-right-wall1
         ^action-type primitive)
}

sp {action*elaborate*driving*until
   (state <s> ^problemspace.action <act>
              ^operator <o> +
              ^action-command <cmd>)
   (<cmd> ^object-type <type>
          ^object-count <count>)
   (<act> -^type none)
-->
   (<o> ^until <until>)
   (<until> ^object-type <type>
            ^object-count <count>)
}
            

########################## propose wait ########################################
#sp {propose*op_wait*operator
#   (state <s> ^problemspace.action <act>)
#   (<act> -^type none)
#-->
#   (<s> ^operator <op> +)
#   (<op> ^name op_wait
#        ^action-type primitive)
#}
#   
#
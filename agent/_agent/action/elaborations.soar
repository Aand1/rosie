################### elaborate problemspace
sp {action*elaborate*problem-space
   (state <s> ^name action
   	      ^problemspace <ps>
	      ^superstate <ss>
	      ^top-state <ss>)
   (<ss> ^operator.name action)
-->
   (<ps> ^action <act>
   	 ^state <st>
	 ^learning <l>)
   (<act> ^type execute)
   (<st> ^type current
   	 ^elaborate closed-world)
   (<l> ^type exploration)
}

# elaborate world
sp {action*elaborate*world*top-state
   (state <s> ^name action
              ^problemspace.action.type execute
              ^top-state.world <world>)
-->
   (<s> ^world <world>)
}

# elaborate action-command
sp {action*elaborate*action-command*superoperator
   (state <s> ^name action
              ^superstate.operator.action-command <cmd>
              ^problemspace.action.type execute)
-->
   (<s> ^action-command <cmd>)
}

# elaborate action-command._metadata
sp {action*elaborate*action-command*metadata
   (state <s> ^name action
              ^action-command <cmd>)
-->
   (<cmd> ^_metadata <meta>)
}

sp {action*elaborate*action-command*metadata*operator*names
   (state <s> ^name action
              ^action-command <cmd>)
   (<cmd> ^_metadata <meta>
          ^id.procedural <proc>)
   (<proc> ^{ <op-type> << initiation-operator execution-operator >>} <op-name>)
-->
   (<meta> ^<op-type> <op-name>)
}

sp {action*elaborate*action-command*metadata*arg-name
   (state <s> ^name action
              ^action-command <cmd>)
   (<cmd> ^_metadata <meta>
          ^id.procedural.{<arg-name> <> initiation-operator <> execution-operator} <arg>)
   (<arg> ^arg-type { <arg-type> <> until-clause })
-->
   (<meta> ^arg-name <arg-name>)
   (<meta> ^<arg-name> <arg-type>)
}

sp {action*elaborate*action-command*metadata*optional
   (state <s> ^name action
              ^action-command <cmd>)
   (<cmd> ^_metadata <meta>
          ^id.procedural.<arg-name>.optional true)
   (<meta> ^arg-name <arg-name>)
-->
   (<meta> ^optional <arg-name>)
}


## elaborate indexed-action from purpose
sp {action*elaborate*state
   (state <s> ^name action
   	      ^superstate.operator.purpose.parameters.indexable.result <iop>
	      ^problemspace.action.type execute)
-->
   (<s> ^topstate-indexed-action <iop>
   	^action-matches <am>
	^indexed-action <ia>)
}

sp {action*elaborate*indexed-action
   (state <s> ^name action
   	      ^topstate-indexed-action <iop>
	      ^indexed-action <ia>
	      ^problemspace.action.type execute)
   (<iop> ^<arg> <val>)
--> 
   (<ia> ^<arg> <val>)
}

sp {action*elaborate*indexed-action*applied*yes
   (state <s> ^name action
   	      ^topstate-indexed-action <iop>
	      ^indexed-action <ia>)
   (<ia> ^applied yes)
--> 
   (<iop> ^applied yes)
}


sp {action*elaborate*action-matches*operators
   (state <s> ^name action
   	      ^operator <op> +
	      ^action-matches <am>)
-->
   (<am> ^match-set <ms>)
   (<ms> ^operator <op>)
}

## elaborate lexical-information
sp {action*elaborate*lexical-information
   (state <s> ^name action
   	      ^superstate.operator.purpose.parameters.indexable.lexical <iop>)
-->
   (<s> ^lexical-information <iop>)
}


## elaborate problemspace
sp {action*elaborate*problem-space
   (state <s> ^name action
   	      ^problemspace <ps>
	      ^superstate.operator.name action)
-->
   (<s> ^monitor-scene-changes true)
   (<ps> ^action <act>
   	 ^state <st>
	 ^learning <l>)
   (<act> ^type execute)
   (<st> ^type current
   	 ^closed-world elaborate)
   (<l> ^type exploration)
}


### 
sp {action*elaborate*ignore-set
   (state <s> ^problemspace <ps>)
-->
   (<s> ^ignore-set <nm>)
   (<nm> ^attribute applied
   	 ^attribute information
	 ^attribute _relation
	 ^attribute _metadata
	 ^attribute actions
	 ^attribute action-type
	 ^attribute matched
	 ^attribute _instantiation-of)
}


### if an action-operator is selected, mark purpose
sp {action*operator-selection*mark-purpose
   (state <s> ^problemspace.name action
   	      ^operator <op>
	      ^superstate.operator.purpose <p>)
   (<op> ^action-type <type>)
-->
   (<p> ^executing action)
}


### if an action is selected, delete all other object argumentation on indexed operator 

sp {action*operator-selection*delete-argument*direct-object
   (state <s> ^problemspace.name action
   	      ^operator <op>
	      ^indexed-action <ia>)
   (<op> ^<arg> <val>
   	 ^action-type primitive)
   (<val> ^id)
   (<ia> ^<arg> {<nval> <> <val>})
-->
   (<ia> ^<arg> <nval> -)
}

sp {action*operator-selection*delete-argument*pp-object
   (state <s> ^problemspace.name action
   	      ^operator <op>
	      ^indexed-action <ia>)
   (<op> ^<arg> <val>
   	 ^action-type primitive)
   (<val> ^argument <obj>)
   (<ia> ^<arg> <nval>)
   (<nval> ^argument {<nobj> <> <obj>})
-->
   (<ia> ^<arg> <nval> -)
}


sp {action*elaborate*object*not-clear*track-relation
   (state <s> ^problemspace.name action
   	      ^track-relation <tr>
	      ^object <obj>)
   (<tr> ^complete success
   	 ^object1 <obj1>
	 ^object2 <obj2>)
   (<obj2> -^category location)
   (<obj2> ^id <id>)
   (<obj> ^id <id>)
-->
   (<s> ^not-clear <obj>)
}

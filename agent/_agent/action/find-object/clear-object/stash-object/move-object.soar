sp {stash-object*propose*move-object*to*block
   (state <s> ^name stash-object
              ^object-to-stash <obj>
              ^move-metadata <move>
              ^bin-counts.bin-count <bc>
             -^bin-counts.bin-count < <low-count>
              ^topstate <top>)
   (<bc> ^bin <bin>
         ^count <low-count>
         ^top-object <top-obj>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name perform-move-object
        ^moving-object <obj>
        ^destination <top-obj>
        ^_metadata <move>)
}

sp {stash-object*propose*move-object*to*location
   (state <s> ^name stash-object
              ^object-to-stash <obj>
              ^move-metadata <move>
              ^bin-counts.bin-count <bc>
             -^bin-counts.bin-count < <low-count>
              ^topstate <top>)
   (<bc> ^bin <bin>
         ^count <low-count>
         -^top-object <top-obj>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name perform-move-object
        ^moving-object <obj>
        ^destination <bin>
        ^_metadata <move>)
}
        
        
 #(O757 ^_metadata M15 ^action-type composite ^argument3 <obj> ^argument4 <loc> 
#       ^name op_1)
#  (M15 ^map-id @M1)
#    (@M1 ^action-space @A1 ^goal @G2 ^linguistic @C5 ^procedural @P1
#           ^type action)
#      (@G2 ^relation-predicate @N2)
#        (@N2 ^identifier constant6 ^p1 @N5 ^p2 @N3 ^relation @N4)
#          (@N4 ^default @P2) -> (<s> ^found-prep.predicate @P2)
#      (@C5 ^direct-object @N5 ^pp-object @N6 ^verb move)
#        (@N6 ^object @N3)
#      (@P1 ^argument3 @N5 ^argument4 @N7 ^op_name op_1)
#        (@N7 ^argument @N3)
#        
#   
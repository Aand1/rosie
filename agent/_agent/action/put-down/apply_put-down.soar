

## find the projected location using spatial-reasoning system
sp {propose*find-projection*put-down
   (state <s> ^name op_put-down-object-location
   	      ^io
	      ^argument1.belief-obj <obj1>
	      ^argument2 <nval>
	      -^projection-result)
   (<nval> ^argument.perception-obj <obj2>
  	   ^relation.smem-rep <rel>)
-->
   (<s> ^operator <op> + >, =)
   (<op> ^name find-projection
   	^interaction true
	^a <obj1>
	^b <obj2>
	^predicate <rel>)
}

sp {propose*find-projection*put-down*no*perc-obj
   (state <s> ^name op_put-down-object-location
   	      ^io
	      ^argument1.belief-obj <obj1>
	      ^argument2 <nval>
	      -^projection-result)
   (<nval> ^argument <arg>
  	   ^relation.smem-rep <rel>)
   (<arg> -^perception-obj
           ^belief-obj <obj2>)
-->
   (<s> ^operator <op> + >, =)
   (<op> ^name find-projection
   	^interaction true
	^a <obj1>
	^b <obj2>
	^predicate <rel>)
}

## AM: Used to track an object after a place
sp {action*put-down*object*move*svs*object
   (state <s> ^name << op_put-down-object-location op_put-down-object-object >>
              ^topstate.agent-params.eval-params.action-model-knowledge true
              ^argument1.belief-obj.id <id>
	          ^projection-result <res>
           	  ^robot-state.arm.action drop
              ^topstate.svs.command <cmd>)
   (<res> ^x <x> ^y <y> ^z <z>)
-->
   (write |Moving object to tracked location| (crlf))
   (<cmd> ^property <xp> <yp> <zp>)
   (<xp> ^id <id>
         ^property px
         ^value <x>)
   (<yp> ^id <id>
         ^property py
         ^value <y>)
   (<zp> ^id <id>
         ^property pz
         ^value <z>)
}

#sp {put-down*apply*remove*grabbed
#   (state <s> ^name << op_put-down-object-location op_put-down-object-object >>
#              ^operator <o>
#              ^io.input-link.self <self>
#              ^topstate <top>)
#   (<self> ^action wait
#           ^prev-action drop
#           ^grabbed-object -1)
#   (<top> ^grabbed <obj>)
#-->
#   (<top> ^grabbed <obj> -)
#   (write |Removing grabbed object| (crlf))
#}


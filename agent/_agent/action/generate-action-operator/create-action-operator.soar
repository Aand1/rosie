sp {generate-action-operator*propose*create-action-operator
   (state <s> ^name generate-action-operator
              ^action-id <id>
             -^action-operator.name)
-->
   (<s> ^operator <o> + =)
   (<o> ^name create-action-operator
        ^action-id <id>)
} 

sp {generate-action-operator*apply*create-action-operator
   (state <s> ^name generate-action-operator
              ^operator <o>)
   (<o> ^name create-action-operator
        ^action-id <id>)
-->
   (<s> ^action-operator <op>)
   (<op> ^action-id <id>)
}

sp {generate-action-operator*apply*create-action-operator*copy*name
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-action-operator)
   (<op> ^action-id.procedural.op_name <name>)
-->
   (<op> ^name <name>)
}

sp {generate-action-operator*apply*create-action-operator*copy*action-type
   (state <s> ^name generate-action-operator
              ^operator <o>
              ^action-operator <op>)
   (<o> ^name create-action-operator)
   (<op> ^action-id.action-type <type>)
-->
   (<op> ^action-type <type>)
}


sp {generate-action-operator*apply*create-action-operator*create*procedural*lti
   (state <s> ^name generate-action-operator
              ^operator <o>)
   (<o> ^name create-action-operator
        ^action-id <id>)
   (<id> ^name <name>
         -^procedural)
-->
   (<id> ^type action ^action-type composite ^procedural <proc>)
   (<proc> ^op_name (make-constant-symbol (concat |op_| <name>)))
   (<s> ^to-store <id> <proc>)
}

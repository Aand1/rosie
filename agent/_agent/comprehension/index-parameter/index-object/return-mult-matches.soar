#################################################
#
# return-mult-matches
#   Multiple objects have matched, return all, use interaction, 
#
##################################################

sp {index-object*propose*return-mult-matches
   (state <s> ^name index-object
              ^object-to-index.matches <m>)
   (<m> ^finished true
        ^mult-matches true
        ^match <obj>)
-->
   (<s> ^operator <o> +)
   (<o> ^name return-mult-matches
        ^match <obj>)
}

#JK preference should not matter if you are going to return all
sp {index-object*apply*return-mult-matches*return-all
   (state <s> ^name index-object
              ^operator <o> +
              ^index-info.return-all true
              ^object-to-index.matches <m>)
   (<o> ^name return-mult-matches
        ^match <obj>)
-->
   (<s> ^operator <o> =)
}

sp {index-object*return-mult-matches*prefer*lower-rank
   (state <s> ^name index-object
              ^operator <o1> +
              ^operator <o2> +
              ^object-to-index.candidates <c>)
   (<o1> ^name return-mult-matches
         ^match <obj1>)
   (<o2> ^name return-mult-matches
         ^match <obj2>)
   (<c> ^candidate <c1>
        ^candidate <c2>)
   (<c1> ^object <obj1>
         ^pref <p1>)
   (<c2> ^object <obj2>
         ^pref > <p1>)
-->
   (<s> ^operator <o1> > <o2>)
}


##################################################
#
# return-all = True
#   Returns all matches to object
#
##################################################

sp {index-object*apply*return-mult-matches*return-all*true
   (state <s> ^name index-object
              ^operator.name return-mult-matches
              ^object-to-index.object <obj>
              ^object-to-index.matches.match <m>
              ^index-info.return-all true)
-->
   (<obj> ^result <m>)
}


##################################################
# 
# return-all = False and no ties involved
#   Returns the one with the best score
#
##################################################

sp {index-object*apply*return-mult-matches*return-random
   (state <s> ^name index-object
              ^operator <o>
              ^object-to-index.object <obj>
              ^object-to-index.matches.match <m>
              ^index-info.return-all false)
   (<o> ^name return-mult-matches
        ^match <m>)
-->
   (<obj> ^result <m>)
}

#####################################################
#
# Tie Detected
#
#####################################################

sp {index-object*elaborate*mult-matches-tie
   (state <s> ^superstate.name index-object
              ^impasse tie
              ^choices multiple
              ^item.name return-mult-matches)
-->
   (<s> ^name mult-matches-tie)
}

sp {index-object*propose*return-mult-matches-tie
   (state <s> ^name mult-matches-tie
              ^item.match <m>)
-->
   (<s> ^operator <o> + > =)
   (<o> ^name return-mult-matches-tie
        ^match <m>)
}

##################################################
# 
# Tie Detected
# return-all = False and use-interaction False
#   Returns one at random
#
##################################################
#
sp {index-object*apply*return-mult-matches-tie*return-random
   (state <s> ^name mult-matches-tie
              ^operator <o>
              ^superstate.index-info.use-interaction false
              ^superstate.object-to-index.object <obj>)
   (<o> ^name return-mult-matches-tie
        ^match <m>)
-->
   (<obj> ^result <m>)
}


##################################################
# 
# return-all = False and use-interaction True
#   Ask a which question
#
##################################################

sp {index-object*apply*return-mult-matches-tie*report*index-object-tie
   (state <s> ^name mult-matches-tie
              ^operator.name return-mult-matches-tie
              ^superstate.index-info.use-interaction true
              ^superstate.object-to-index.object <obj>
              ^topstate.interaction.status <status>)
-->
   (<status> ^failure <f>)
   (<f> ^type index-object-tie
        ^target-object <obj>)
}

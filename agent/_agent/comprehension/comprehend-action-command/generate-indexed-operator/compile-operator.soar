sp {generate*operator*name
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>)
   (<pid> ^op_name <op-name>)
-->
   (<s> ^indexed-operator <op>)
   (<op> ^name <op-name>)
}

sp {generate-indexed-operator*add*_metadata
   (state <s> ^name generate-indexed-operator
   	      ^indexed-operator <op>
	      ^_metadata <met>)
-->
   (<op> ^_metadata <met>)
}



sp {generate*operator*direct-object*argument*level1*pairing*1
   (state <s> ^name generate-indexed-operator	
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexable-parameter <ip>
	      ^indexed-operator <op>)
   (<ip> ^direct-object.result <obj1>
   	 -^direct-object.result {<obj2> <> <obj1>})
   (<pid> ^<arg> <objid>)
   (<lid> ^direct-object <objid1>
   	  -^direct-object {<objid2> <> <objid1>})
-->
   (<s> ^pairing <pair1>)
   (<pair1> ^procedural-id-node <objid1>
	    ^object <obj1>)
}
##### TEMP rule 3
sp {generate*operator*direct-object*argument*level1*pairing*3
   (state <s> ^name generate-indexed-operator	
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexable-parameter <ip>
	      ^indexed-operator <op>)
   (<ip> ^direct-object <do1>
   	 ^direct-object <do2>
	 ^direct-object <do3>
	 -^direct-object.result {<obj4> <> <obj3> <> <obj2> <> <obj1>})
   (<do1> ^result <obj1>
   	  ^lexical <lex1>)
   (<do2> ^result <obj2>
   	  ^lexical {<lex2> > <lex1>})
   (<do3> ^result <obj3>
   	  ^lexical {<lex3> > <lex2>})
   (<lid> ^direct-object <objid1>
   	  ^direct-object {<objid2> > <objid1>}
   	  ^direct-object {<objid3> > <objid2>})
-->
   (<s> ^pairing <pair1> <pair2> <pair3>)
   (<pair1> ^procedural-id-node <objid1>
	   ^object <obj1>)
   (<pair2> ^procedural-id-node <objid2>
	   ^object <obj2>)
   (<pair3> ^procedural-id-node <objid3>
	   ^object <obj3>)
}

##### TEMP rule 4
sp {generate*operator*direct-object*argument*level1*pairing*4
   (state <s> ^name generate-indexed-operator	
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexable-parameter <ip>
	      ^indexed-operator <op>)
   (<ip> ^direct-object <do1>
   	 ^direct-object <do2>
	 ^direct-object <do3>
	 ^direct-object <do4>)
   (<do1> ^result <obj1>
   	  ^lexical <lex1>)
   (<do2> ^result <obj2>
   	  ^lexical {<lex2> > <lex1>})
   (<do3> ^result <obj3>
   	  ^lexical {<lex3> > <lex2>})
   (<do4> ^result <obj4>
   	  ^lexical {<lex4> > <lex3>})
   (<pid> ^<arg> <objid>)
   (<lid> ^direct-object <objid1>
   	  ^direct-object {<objid2> > <objid1>}
   	  ^direct-object {<objid3> > <objid2>}
   	  ^direct-object {<objid4> > <objid3>})
-->
   (<s> ^pairing <pair1> <pair2> <pair3> <pair4>)
   (<pair1> ^procedural-id-node <objid1>
	   ^object <obj1>)
   (<pair2> ^procedural-id-node <objid2>
	   ^object <obj2>)
   (<pair3> ^procedural-id-node <objid3>
	   ^object <obj3>)
   (<pair4> ^procedural-id-node <objid4>
	   ^object <obj4>)
}

sp {generate*operator*direct-object*arguments*level1
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexable-parameter <ip>
	      ^indexed-operator <op>
	      ^pairing <pair>
	      ^_metadata <met>)
   (<pair> ^procedural-id-node <lobj>
   	   ^object <obj>)
   (<ip> ^direct-object <sub-ip>)
   (<sub-ip> ^result <obj>)
   (<lid> ^direct-object <lobj>)
   (<pid> ^<arg> <lobj>)
-->
   (<op> ^<arg> <obj>)
}

sp {generate*operator*pp-object*arguents*level1
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexable-parameter <ip>
	      ^indexed-operator <op>)
   (<ip> ^{<iparg> << pp-object state-object >>}.result <sub-ip>)
   (<sub-ip> ^object <obj>)
   (<pid> ^<arg> <val>)
   (<val> ^argument <objid>)
   (<lid> ^<iparg>.object <objid>)
-->
   (<op> ^<arg> <new>)
   (<s> ^pairing <pair>)
   (<pair> ^<iparg> <sub-ip>
   	   ^procedural-id-node <val>
	   ^object <obj>
	   ^indexed-operator-arg <new>)
}

sp {generate*operator*pp-object*argument
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexed-operator.<arg> <new>
	      ^pairing <pair>
	      ^_metadata <met>)
   (<pair> ^{<iparg> << pp-object state-object >>} <res>
   	   ^procedural-id-node <val>
	   ^object <obj>
	   ^indexed-operator-arg <new>)
   (<res> ^object <obj>)
   (<lid> ^<iparg> <ppobj>)
   (<ppobj> ^object <objid>)
   (<pid> ^<arg> <val>)
   (<val> ^argument <objid>)
-->
   (<new> ^argument <obj>)
}


sp {generate*operator*pp-object*relation
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexed-operator.<arg> <new>
	      ^pairing <pair>)
   (<pair> ^pp-object <res>
   	   ^procedural-id-node <val>
	   ^object <obj>
	   ^indexed-operator-arg <new>)
   (<res> ^relation <rel>
   	  ^object <obj>)
   (<lid> ^pp-object <ppobj>)
   (<ppobj> ^preposition <relid>)
   (<pid> ^<arg> <val>)
   (<val> ^relation <relid>)
-->
   (<new> ^relation <rel>)
}

sp {generate*operator*state-object*state
   (state <s> ^name generate-indexed-operator
   	      ^procedural-id <pid>
	      ^linguistic-id <lid>
	      ^indexed-operator.<arg> <new>
	      ^pairing <pair>)
   (<pair> ^state-object <res>
   	   ^procedural-id-node <val>
	   ^object <obj>
	   ^indexed-operator-arg <new>)
   (<res> ^state <rel>)
   (<lid> ^state-object <ppobj>)
   (<ppobj> ^state <relid>)
   (<pid> ^<arg> <val>)
   (<val> ^state <relid>)
-->
   (<new> ^state <rel>)
}


sp {generate-operator*copy*metadat
   (state <s> ^name generate-indexed-operator
   	      ^indexed-operator <op>
	      ^map-id <map>)
   (<op> ^_metadata <met>)
-->
   (<met> ^map-id <map>)
}


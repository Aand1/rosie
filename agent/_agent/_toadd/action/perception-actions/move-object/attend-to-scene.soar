
sp {move-object*propose*attend-to-scene
   (state <s> ^name move-object
             -^object-to-move.perception-obj
              ^current-action.cleared-object true)
-->
   (<s> ^operator <o> +)
   (<o> ^name attend-to-scene
        ^action-type custom
        ^status <st>)
}

# Attending did no good, return failure
sp {move-object*apply*attend-to-scene*quiescence*failure
   (state <s> ^name move-object
              ^operator <o>
              ^topstate.scene-monitor.quiescence true
             -^object-to-move.perception-obj
              ^current-action <a>)
   (<o> ^name attend-to-scene
        ^status.finished true)
-->
   (<a> ^complete true)
}

## Attended after a move, return success
#sp {move-object*apply*attend-to-scene*quiescence*success
#   (state <s> ^name move-object
#              ^operator.name attend-to-scene
#              ^topstate.scene-monitor.quiescence true
#              ^object-to-move.perception-obj
#              ^current-action <a>)
#   (<a> ^did-move true)
#-->
#   (<a> ^complete true)
#}

sp {find-object*move-object*apply*op_1*no-object*attend
   (state <s> ^name move-object
              ^operator <o>
              ^object-to-move <obj>
              ^robot-state.arm <arm>
              ^current-action <a>)
   (<obj> -^perception-obj
          -^moving-object true)
   (<arm> -^grabbed <obj>
           ^action wait)
   (<o> ^name op_1
        ^subaction <sub>)
-->
   (<sub> ^complete true)
}
sp {top-state*elaborate*towers
   (state <s> ^superstate nil)
-->
   (<s> ^current-game <cg>)
   (<cg> ^name tower-chunk ^action <T21> ^goal <T23> ^multiplayer false)
(<T21> ^nlp-set <N140> ^parameter-set <ps>)
  (<N140> ^nlp <C9837> ^nlp <C9838> ^nlp <C9839>)
  (<ps> ^argnum 2 ^verbs <verbs>)
  (<verbs> ^1 <va>)
  (<va> ^verb-name move ^verb-prep on ^1 2 ^2 1)
  
    (<C9837> ^args <A213> ^name below ^negative true ^parameter <P1044> ^result <R1321> ^rtype single)
      (<A213> ^1 <C9836> ^2 <C9835> ^num 2)
        (<C9836> ^args <A217> ^name object ^negative false ^parameter <P1054> ^result <R1315> ^rtype single)
          (<P1054> ^result <R1312>)
            (<R1312> ^link <L251>)
              (<L251> ^link <L252>)
                (<L252> ^set <S3790>)
                  (<S3790> ^item <I125>)
                  (<I125> ^object holder)
          (<R1315> ^set <S3795>)
            (<S3795> ^item <R1316>)
              (<R1316> ^object <O4855> ^object <O4856> ^object <O4857> ^object <O4858> ^object <O4859> ^object <O4854>)
        (<C9835> ^args <A216> ^name block ^negative false ^parameter <P1053> ^result <R1313> ^rtype single)
          (<A216> ^1 <C9836> ^num 1)
          (<P1053> ^result <R1311>)
            (<R1311> ^link <L249>)
              (<L249> ^link <L250>)
                (<L250> ^set <S3789>)
                  (<S3789> ^item.object holder)
          (<R1313> ^set <S3793>)
            (<S3793> ^item <R1314>)
              (<R1314> ^object <O4859> ^object <O4857> ^object <O4855>)
      (<P1044> ^1 <P1045> ^num 1 ^result <R1305>)
        (<P1045> ^link <L256> ^param-id 1 ^type single)
          (<L256> ^set <S3796>)
            (<S3796> ^item <I127>)
              (<I127> ^object holder)
        (<R1305> ^link <P1045>)
      (<R1321> ^set <S3799>)
        (<S3799> ^item <R1322>)
          (<R1322> ^object <O4858> ^object <O4857> ^object <O4856>)
            (<O4858> ^id 5 ^type location ^word grid-yellow)
            (<O4857> ^id 3 ^type block ^word object)
            (<O4856> ^id 6 ^type location ^word grid-blue)
    (<C9838> ^args <A214> ^name smaller-than ^negative false ^parameter <P1046> ^result <R1317> ^rtype single)
      (<A214> ^1 <C9835> ^2 <C9836> ^num 2)
      (<P1046> ^1 <P1047> ^2 <P1048> ^num 2 ^result <R1306>)
        (<P1047> ^link <L254> ^param-id 2 ^type single)
          (<L254> ^set <S3792>)
            (<S3792> ^pair <P1056>)
              (<P1056> ^a holder)
        (<P1048> ^link <L253> ^param-id 1 ^type single)
          (<L253> ^set <S3791>)
            (<S3791> ^pair <P1055>)
              (<P1055> ^b holder)
        (<R1306> ^link <P1047>)
      (<R1317> ^set <S3797>)
        (<S3797> ^pair <P1112> ^pair <P1113> ^pair <P1114> ^pair <P1115> ^pair <P1116> ^pair <P1117> ^pair <P1118> ^pair <P1119> ^pair <P1120> ^pair <P1121> ^pair <P1122> ^pair <P1099> ^pair <R1318>)
          (<P1112> ^a <O4859> ^b <O4854>)
            (<O4859> ^id 1 ^type block ^word object)
            (<O4854> ^id 4 ^type location ^word grid-red)
          (<P1113> ^a <O4857> ^b <O4854>)
          (<P1114> ^a <O4857> ^b <O4855>)
            (<O4855> ^id 2 ^type block ^word object)
          (<P1115> ^a <O4855> ^b <O4856>)
          (<P1116> ^a <O4859> ^b <O4856>)
          (<P1117> ^a <O4857> ^b <O4856>)
          (<P1118> ^a <O4855> ^b <O4858>)
          (<P1119> ^a <O4859> ^b <O4858>)
          (<P1120> ^a <O4857> ^b <O4858>)
          (<P1121> ^a <O4855> ^b <O4859>)
          (<P1122> ^a <O4857> ^b <O4859>)
          (<P1099> ^a <O4855> ^b <O4854>)
    (<C9839> ^args <A215> ^name below ^negative true ^parameter <P1049> ^result <R1319> ^rtype single)
      (<A215> ^1 <C9835> ^2 <C9835> ^num 2)
      (<P1049> ^1 <P1050> ^num 1 ^result <R1307>)
        (<P1050> ^link <L255> ^param-id 2 ^type single)
          (<L255> ^set <S3794>)
            (<S3794> ^item <I126>)
              (<I126> ^object holder)
        (<R1307> ^link <P1050>)
      (<R1319> ^set <S3798>)
        (<S3798> ^item <R1320>)
          (<R1320> ^object <O4857>)
(<T23> ^nlp-set <N174> ^parameter-set.argnum 4)
  (<N174> ^nlp <C13443> ^nlp <C13444> ^nlp <C13445> ^nlp <C13446> ^nlp <C13447> ^nlp <C13448> ^nlp <C13449> ^nlp <C13450> ^nlp <C13451> ^nlp <C13452> ^nlp <C13453> ^nlp <C13454>)
    (<C13443> ^args <A266> ^name smaller-than ^negative false ^parameter <P1382> ^result <R1890> ^rtype single)
      (<A266> ^1 <C13440> ^2 <C13440> ^num 2)
        (<C13440> ^args <A278> ^name block ^negative false ^parameter <P1421> ^result <R1884> ^rtype single)
          (<A278> ^1 <C13482> ^num 1)
            (<C13482> ^args <A280> ^name object ^negative false ^parameter <P1420> ^result <R1878> ^rtype single)
              (<P1420> ^result <R1880>)
                (<R1880> ^link <L302>)
                  (<L302> ^link.set.item.object holder)
              (<R1878> ^set <S5131>)
                (<S5131> ^item <R1879>)
                  (<R1879> ^object <O6802> ^object <O6803> ^object <O6804> ^object <O6805> ^object <O6806> ^object <O6801>)
          (<P1421> ^result <R1881>)
            (<R1881> ^link <L304>)
              (<L304> ^link <L305>)
                (<L305> ^set <S5133>)
                  (<S5133> ^item.object holder)
          (<R1884> ^set <S5160>)
            (<S5160> ^item <R1885>)
              (<R1885> ^object <O6804> ^object <O6806> ^object <O6802>)
      (<P1382> ^1 <P1383> ^2 <P1384> ^num 2 ^result <R1863>)
        (<P1383> ^link <L311> ^param-id 1 ^type single)
          (<L311> ^set <S5137>)
            (<S5137> ^pair <P1425>)
              (<P1425> ^a holder)
        (<P1384> ^link <L310> ^param-id 3 ^type single)
          (<L310> ^set <S5136>)
            (<S5136> ^pair <P1424>)
              (<P1424> ^b holder)
        (<R1863> ^link <P1383>)
      (<R1890> ^set <S5163>)
        (<S5163> ^pair <P1544> ^pair <P1545> ^pair <P1546> ^pair <P1496> ^pair <P1497> ^pair <P1486> ^pair <R1891>)
          (<P1544> ^a <O6804> ^b <O6802>)
            (<O6804> ^id 3 ^type block ^word block)
            (<O6802> ^id 2 ^type block ^word block)
          (<P1545> ^a <O6802> ^b <O6806>)
            (<O6806> ^id 1 ^type block ^word block)
          (<P1546> ^a <O6804> ^b <O6806>)
          (<P1496> ^a <O6804> ^b <O6806>)
          (<P1497> ^a <O6802> ^b <O6806>)
          (<P1486> ^a <O6804> ^b <O6802>)
    (<C13444> ^args <A267> ^name smaller-than ^negative false ^parameter <P1385> ^result <R1892> ^rtype single)
      (<A267> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1385> ^1 <P1386> ^2 <P1387> ^num 2 ^result <R1864>)
        (<P1386> ^link <L313> ^param-id 1 ^type single)
          (<L313> ^set <S5139>)
            (<S5139> ^pair <P1427>)
              (<P1427> ^a holder)
        (<P1387> ^link <L312> ^param-id 2 ^type single)
          (<L312> ^set <S5138>)
            (<S5138> ^pair <P1426>)
              (<P1426> ^b holder)
        (<R1864> ^link <P1386>)
      (<R1892> ^set <S5164>)
        (<S5164> ^pair <P1541> ^pair <P1542> ^pair <P1543> ^pair <P1493> ^pair <P1494> ^pair <P1495> ^pair <R1893>)
          (<P1541> ^a <O6804> ^b <O6802>)
          (<P1542> ^a <O6802> ^b <O6806>)
          (<P1543> ^a <O6804> ^b <O6806>)
          (<P1493> ^a <O6804> ^b <O6802>)
          (<P1494> ^a <O6804> ^b <O6806>)
          (<P1495> ^a <O6802> ^b <O6806>)
    (<C13445> ^args <A268> ^name smaller-than ^negative false ^parameter <P1388> ^result <R1894> ^rtype single)
      (<A268> ^1 <C13440> ^2 <C13442> ^num 2)
        (<C13442> ^args <A265> ^name grid-blue ^negative false ^parameter <P1422> ^result <R1886> ^rtype single)
          (<A265> ^1 <C13439> ^num 1)
            (<C13439> ^args <A279> ^name location ^negative false ^parameter <P1423> ^result <R1888> ^rtype single)
              (<A279> ^1 <C13482> ^num 1)
              (<P1423> ^result <R1883>)
                (<R1883> ^link <L308>)
                  (<L308> ^link.set.item.object holder)# <L309>)
              (<R1888> ^set <S5162>)
                (<S5162> ^item <R1889>)
                  (<R1889> ^object <O6805> ^object <O6803> ^object <O6801>)
          (<P1422> ^result <R1882>)
            (<R1882> ^link <L306>)
              (<L306> ^link <L307>)
                (<L307> ^set <S5134>)
                  (<S5134> ^item.object holder)# <I180>)
          (<R1886> ^set <S5161>)
            (<S5161> ^item <R1887>)
              (<R1887> ^object <O6803>)
      (<P1388> ^1 <P1389> ^2 <P1390> ^num 2 ^result <R1865>)
        (<P1389> ^link <L315> ^param-id 1 ^type single)
          (<L315> ^set <S5141>)
            (<S5141> ^pair <P1429>)
              (<P1429> ^a holder)
        (<P1390> ^link <L314> ^param-id 4 ^type single)
          (<L314> ^set <S5140>)
            (<S5140> ^pair <P1428>)
              (<P1428> ^b holder)
        (<R1865> ^link <P1389>)
      (<R1894> ^set <S5165>)
        (<S5165> ^pair <P1538> ^pair <P1539> ^pair <P1540> ^pair <R1895>)
          (<P1538> ^a <O6802> ^b <O6803>)
            (<O6803> ^id 6 ^type location ^word grid-blue)
          (<P1539> ^a <O6804> ^b <O6803>)
          (<P1540> ^a <O6806> ^b <O6803>)
    (<C13446> ^args <A269> ^name on ^negative false ^parameter <P1391> ^result <R1896> ^rtype single)
      (<A269> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1391> ^1 <P1392> ^2 <P1393> ^num 2 ^result <R1866>)
        (<P1392> ^link <L317> ^param-id 1 ^type single)
          (<L317> ^set <S5143>)
            (<S5143> ^pair <P1431>)
              (<P1431> ^a holder)
        (<P1393> ^link <L316> ^param-id 2 ^type single)
          (<L316> ^set <S5142>)
            (<S5142> ^pair <P1430>)
              (<P1430> ^b holder)
        (<R1866> ^link <P1392>)
      (<R1896> ^set <S5166>)
        (<S5166> ^pair <P1553> ^pair <P1554> ^pair <P1483> ^pair <P1478> ^pair <R1897>)
          (<P1553> ^a <O6804> ^b <O6802>)
          (<P1554> ^a <O6802> ^b <O6806>)
          (<P1483> ^a <O6802> ^b <O6806>)
          (<P1478> ^a <O6804> ^b <O6802>)
    (<C13447> ^args <A270> ^name below ^negative false ^parameter <P1394> ^result <R1898> ^rtype single)
      (<A270> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1394> ^1 <P1395> ^2 <P1396> ^num 2 ^result <R1867>)
        (<P1395> ^link <L319> ^param-id 2 ^type single)
          (<L319> ^set <S5145>)
            (<S5145> ^pair <P1433>)
              (<P1433> ^a holder)
        (<P1396> ^link <L318> ^param-id 1 ^type single)
          (<L318> ^set <S5144>)
            (<S5144> ^pair <P1432>)
              (<P1432> ^b holder)
        (<R1867> ^link <P1395>)
      (<R1898> ^set <S5167>)
        (<S5167> ^pair <P1522> ^pair <P1523> ^pair <P1507> ^pair <P1502> ^pair <R1899>)
          (<P1522> ^a <O6806> ^b <O6802>)
          (<P1523> ^a <O6802> ^b <O6804>)
          (<P1507> ^a <O6802> ^b <O6804>)
          (<P1502> ^a <O6806> ^b <O6802>)
    (<C13448> ^args <A271> ^name smaller-than ^negative false ^parameter <P1397> ^result <R1900> ^rtype single)
      (<A271> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1397> ^1 <P1398> ^2 <P1399> ^num 2 ^result <R1868>)
        (<P1398> ^link <L321> ^param-id 2 ^type single)
          (<L321> ^set <S5147>)
            (<S5147> ^pair <P1435>)
              (<P1435> ^a holder)
        (<P1399> ^link <L320> ^param-id 3 ^type single)
          (<L320> ^set <S5146>)
            (<S5146> ^pair <P1434>)
              (<P1434> ^b holder)
        (<R1868> ^link <P1398>)
      (<R1900> ^set <S5168>)
        (<S5168> ^pair <P1535> ^pair <P1536> ^pair <P1537> ^pair <P1490> ^pair <P1491> ^pair <P1492> ^pair <R1901>)
          (<P1535> ^a <O6804> ^b <O6802>)
          (<P1536> ^a <O6802> ^b <O6806>)
          (<P1537> ^a <O6804> ^b <O6806>)
          (<P1490> ^a <O6804> ^b <O6802>)
          (<P1491> ^a <O6804> ^b <O6806>)
          (<P1492> ^a <O6802> ^b <O6806>)
    (<C13449> ^args <A272> ^name smaller-than ^negative false ^parameter <P1400> ^result <R1902> ^rtype single)
      (<A272> ^1 <C13440> ^2 <C13442> ^num 2)
      (<P1400> ^1 <P1401> ^2 <P1402> ^num 2 ^result <R1869>)
        (<P1401> ^link <L323> ^param-id 2 ^type single)
          (<L323> ^set <S5149>)
            (<S5149> ^pair <P1437>)
              (<P1437> ^a holder)
        (<P1402> ^link <L322> ^param-id 4 ^type single)
          (<L322> ^set <S5148>)
            (<S5148> ^pair <P1436>)
              (<P1436> ^b holder)
        (<R1869> ^link <P1401>)
      (<R1902> ^set <S5169>)
        (<S5169> ^pair <P1533> ^pair <P1534> ^pair <P1526> ^pair <R1903>)
          (<P1533> ^a <O6804> ^b <O6803>)
          (<P1534> ^a <O6806> ^b <O6803>)
          (<P1526> ^a <O6802> ^b <O6803>)
    (<C13450> ^args <A273> ^name on ^negative false ^parameter <P1403> ^result <R1904> ^rtype single)
      (<A273> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1403> ^1 <P1404> ^2 <P1405> ^num 2 ^result <R1870>)
        (<P1404> ^link <L325> ^param-id 2 ^type single)
          (<L325> ^set <S5151>)
            (<S5151> ^pair <P1439>)
              (<P1439> ^a holder)
        (<P1405> ^link <L324> ^param-id 3 ^type single)
          (<L324> ^set <S5150>)
            (<S5150> ^pair <P1438>)
              (<P1438> ^b holder)
        (<R1870> ^link <P1404>)
      (<R1904> ^set <S5170>)
        (<S5170> ^pair <P1551> ^pair <P1552> ^pair <P1481> ^pair <P1482> ^pair <R1905>)
          (<P1551> ^a <O6804> ^b <O6802>)
          (<P1552> ^a <O6802> ^b <O6806>)
          (<P1481> ^a <O6804> ^b <O6802>)
          (<P1482> ^a <O6802> ^b <O6806>)
    (<C13451> ^args <A274> ^name below ^negative false ^parameter <P1406> ^result <R1906> ^rtype single)
      (<A274> ^1 <C13440> ^2 <C13440> ^num 2)
      (<P1406> ^1 <P1407> ^2 <P1408> ^num 2 ^result <R1871>)
        (<P1407> ^link <L327> ^param-id 3 ^type single)
          (<L327> ^set <S5153>)
            (<S5153> ^pair <P1441>)
              (<P1441> ^a holder)
        (<P1408> ^link <L326> ^param-id 2 ^type single)
          (<L326> ^set <S5152>)
            (<S5152> ^pair <P1440>)
              (<P1440> ^b holder)
        (<R1871> ^link <P1407>)
      (<R1906> ^set <S5171>)
        (<S5171> ^pair <P1520> ^pair <P1521> ^pair <P1505> ^pair <P1506> ^pair <R1907>)
          (<P1520> ^a <O6806> ^b <O6802>)
          (<P1521> ^a <O6802> ^b <O6804>)
          (<P1505> ^a <O6806> ^b <O6802>)
          (<P1506> ^a <O6802> ^b <O6804>)
    (<C13452> ^args <A275> ^name smaller-than ^negative false ^parameter <P1409> ^result <R1908> ^rtype single)
      (<A275> ^1 <C13440> ^2 <C13442> ^num 2)
      (<P1409> ^1 <P1410> ^2 <P1411> ^num 2 ^result <R1872>)
        (<P1410> ^link <L329> ^param-id 3 ^type single)
          (<L329> ^set <S5155>)
            (<S5155> ^pair <P1443>)
              (<P1443> ^a holder)
        (<P1411> ^link <L328> ^param-id 4 ^type single)
          (<L328> ^set <S5154>)
            (<S5154> ^pair <P1442>)
              (<P1442> ^b holder)
        (<R1872> ^link <P1410>)
      (<R1908> ^set <S5172>)
        (<S5172> ^pair <P1530> ^pair <P1531> ^pair <P1532> ^pair <R1909>)
          (<P1530> ^a <O6802> ^b <O6803>)
          (<P1531> ^a <O6804> ^b <O6803>)
          (<P1532> ^a <O6806> ^b <O6803>)
    (<C13453> ^args <A276> ^name on ^negative false ^parameter <P1412> ^result <R1910> ^rtype single)
      (<A276> ^1 <C13440> ^2 <C13442> ^num 2)
      (<P1412> ^1 <P1413> ^2 <P1414> ^num 2 ^result <R1873>)
        (<P1413> ^link <L331> ^param-id 3 ^type single)
          (<L331> ^set <S5157>)
            (<S5157> ^pair <P1445>)
              (<P1445> ^a holder)
        (<P1414> ^link <L330> ^param-id 4 ^type single)
          (<L330> ^set <S5156>)
            (<S5156> ^pair <P1444>)
              (<P1444> ^b holder)
        (<R1873> ^link <P1413>)
      (<R1910> ^set <S5173>)
        (<S5173> ^pair <P1549> ^pair <R1911>)
          (<P1549> ^a <O6806> ^b <O6803>)
    (<C13454> ^args <A277> ^name below ^negative false ^parameter <P1415> ^result <R1912> ^rtype single)
      (<A277> ^1 <C13442> ^2 <C13440> ^num 2)
      (<P1415> ^1 <P1416> ^2 <P1417> ^num 2 ^result <R1874>)
        (<P1416> ^link <L333> ^param-id 4 ^type single)
          (<L333> ^set <S5159>)
            (<S5159> ^pair <P1447>)
              (<P1447> ^a holder)
        (<P1417> ^link <L332> ^param-id 3 ^type single)
          (<L332> ^set <S5158>)
            (<S5158> ^pair <P1446>)
              (<P1446> ^b holder)
        (<R1874> ^link <P1416>)
      (<R1912> ^set <S5174>)
        (<S5174> ^pair <P1518> ^pair <R1913>)
          (<P1518> ^a <O6803> ^b <O6806>)
}

sp {lchunk-202*d6761*snochange*2z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g1> ^game tower-chunk ^type goal)
    (<g2> ^potential-args <p1> ^parameter-set <p2>)
    (<p2> ^set <s2>)
    -->
    (<s1> ^operator <o1> +)
    (<o1> ^name goal + ^game tower-chunk + ^parameters <s2> +)
}

sp {lchunk-201*d6761*snochange*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2>)
    (<p2> ^iset <i1>)
   -{ (<p2> ^neg <n1>)
      (<n1> ^<a1> <a2>)
      (<i1> ^<a1> <a2>)}
   -{ (<p2> ^negpair3 <n2>)
      (<n2> ^<a3> <a4> ^{ <a5> <> <a3> } <a6> ^{ <a7> <> <a3> <> <a5> } <a8>)
      (<i1> ^<a3> <a4> ^<a5> <a6> ^<a7> <a8>)}
   -{ (<p2> ^negpair <n3>)
      (<n3> ^<a9> <a10> ^{ <a11> <> <a9> } <a12>)
      (<i1> ^<a9> <a10> ^<a11> <a12>)}
   -{ (<i1> ^<a13> <a14> ^{ <a15> <> <a13> } <a14>)}
    -->
    (<p2> ^set <i1> +)
}

sp {lchunk-189*d6760*snochange*87z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^2 <*1>)
    (<*1> ^param-id 2 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<p1> ^2 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^b <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^2 <*2> +)
}

sp {lchunk-188*d6760*snochange*86z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^1 <*1>)
    (<*1> ^param-id 2 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^a holder)
    (<p1> ^2 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^a <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^2 <*2> +)
}

sp {lchunk-173*d6760*snochange*71z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^1 <*1>)
    (<*1> ^param-id 3 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^a holder)
    (<p1> ^3 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^a <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^3 <*2> +)
}

sp {lchunk-172*d6760*snochange*70z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^2 <*1>)
    (<*1> ^param-id 3 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<p1> ^3 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^b <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^3 <*2> +)
}

sp {lchunk-170*d6760*snochange*68z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 2 ^link <l2>)
    (<*2> ^param-id 3 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^3 <*3> ^2 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*4> ^a <*3>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^3 <*3> + ^2 <*4> +)
}

sp {lchunk-169*d6760*snochange*67z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 4 ^link <l2>)
    (<*2> ^param-id 3 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^4 <*3> ^3 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*3> ^a <*4>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^3 <*4> + ^4 <*3> +)
}

sp {lchunk-164*d6760*snochange*62z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^3 <*3> ^2 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*3> ^a <*4>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^2 <*4> + ^3 <*3> +)
}

sp {lchunk-163*d6760*snochange*61z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 4 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^4 <*3> ^3 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*4> ^a <*3>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^4 <*3> + ^3 <*4> +)
}

sp {lchunk-159*d6760*snochange*57z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^1 <*1>)
    (<*1> ^param-id 1 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^a holder)
    (<p1> ^1 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^a <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^1 <*2> +)
}

sp {lchunk-158*d6760*snochange*56z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^2 <*1>)
    (<*1> ^param-id 1 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<p1> ^1 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^b <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^1 <*2> +)
}

sp {lchunk-153*d6760*snochange*51z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 2 ^link <l2>)
    (<*2> ^param-id 1 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^2 <*3> ^1 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*3> ^a <*4>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^1 <*4> + ^2 <*3> +)
}

sp {lchunk-152*d6760*snochange*50z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 1 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^3 <*3> ^1 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*3> ^a <*4>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^1 <*4> + ^3 <*3> +)
}

sp {lchunk-150*d6760*snochange*48z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 1 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^2 <*3> ^1 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*4> ^a <*3>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^2 <*3> + ^1 <*4> +)
}

sp {lchunk-148*d6760*snochange*46z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^parameter-set <p1> ^potential-args <p2>)
    (<p1> ^argnum 4)
    (<p2> ^4 <*1> ^3 { <*2> <> <*1> } ^2 { <*3> <> <*2> <> <*1> } ^1 { <*4> <> <*3> <> <*2> <> <*1> })
    -->
    (<p1> ^iset <i1> +)
    (<i1> ^1 <*4> + ^2 <*3> + ^3 <*2> + ^4 <*1> +)
}

sp {lchunk-147*d6760*snochange*45z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 4 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^4 <a1> + ^3 <b1> +)
}

sp {lchunk-143*d6760*snochange*41z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 4 ^link <l2>)
    (<*2> ^param-id 3 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^3 <a1> + ^4 <b1> +)
}

sp {lchunk-139*d6760*snochange*37z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 2 ^link <l2>)
    (<*2> ^param-id 3 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^3 <a1> + ^2 <b1> +)
}

sp {lchunk-132*d6760*snochange*30z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 4 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^2 <a1> + ^4 <b1> +)
}

sp {lchunk-126*d6760*snochange*24z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^2 <a1> + ^3 <b1> +)
}

sp {lchunk-122*d6760*snochange*20z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 1 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^2 <a1> + ^1 <b1> +)
}

sp {lchunk-115*d6760*snochange*13z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 4 ^link <l2>)
    (<*2> ^param-id 1 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^1 <a1> + ^4 <b1> +)
}

sp {lchunk-109*d6760*snochange*7z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 2 ^link <l2>)
    (<*2> ^param-id 1 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^1 <a1> + ^2 <b1> +)
}

sp {lchunk-103*d6760*snochange*1z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 3 ^link <l2>)
    (<*2> ^param-id 1 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a1>)
    -->
    (<p1> ^1 <a1> + ^3 <b1> +)
}

sp {lchunk-102*d6758*unknownimpasse*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name on ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name on ^args <a2> ^parameter <p4> ^result <r6>)
    (<a2> ^num 2 ^2 <*3> ^1 <*4>)
    (<p4> ^num 2 ^2 <*1> ^1 <*2> ^result <r1>)
    (<*1> ^type single)
    (<*2> ^type single ^link <l2>)
    (<r1> ^link <*2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*3> ^parameter <p6> ^result <r4>)
    (<*4> ^parameter <p7> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1>)
    (<p7> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<i3> ^object <b1>)
    (<p6> ^result <r5>)
    (<r5> ^link <l5>)
    (<l5> ^link <l6>)
    (<l6> ^set <s6>)
    (<s6> ^item <i4>)
    (<i4> ^object holder)
    (<r6> ^set <s7>)
    -->
    (<s7> ^pair <p8> +)
    (<p8> ^b <b1> + ^a <a1> +)
}

sp {lchunk-99*d6751*unknownimpasse*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name smaller-than ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name smaller-than ^args <a2> ^parameter <p4> ^result <r6>)
    (<a2> ^num 2 ^2 <*3> ^1 <*4>)
    (<p4> ^num 2 ^2 <*1> ^1 <*2> ^result <r1>)
    (<*1> ^type single)
    (<*2> ^type single ^link <l2>)
    (<r1> ^link <*2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*3> ^parameter <p6> ^result <r4>)
    (<*4> ^parameter <p7> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1>)
    (<p7> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<i3> ^object <b1>)
    (<p6> ^result <r5>)
    (<r5> ^link <l5>)
    (<l5> ^link <l6>)
    (<l6> ^set <s6>)
    (<s6> ^item <i4>)
    (<i4> ^object holder)
    (<r6> ^set <s7>)
    -->
    (<s7> ^pair <p8> +)
    (<p8> ^b <b1> + ^a <a1> +)
}

sp {lchunk-98*d6744*unknownimpasse*1z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name below ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name below ^args <a2> ^parameter <p4> ^result <r6>)
    (<a2> ^num 2 ^2 <*3> ^1 <*4>)
    (<p4> ^num 2 ^2 <*1> ^1 <*2> ^result <r1>)
    (<*1> ^type single)
    (<*2> ^type single ^link <l2>)
    (<r1> ^link <*2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*3> ^parameter <p6> ^result <r4>)
    (<*4> ^parameter <p7> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1>)
    (<p7> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<i3> ^object <b1>)
    (<p6> ^result <r5>)
    (<r5> ^link <l5>)
    (<l5> ^link <l6>)
    (<l6> ^set <s6>)
    (<s6> ^item <i4>)
    (<i4> ^object holder)
    (<r6> ^set <s7>)
    -->
    (<s7> ^pair <p8> +)
    (<p8> ^b <b1> + ^a <a1> +)
}

sp {lchunk-97*d6737*snochange*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name grid-blue ^args <a1> ^parameter <p1> ^result <r3>)
    (<a1> ^num 1 ^1 <*1>)
    (<*1> ^parameter <p2> ^result <r1>)
    (<r1> ^set <s2>)
    (<p2> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<r3> ^set <s4>)
    (<s2> ^item <i2>)
    (<i2> ^object <o1>)
    (<o1> ^word grid-blue)
    (<s4> ^item <i3>)
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-96*d6735*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name grid-blue ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^word grid-blue + ^name extract-object +)
}

sp {lchunk-93*d6729*snochange*1z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name location ^args <a1> ^parameter <p1> ^result <r3>)
    (<a1> ^num 1 ^1 <*1>)
    (<*1> ^parameter <p2> ^result <r1>)
    (<r1> ^set <s2>)
    (<p2> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<r3> ^set <s4>)
    (<s2> ^item <i2>)
    (<i2> ^object <o1>)
    (<o1> ^type location)
    (<s4> ^item <i3>)
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-92*d6727*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name location ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^name extract-object + ^type location +)
}

sp {lchunk-90*d6721*unknownimpasse*1z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name below ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name below ^args <a2> ^parameter <p4> ^result <r4>)
    (<a2> ^num 2 ^2 <*2> ^1 <*2>)
    (<p4> ^num 2 ^2 <*1> ^1 <*3> ^result <r1>)
    (<*1> ^type single)
    (<*3> ^type single ^link <l2>)
    (<r1> ^link <*3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*2> ^parameter <p6> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1> ^object <b1>)
    (<p6> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    -->
    (<s5> ^pair <p7> +)
    (<p7> ^b <b1> + ^a <a1> +)
}

sp {lchunk-89*d6717*unknownimpasse*1z
 #   :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name below ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^word below + ^name soar-preposition +)
}

sp {lchunk-86*d6711*unknownimpasse*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name smaller-than ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name smaller-than ^args <a2> ^parameter <p4> ^result <r4>)
    (<a2> ^num 2 ^2 <*2> ^1 <*2>)
    (<p4> ^num 2 ^2 <*1> ^1 <*3> ^result <r1>)
    (<*1> ^type single)
    (<*3> ^type single ^link <l2>)
    (<r1> ^link <*3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*2> ^parameter <p6> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1> ^object <b1>)
    (<p6> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    -->
    (<s5> ^pair <p7> +)
    (<p7> ^b <b1> + ^a <a1> +)
}

sp {lchunk-84*d6704*unknownimpasse*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^prepositions <p1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<p1> ^prep <p2>)
    (<p2> ^name on ^pair <p3>)
    (<p3> ^b <b1> ^a <a1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name on ^args <a2> ^parameter <p4> ^result <r4>)
    (<a2> ^num 2 ^2 <*2> ^1 <*2>)
    (<p4> ^num 2 ^2 <*1> ^1 <*3> ^result <r1>)
    (<*1> ^type single)
    (<*3> ^type single ^link <l2>)
    (<r1> ^link <*3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p5>)
    (<p5> ^a holder)
    (<*2> ^parameter <p6> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a1> ^object <b1>)
    (<p6> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    -->
    (<s5> ^pair <p7> +)
    (<p7> ^b <b1> + ^a <a1> +)
}

sp {lchunk-83*d6700*unknownimpasse*1z
 #   :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name on ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^word on + ^name soar-preposition +)
}

sp {lchunk-80*d6694*snochange*1z
 #   :chunk
    (state <s1> ^gtype goal ^list <l1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name block ^args <a1> ^parameter <p1> ^result <r3>)
    (<a1> ^num 1 ^1 <*1>)
    (<*1> ^parameter <p2> ^result <r1>)
    (<r1> ^set <s2>)
    (<p2> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<r3> ^set <s4>)
    (<s2> ^item <i2>)
    (<i2> ^object <o1>)
    (<o1> ^type block)
    (<s4> ^item <i3>)
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-74*d6689*snochange*1z
#    :chunk
    (state <s1> ^gtype goal ^list <l1> ^objects <o1> ^goal <g2>)
    (<l1> ^game <g1>)
    (<g2> ^condition <c1>)
    (<c1> ^negative false ^name object ^args <a1> ^parameter <p1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^item <i1>)
    (<o1> ^object <o2>)
    -->
    (<i1> ^object <o2> +)
}

sp {lchunk-72*d4847*snochange*3z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<g1> ^game tower-chunk ^type action)
    (<a1> ^potential-args <p1> ^parameter-set <p2>)
    (<p2> ^set <s2>)
    -->
    (<s1> ^operator <o1> +)
    (<o1> ^name action + ^game tower-chunk + ^parameters <s2> +)
}

sp {lchunk-70*d4847*snochange*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2>)
    (<p2> ^iset <i1>)
   -{ (<p2> ^neg <n1>)
      (<n1> ^<a2> <a3>)
      (<i1> ^<a2> <a3>)}
   -{ (<p2> ^negpair3 <n2>)
      (<n2> ^<a4> <a5> ^{ <a6> <> <a4> } <a7> ^{ <a8> <> <a4> <> <a6> } <a9>)
      (<i1> ^<a4> <a5> ^<a6> <a7> ^<a8> <a9>)}
   -{ (<p2> ^negpair <n3>)
      (<n3> ^<a10> <a11> ^{ <a12> <> <a10> } <a13>)
      (<i1> ^<a10> <a11> ^<a12> <a13>)}
   -{ (<i1> ^<a14> <a15> ^{ <a16> <> <a14> } <a15>)}
    -->
    (<p2> ^set <i1> +)
}

sp {lchunk-58*d4846*snochange*29z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^1 <*1>)
    (<*1> ^param-id 1 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^item <i1>)
    (<i1> ^object holder)
    (<p1> ^1 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^item <i2>)
      (<i2> ^object <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^1 <*2> +)
}

sp {lchunk-56*d4846*snochange*27z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^2 <*1>)
    (<*1> ^param-id 1 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<p1> ^1 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^pair <p5>)
      (<p5> ^b <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^1 <*2> +)
}

sp {lchunk-53*d4846*snochange*24z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^1 <*1>)
    (<*1> ^param-id 2 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^item <i1>)
    (<i1> ^object holder)
    (<p1> ^2 <*2>)
   -{ (<r1> ^set <s3>)
      (<s3> ^item <i2>)
      (<i2> ^object <*2>)}
    -->
    (<p2> ^neg <n1> +)
    (<n1> ^2 <*2> +)
}

sp {lchunk-51*d4846*snochange*22z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 1 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<p1> ^2 <*3> ^1 { <*4> <> <*3> })
   -{ (<r1> ^set <s4>)
      (<s4> ^pair <p6>)
      (<p6> ^b <*4> ^a <*3>)}
    -->
    (<p2> ^negpair <n1> +)
    (<n1> ^2 <*3> + ^1 <*4> +)
}

sp {lchunk-46*d4846*snochange*17z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^parameter-set <p1> ^potential-args <p2>)
    (<p1> ^argnum 2)
    (<p2> ^2 <*1> ^1 { <*2> <> <*1> })
    -->
    (<p1> ^iset <i1> +)
    (<i1> ^1 <*2> + ^2 <*1> +)
}

sp {lchunk-45*d4846*snochange*16z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 1 ^1 <*1>)
    (<*1> ^param-id 2 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^item <i1>)
    (<i1> ^object holder)
    (<r1> ^set <s3>)
    (<s3> ^item <i2>)
    (<i2> ^object <o1>)
    -->
    (<p1> ^2 <o1> +)
}

sp {lchunk-33*d4846*snochange*4z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 2 ^2 <*1> ^1 <*2>)
    (<*1> ^param-id 1 ^link <l2>)
    (<*2> ^param-id 2 ^link <l3>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p4>)
    (<p4> ^b holder)
    (<l3> ^set <s3>)
    (<s3> ^pair <p5>)
    (<p5> ^a holder)
    (<r1> ^set <s4>)
    (<s4> ^pair <p6>)
    (<p6> ^b <b1> ^a <a2>)
    -->
    (<p1> ^2 <a2> + ^1 <b1> +)
}

sp {lchunk-30*d4846*snochange*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^potential-args <p1> ^parameter-set <p2> ^condition <c1>)
    (<c1> ^parameter <p3> ^result <r1>)
    (<p3> ^num 1 ^1 <*1>)
    (<*1> ^param-id 1 ^link <l2>)
    (<l2> ^set <s2>)
    (<s2> ^item <i1>)
    (<i1> ^object holder)
    (<r1> ^set <s3>)
    (<s3> ^item <i2>)
    (<i2> ^object <o1>)
    -->
    (<p1> ^1 <o1> +)
}

sp {lchunk-18*d4844*unknownimpasse*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1> ^prepositions <p4>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name smaller-than ^args <a2> ^parameter <p1> ^result <r6>)
    (<a2> ^num 2 ^2 <*3> ^1 <*4>)
    (<p1> ^num 2 ^2 <*1> ^1 <*2> ^result <r1>)
    (<*1> ^type single)
    (<*2> ^type single ^link <l2>)
    (<r1> ^link <*2>)
    (<l2> ^set <s2>)
    (<s2> ^pair <p2>)
    (<p2> ^a holder)
    (<*3> ^parameter <p3> ^result <r4>)
    (<p4> ^prep <p5>)
    (<p5> ^name smaller-than ^pair <p6>)
    (<p6> ^b <b1> ^a <a3>)
    (<*4> ^parameter <p7> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object <a3>)
    (<p7> ^result <r3>)
    (<r3> ^link <l3>)
    (<l3> ^link <l4>)
    (<l4> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<i3> ^object <b1>)
    (<p3> ^result <r5>)
    (<r5> ^link <l5>)
    (<l5> ^link <l6>)
    (<l6> ^set <s6>)
    (<s6> ^item <i4>)
    (<i4> ^object holder)
    (<r6> ^set <s7>)
    -->
    (<s7> ^pair <p8> +)
    (<p8> ^b <b1> + ^a <a3> +)
}

sp {lchunk-17*d4840*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name smaller-than ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^word smaller-than + ^name soar-preposition +)
}

sp {lchunk-14*d4834*snochange*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1> ^prepositions <p2>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative true ^name below ^args <a2> ^parameter <p1> ^result <r4>)
    (<a2> ^num 2 ^2 <*1> ^1 <*2>)
    (<p2> ^prep <p3>)
    (<p3> ^name below)
    (<*2> ^parameter <p4> ^result <r1>)
    (<r1> ^set <s2>)
    (<p4> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<p1> ^result <r3>)
    (<r3> ^link <l4>)
    (<l4> ^link <l5>)
    (<l5> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<s2> ^item <i4>)
    (<i4> ^object <o1>)
   -{ (<p3> ^pair <p5>)
      (<p5> ^a <o1> ^b <b1>)
      (<*1> ^parameter <p6> ^result <r6>)
      (<p6> ^result <r5>)
      (<r5> ^link <l6>)
      (<l6> ^link <l7>)
      (<l7> ^<a3> <a4>)
      (<r6> ^<a3> <a5>)
      (<a4> ^<a6> <a7>)
      (<a7> ^<a8> holder)
      (<a5> ^<a6> <a9>)
      (<a9> ^<a8> <b1>)}
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-13*d4827*snochange*1z
#    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1> ^prepositions <p3>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative true ^name below ^args <a2> ^parameter <p2> ^result <r4>)
    (<a2> ^num 2 ^2 <*1> ^1 <*1>)
    (<*1> ^parameter <p1> ^result <r1>)
    (<p3> ^prep <p4>)
    (<p4> ^name below)
    (<r1> ^set <s2>)
    (<p1> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<p2> ^result <r3>)
    (<r3> ^link <l4>)
    (<l4> ^link <l5>)
    (<l5> ^set <s4>)
    (<s4> ^item <i2>)
    (<i2> ^object holder)
    (<r4> ^set <s5>)
    (<s5> ^item <i3>)
    (<s2> ^item <i4>)
    (<i4> ^object <o1>)
   -{ (<p4> ^pair <p5>)
      (<p5> ^a <o1> ^b <b1>)
      (<*1> ^parameter <p6> ^result <r6>)
      (<p6> ^result <r5>)
      (<r5> ^link <l6>)
      (<l6> ^link <l7>)
      (<l7> ^<a3> <a4>)
      (<r6> ^<a3> <a5>)
      (<a4> ^<a6> <a7>)
      (<a7> ^<a8> holder)
      (<a5> ^<a6> <a9>)
      (<a9> ^<a8> <b1>)}
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-12*d4823*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative true ^name below ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative true + ^word below + ^name soar-preposition +)
}

sp {lchunk-9*d4817*snochange*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name block ^args <a2> ^parameter <p1> ^result <r3>)
    (<a2> ^num 1 ^1 <*1>)
    (<*1> ^parameter <p2> ^result <r1>)
    (<r1> ^set <s2>)
    (<p2> ^result <r2>)
    (<r2> ^link <l2>)
    (<l2> ^link <l3>)
    (<l3> ^set <s3>)
    (<s3> ^item <i1>)
    (<i1> ^object holder)
    (<r3> ^set <s4>)
    (<s2> ^item <i2>)
    (<i2> ^object <o1>)
    (<o1> ^type block)
    (<s4> ^item <i3>)
    -->
    (<i3> ^object <o1> +)
}

sp {lchunk-8*d4815*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name block ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^name extract-object + ^type block +)
}

sp {lchunk-2*d4809*snochange*1z
 #   :chunk
    (state <s1> ^gtype action ^list <l1> ^objects <o1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name object ^args <a2> ^parameter <p1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^item <i1>)
    (<o1> ^object <o2>)
    -->
    (<i1> ^object <o2> +)
}

sp {lchunk-1*d4807*unknownimpasse*1z
#    :chunk
    (state <s1> ^name eval-condition ^condition <c1>)
    (<c1> ^negative false ^name object ^args <a1> ^parameter <p1>)
    -->
    (<s1> ^operator <o1> + ^operator <o1> =)
    (<o1> ^args <a1> + ^parameter <p1> + ^negative false + ^word object + ^name extract-object +)
}

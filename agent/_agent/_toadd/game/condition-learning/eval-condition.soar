sp {eval-condition*elaborate*conditions
   (state <s> ^name eval-condition
              ^superstate.operator.condition <co>)
-->
   (<s> ^condition <co>)
}


sp {eval-condition*impasse
   (state <s> ^superstate.name eval-condition
              ^choices none
              ^attribute state
              ^superstate.condition <co>
              ^impasse no-change)
-->
   (force-learn <s>)
   (<s> ^name eval-condition-impasse
        ^new-op <op>
        ^condition <co>)
}

sp {eval-condition-impasse*query*smem*no-type 
   (state <s> ^name eval-condition-impasse
              ^condition <co>
              ^smem.command <sc>)
   (<co> ^name <name>)# -^type <type>)
-->
   (<sc> ^query <q>)
   (<q> ^name <name> ^operator <oper>)
}

sp {eval-condition-impasse*propose*lookup-operator
   (state <s> ^name eval-condition-impasse
              ^result.operator <o>)
   (<o> -^name)
-->
   (<s> ^operator <op> + =)
   (<op> ^name lookup-operator
         ^lti <o>)
}
sp {eval-condition-impasse*copy-operators
   (state <s> ^name eval-condition-impasse
              ^new-op <op>
              ^result.operator <o>)
   (<o> ^<something> <a>)
-->
   (<op> ^<something> <a>)
}
sp {lookup-operator*smem-retrive-lti
   (state <s> ^name lookup-operator
              ^superstate.operator.lti <lti>
              ^smem.command <sc>)
-->
   (<sc> ^retrieve <lti>)
}

sp {eval-condition-impasse*query*success
   (state <s> ^name eval-condition-impasse
              ^smem.result.success <cue>
              ^smem.result.retrieved <res>)
-->
   (<s> ^result <res>)
}

sp {eval-condition-impasse*propose*new-operator
   (state <s> ^name eval-condition-impasse
              ^superstate <ss>
              ^new-op <op>
              ^superstate.condition <co>
              ^result <res>)
   (<op> ^name <n>)
   (<co> ^args <args> ^negative <bool> ^parameter <p>)# -^result.set.item.object)
-->
   (<ss> ^operator <op> + =)
   (<op> ^args <args>
         ^parameter <p>
         ^negative <bool>)
}

### successfully grounded predicate
sp {generate-grounded-predicate*type*relation*success
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^desired <des>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^assignment.evaluation <da>)
   (<da> ^grounded-predicate <gp>
   	 -^grounded-predicate not-required
   	 ^evaluation successful)
   (<des> ^list <list>)
   (<gp> ^relation)
-->
   (<des> ^track-relation <gp>)
}

sp {generate-grounded-predicate*type*state*success
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^desired <des>)
   (<da> ^grounded-predicate <gp>
   	 -^grounded-predicate not-required
   	 ^evaluation successful)
   (<op> ^name complete-generate-grounded-predicate
   	 ^assignment.evaluation <da>)
   (<gp> ^state <any-rel>)
   (<des> ^list <list>)
-->
   (<des> ^achieve-state <gp>)
}

sp {generate-grounded-predicate*type*state*success*not-requried
   (state <s> ^name generate-grounded-predicate
   	      ^operator <op>
	      ^desired <des>
	      ^superstate <ss>)
   (<da> ^grounded-predicate not-required
   	 ^evaluation successful)
   (<op> ^name complete-generate-grounded-predicate
   	 ^assignment.evaluation <da>)
   (<ss> ^operator <sop>)
-->
   (<ss> ^operator <sop> -)
}


sp {generate-grounded-predicate*write*assigned
   (state <s> ^name generate-grounded-predicate
   	      ^definition <def>
	      ^superstate <ss>
	      ^operator <op>)
   (<op> ^name complete-generate-grounded-predicate
   	 ^assignment.evaluation <eval>)
   (<eval> ^evaluation successful
   	   ^grounded-predicate <pred>
	   -^grounded-predicate not-required)
   (<def> ^<arg> <sobj>)
   (<pred> ^<arg> <obj>)
-->
   (<ss> ^assigned <asg>)
   (<asg> ^wmem <obj>
   	  ^smem <sobj>)
}

sp {copy*assigned*to*all*substates
   (state <s> ^superstate.assigned <asg>)
-->
   (<s> ^assigned <asg>)
}
   
   

sp {action-goal-definiton*elaborate*indexed-operator
   (state <s> ^name learn-definition
   	      ^top-state.interaction.stack.segment.next.purpose.parameters.indexable <index>)
   (<index> ^result <ia>)
   (<ia> ^_metadata.map-id.goal <gid>)
-->
   (<s> ^indexed-action <ia>
   	^goal-id <gid>)
}

sp {action-goal-definiton*elaborate*goal
   (state <s> ^name learn-definition
   	      ^superstate.operator.purpose.parameters.indexable <index>)
   (<index> ^result <goal>)
-->
   (<s> ^goal <goal>)
}

sp {action-goal-definiton*elaborate*indexable
   (state <s> ^name learn-definition
   	      ^superstate.operator.purpose.parameters.indexable <index>)
-->
   (<s> ^indexable <index>)
}

sp {action-definition*elaborate*goal-id*relation-predicate
   (state <s> ^name learn-definition
   	      ^goal.{<pred> << relation-predicate state-predicate >>} <rel>
	      ^indexed-action._metadata.map-id.goal <gid>
	      ^smem.command <scomm>)
-->
   (<gid> ^<pred> <nrel>)
   (<nrel> ^identifier (make-constant-symbol))
   (<s> ^pairing <p>)
   (<p> ^smem <nrel>
   	^wmem <rel>)
   (<scomm> ^store <nrel> <gid>)
}

### elaborate objects that can be generalized away
sp {action-goal-learning*objects*generalizable*level1
   (state <s> ^name learn-definition
   	      ^indexed-action <ia>
	      ^goal <goal>
	      ^smem.command <scomm>)
   (<ia> ^_metadata.map-id <map>)
   (<map> ^procedural <proc-id>
   	  ^goal <gid>)
   (<goal> ^<< relation-predicate state-predicate >> <relp>)
   (<ia> ^<argument> <obj>)
   (<relp> ^<relarg> <obj>)
   (<proc-id> ^<argument> <sobj>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wme-id <obj>
   	  ^lt-id <sobj>
	  ^procedural-argument <argument>
	  ^attributes <attr>
	  ^level one)
}

#### version 2: learn from all perceptual features
sp {learn-definition*elaborate*attributes*level1
   (state <s> ^name learn-definition
   	      ^generalizable <gen>)
   (<gen> ^procedural-argument <argument>
   	  ^wme-id <obj>
	  ^lt-id <sobj>
	  ^attributes <attr>
	  ^level one)  
   (<obj> ^property <prop>)
   (<prop> ^label <label>
   	   ^name <attribute>)
-->
   (<attr> ^<attribute> <label>)
}


sp {action-goal-learning*objects*generalizable*level2*argument*object
   (state <s> ^name learn-definition
   	      ^indexed-action <ia>
	      ^goal <goal>
	      ^smem.command <scomm>)
   (<ia> ^_metadata.map-id <map>)
   (<map> ^procedural <proc-id>
   	  ^goal <gid>)
   (<goal> ^<< relation-predicate state-predicate >> <relp>)
   (<ia> ^<argument> <arg-obj>)
   (<arg-obj> ^argument <obj>)
   (<relp> ^<relarg> <obj>)
   (<proc-id> ^<argument> <sarg-obj>)
   (<sarg-obj> ^argument <sobj>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wme-id <obj>
   	  ^lt-id <sobj>
	  ^procedural-argument <argument>
	  ^attributes <attr>
	  ^level two)
}

sp {learn-definition*elaborate*attributes*level2
   (state <s> ^name learn-definition
   	      ^generalizable <gen>)
   (<gen> ^procedural-argument <argument>
   	  ^wme-id <obj>
	  ^lt-id <sobj>
	  ^attributes <attr>
	  ^level two) 
   (<obj> ^property <prop>)
   (<prop> ^label <label>
   	   ^name <attribute>)
-->
   (<attr> ^<attribute> <label>)
}

sp {action-goal-learning*objects*generalizable*level2*relation
   (state <s> ^name learn-definition
   	      ^indexed-action <ia>
	      ^goal <goal>
	      ^smem.command <scomm>)
   (<ia> ^_metadata.map-id <map>)
   (<map> ^procedural <proc-id>
   	  ^goal <gid>)
   (<goal> ^<< relation-predicate state-predicate >> <relp>)
   (<ia> ^<argument> <arg-obj>)
   (<arg-obj> ^relation.smem-rep <obj>)
   (<relp> ^relation <xrel>)
   (<xrel> ^smem-rep <obj>)
   (<proc-id> ^<argument> <sarg-obj>)
   (<sarg-obj> ^relation <sobj>)
-->
   (<s> ^generalizable <gen>)
   (<gen> ^wme-id <xrel>
   	  ^lt-id <sobj>)
}
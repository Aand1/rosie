sp {learn-goal-definition*propose*store-goal
   (state <s> ^name learn-goal-definition
              ^goal-structure <goal>
             -^stored <goal>)
-->
   (<s> ^operator <o> + <)
   (<o> ^name store-goal
        ^goal <goal>)
}

sp {learn-goal-definition*apply*store-goal
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^action-id <action>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal <goal>)
-->
   (<cmd> ^store <goal> <action>)
   (<s> ^stored <goal>)
}

sp {learn-goal-definition*apply*store-goal*predicate
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal.predicate <pred>)
-->
   (<cmd> ^store <pred>)
}


sp {learn-goal-definition*apply*store-goal*predicate*arg
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal.predicate.{ << id 1 2 >> } <arg>)
-->
   (<cmd> ^store <arg>)
}

sp {learn-goal-definition*apply*store-goal*predicate*arg*default
   (state <s> ^name learn-goal-definition
              ^operator <o>
              ^smem.command <cmd>)
   (<o> ^name store-goal
        ^goal.predicate.{ << id 1 2 >> }.default <def>)
-->
   (<cmd> ^store <def>)
}
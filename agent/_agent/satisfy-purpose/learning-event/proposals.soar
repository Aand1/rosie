

# AM: DEL: learning words is done in the parser
#############################################################
##
## learn-word
##
#############################################################
#
#sp {learning-event*propose*learn-word
#   (state <s> ^name learning-event
#              ^purpose <p>)
#   (<p> ^type learn-word
#        ^parameters.word <word>)
#-->
#   (<s> ^operator <o> +)
#   (<o> ^name learn-word
#        ^word <word>
#        ^category smem)
#}

############################################################
#
# train-on-object
#
############################################################

sp {learning-event*propose*train-on-object
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type train-on-object
        ^parameters.object <obj>)
-->
   (<s> ^operator <o> +)
   (<o> ^name train-on-object
        ^object <obj>)
}

sp {learning-event*elaborate*train-on-object*predicate
   (state <s> ^name learning-event
              ^operator <o> +
              ^purpose.parameters.predicate <pred>)
   (<o> ^name train-on-object)
-->
   (<o> ^predicate <pred>)
}

############################################################
#
# learn-location
#
############################################################

sp {learning-event*propose*learn-location
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type teach-location
        ^parameters.location-id <loc>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-location
        ^location-id <loc>)
}





############################################################
#
# learn-preposition
#
############################################################
sp {learning-event*propose*learn-preposition
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type teach-relation
        ^parameters <params>)
   (<params> ^object <obj>
             ^relation <rel>)
   (<rel> ^arg2 <obj2> ^id <lti-rel>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-preposition
        ^relation-lti <lti-rel>
        ^arg1 <obj>
        ^arg2 <obj2>)
}

# learn-predicate-info

sp {learning-event*propose*learn-predicate-info
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-predicate-info
        ^parameters <params>)
   (<params> ^predicate-id <pred>
             ^property-id <prop>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-predicate-info
        ^predicate-id <pred>
        ^property-id <prop>)
}


sp {learning-event*propose*learn-goal-definition
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-goal-definition)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-goal-definition)
}

#TODO JK find better seperation
sp {learning-event*propose*modify-attend-ignore-list*attend
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type modify-attend-list ^parameters.message <msg>)
-->
   (<s> ^operator <o> +)
   (<o> ^name modify-attend-ignore-list
        ^type attend
        ^message <msg>)
}
sp {learning-event*propose*modify-attend-ignore-list*ignore
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type modify-ignore-list ^parameters.message <msg>)
-->
   (<s> ^operator <o> +)
   (<o> ^name modify-attend-ignore-list
        ^type ignore
        ^message <msg>)
}
sp {learning-event*apply*modify-attend-ignore-list*modified-true
   (state <s> ^name learning-event
              ^operator <o> 
              ^top-state.dialog-context <dc>)
   (<o> ^name modify-attend-ignore-list)
-->
   (<dc> ^modified true)
}

sp {learning-event*apply*modify-attend-ignore-list*relation
   (state <s> ^name learning-event
              ^operator <o> 
              ^top-state.dialog-context.<type> <at>)
   (<o> ^name modify-attend-ignore-list ^type <type> ^message <msg>)
   (<msg> ^arg1 <arg1>)
   (<arg1> ^handle relation ^relation <r>)
   (<r> ^handle named ^2 <name>)
-->
   (<at> ^relation <name>)
}

sp {learning-event*apply*modify-attend-ignore-list*object
   (state <s> ^name learning-event
              ^operator <o>
              ^top-state.dialog-context.<type> <at>)
   (<o> ^name modify-attend-ignore-list ^type <type> ^message <msg>)
   (<msg> ^arg1.{2} <obj>)
   (<obj> ^item-type << object block location >>)
-->
   (<at> ^object <obj>)
}
sp {learning-event*apply*modify-attend-ignore-list*object*direct
   (state <s> ^name learning-event
              ^operator <o>
              ^top-state.dialog-context.<type> <at>)
   (<o> ^name modify-attend-ignore-list ^type <type> ^message <msg>)
   (<msg> ^arg1 <obj>)
   (<obj> ^item-type << object block location >>)
-->
   (<at> ^object <obj>)
}

sp {learning-event*apply*modify-attend-ignore-list*send-message
   (state <s> ^name learning-event
              ^operator.name modify-attend-ignore-list
              ^top-state.interaction.status <status>
              ^top-state.interaction.changes <changes>)
-->
   (<changes> ^outgoing-message <msg>)
   (<msg> ^type simple-message
          ^message-type ok)
   (<status> ^performed.learning-event <de>)
   (<de> ^type game
         ^originator agent)
}

sp {learning-event*propose*learn-goal-demonstration*initial
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-goal-initial-state)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-goal-demonstration
        ^type initial)
}
sp {learning-event*propose*learn-goal-demonstration*final
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-goal-final-state)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-goal-demonstration
        ^type final)
}



sp {learning-event*propose*finished-game-teaching
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type finished-game-teaching)
-->
   (<s> ^operator <o> +)
   (<o> ^name finished-game-teaching
        ^type game)
}

sp {learning-event*propose*learn-game-name
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-game-name ^parameters.message <msg>)
   (<msg> ^predicate.handle <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name store-predicate-structure
        ^type game
        ^storing name
        ^handle <name>
        ^message <msg>)
}
sp {learning-event*propose*learn-action-name
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-action-name ^parameters.message <msg>)
   (<msg> ^predicate.handle <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name store-predicate-structure
        ^type action
        ^storing name
        ^handle <name>
        ^message <msg>)
}
sp {learning-event*propose*learn-goal-name
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-goal-name ^parameters.message <msg>)
   (<msg> ^predicate.handle <name>)
-->
   (<s> ^operator <o> +)
   (<o> ^name store-predicate-structure
        ^type goal
        ^storing name
        ^handle <name>
        ^message <msg>)
}
sp {learning-event*propose*learn-predicate*goal
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-goal-predicate ^parameters.message <msg>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-predicate
        ^message <msg>
        ^type goal)
}
sp {learning-event*propose*learn-predicate*action
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-action-predicate ^parameters.message <msg>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-predicate
        ^message <msg>
        ^type action)
}

sp {learning-event*propose*learn-predicate*property
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type learn-property-predicate ^parameters.message <msg>)
-->
   (<s> ^operator <o> +)
   (<o> ^name learn-predicate
        ^message <msg>
        ^type predicate)
}

sp {learning-event*elaborate*learn-goal-definition*goal-predicate
   (state <s> ^name learning-event
              ^operator <o> +
              ^purpose <p>)
   (<o> ^name learn-goal-definition)
   (<p> ^parameters.goal-predicate <pred>)
-->
   (<o> ^goal-predicate <pred>)
}

sp {learning-event*propose*retrospective-learning
   (state <s> ^name learning-event
              ^purpose.type retrospective-learning
              ^purpose.parameters.action-context <context>)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrospective-learning
        ^action-context <context>)
#   (interrupt)
}

sp {learning-event*apply*retrospective-learning*copy*present-id
   (state <s> ^name learning-event
              ^operator.name retrospective-learning
              ^purpose.parameters <params>
              ^epmem.present-id <present-id>)
   (<params> -^present-id)
-->
   (<params> ^present-id <present-id>)
}

sp {learning-event*elaborate*retrospective-learning*present-id
   (state <s> ^name learning-event
              ^operator <o> +
              ^purpose.parameters.present-id <id>)
   (<o> ^name retrospective-learning)
-->
   (<o> ^present-id <id>)
}
              
              
              
              

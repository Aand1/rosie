sp {retrospective-learning*propose*retrieve-subaction-episode
   (state <s> ^name retrospective-learning
              ^subactions <subs>)
   (<subs> ^max-episode-id <ep-id>
          -^retrieved-all true)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-subaction-episode
        ^after-episode-id <ep-id>)
}

sp {retrospective-learning*apply*retrieve-subaction-episode*create*cue
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^epmem.command <cmd>
              ^subactions <subs>)
   (<o> ^name retrieve-subaction-episode)
   (<subs> ^max-episode-id <max-id>
           ^min-episode-id <min-id>)
-->
   (<cmd> ^query <q>
          ^after <min-id>
          ^before <max-id>)
   (<q> ^current-action.first-appearance true)
}

sp {retrospective-learning*apply*retrieve-subaction-episode*success
   (state <s> ^name retrospective-learning
              ^operator.name retrieve-subaction-episode
              ^epmem <epmem>
              ^subactions <subs>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>)
   (<cmd> ^query <q>)
   (<subs> ^max-episode-id <old-max>)
-->
   (<subs> ^max-episode-id <old-max> -
           ^max-episode-id <ep-id>)
   (<s> ^subaction-episode <episode>)
   (<cmd> ^query <q> -)
}

sp {retrospective-learning*apply*retrieve-subaction-episode*failure
   (state <s> ^name retrospective-learning
              ^operator.name retrieve-subaction-episode
              ^epmem <epmem>
              ^subactions <subs>)
   (<epmem> ^result.failure
            ^command <cmd>)
   (<cmd> ^query <q>)
-->
   (<subs> ^retrieved-all true)
   (<cmd> ^query <q> -)
}
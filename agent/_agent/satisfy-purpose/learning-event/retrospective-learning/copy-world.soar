sp {retrospective-learning*propose*copy-world
   (state <s> ^name retrospective-learning
              ^initial-episode.world <world>
             -^copied-world)
-->
   (<s> ^operator <o> +)
   (<o> ^name copy-world)
}

sp {retrospective-learning*apply*copy-world*create*world
   (state <s> ^name retrospective-learning
              ^operator.name copy-world)
-->
   (<s> ^world <w>)
   (<w> ^objects <objs>
        ^predicates <preds>
        ^robot <robot>)
   (<robot> ^arm <arm>)
}

sp {retrospective-learning*apply*copy-world*copy*robot
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.robot <epmem-robot>
              ^world.robot <wmem-robot>)
   (<epmem-robot> ^{<att-name> <> arm} <att-val>)
-->
   (<wmem-robot> ^<att-name> <att-val>)
}

sp {retrospective-learning*apply*copy-world*copy*robot*arm
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.robot.arm <epmem-arm>
              ^world.robot.arm <wmem-arm>)
   (<epmem-arm> ^{<att-name> <> arm <> predicates} <att-val>)
-->
   (<wmem-arm> ^<att-name> <att-val>)
}

sp {retrospective-learning*apply*copy-world*copy*object
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.objects.object <epmem-obj>
              ^world.objects <objs>)
   (<epmem-obj> ^id <id>)
-->
   (<objs> ^object <wmem-obj>)
   (<wmem-obj> ^id <id>
               ^predicates <preds>)
}

sp {retrospective-learning*apply*copy-world*copy*object*predicates
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.objects.object <epmem-obj>
              ^world.objects.object <wmem-obj>)
   (<epmem-obj> ^id <id>
                ^predicates <epmem-preds>)
   (<wmem-obj> ^id <id>
               ^predicates <wmem-preds>)
   (<epmem-preds> ^<pred-name> <pred-val>)
-->
   (<wmem-preds> ^<pred-name> <pred-val>)
}

sp {retrospective-learning*apply*copy-world*copy*predicate
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.predicates.predicate <epmem-pred>
              ^world.predicates <preds>)
   (<epmem-pred> ^name <pred-name>
                 ^predicate-info <pred-info>)
-->
   (<preds> ^predicate <wmem-pred>)
   (<wmem-pred> ^name <pred-name>
                ^predicate-info <pred-info>)
}

sp {retrospective-learning*apply*copy-world*copy*predicate*instance
   (state <s> ^name retrospective-learning
              ^operator.name copy-world
              ^initial-episode.world.predicates.predicate <epmem-pred>
              ^world.predicates.predicate <wmem-pred>
              ^world.objects <objs>)
   (<epmem-pred> ^name <pred-name>
                 ^instance <epmem-instance>)
   (<epmem-instance> ^{1}.id <obj1-id> ^{2}.id <obj2-id>)
   (<wmem-pred> ^name <pred-name>)
   (<objs> ^object <wmem-obj1>
           ^object <wmem-obj2>)
   (<wmem-obj1> ^id <obj1-id>)
   (<wmem-obj2> ^id <obj2-id>)
-->
   (<wmem-pred> ^instance <wmem-instance>)
   (<wmem-instance> ^1 <wmem-obj1> ^2 <wmem-obj2>)
}

sp {retrospective-learning*apply*copy-world*op-no-change*finished
   (state <s> ^superstate.name retrospective-learning
              ^superstate.operator.name copy-world
              ^impasse no-change
              ^attribute operator
              ^superstate <ss>)
-->
   (<ss> ^copied-world true)
}

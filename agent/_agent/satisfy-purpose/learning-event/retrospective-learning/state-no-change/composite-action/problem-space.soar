sp {retrospective-learning*composite-action*elaborate*problem-space
   (state <s> ^superstate.problem-space <sps>
              ^superstate.operator.action-type composite)
   (<sps> ^name retrospective-learning)
-->
   (<s> ^problem-space <ps>)
   (<ps> ^name retrospective-learning
         ^name composite-action
         ^default-state-copy no
         ^default-operator-copy no
         ^default-desired-copy no
         ^action <action>
         ^state <state>
         ^learn <learn>)
   (<action> ^type simulate)
   (<state> ^type imagined
            ^world-copy deep)
}

sp {retrospective-learning*evaluate-operator*elaborate*problem-space*propose-actions*false
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name retrospective-learning
         ^action <action>)
-->
   (<action> ^propose-actions false)
}

sp {retrospective-learning*evaluate-operator*elaborate*problem-space*copy
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name retrospective-learning
         ^state <state>)
-->
   (<state> ^desired-copy deep
            ^operator-copy deep)
}
            

#
#sp {retrospective-learning*evaluate-operator*elaborate*problem-space
#   (state <s> ^name evaluate-operator
#              ^superstate.problem-space <sps>)
#   (<sps> ^name retrospective-learning)
#-->
#   (<s> ^problem-space <ps>)
#   (<ps> ^name retrospective-learning
#         ^name composite-action
#         ^action <action>
#         ^state <state>
#         ^learn <learn>)
#   (<action> ^type simulate)
#   (<state> ^type imagined
#            ^world-copy deep)
#}
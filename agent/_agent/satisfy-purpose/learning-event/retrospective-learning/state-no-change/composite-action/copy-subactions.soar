sp {retrospective-learning*composite-action*copy-subactions
   (state <s> ^problem-space <ps>
              ^superstate.subactions <src-subs>)
   (<src-subs> ^next <src-sub>)
   (<ps> ^name retrospective-learning
         ^name composite-action)
-->
   (<s> ^subactions <copy-subs>
        ^subaction-map <map>)
   (<map> ^mapping <mapping>)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<copy-subs> ^next <copy-sub>)
}


sp {retrospective-learning*composite-action*copy-subactions*copy*subaction*next
   (state <s> ^problem-space <ps>
              ^subaction-map <map>
              ^subactions <subs>)
   (<ps> ^name retrospective-learning
         ^name composite-action)
   (<map> ^mapping <mapping>)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<src-sub> ^next <new-src-sub>)
-->
   (<map> ^mapping <new-mapping>)
   (<new-mapping> ^source <new-src-sub> ^copy <new-copy-sub>)
   (<copy-sub> ^next <new-copy-sub>)
}

sp {retrospective-learning*composite-action*copy-subactions*copy*subaction*info
   (state <s> ^problem-space <ps>
              ^subaction-map.mapping <mapping>)
   (<ps> ^name retrospective-learning
         ^name composite-action)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<src-sub> ^name <sub-name>)
-->
   (<copy-sub> ^name <sub-name>
               ^action-type primitive)
}

sp {retrospective-learning*composite-action*copy-subactions*copy*subaction*object*arg
   (state <s> ^problem-space <ps>
              ^subaction-map.mapping <mapping>)
   (<ps> ^name retrospective-learning
         ^name composite-action
         ^state.object-map.mapping <obj-mapping>)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<src-sub> ^<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <src-obj>)
   (<obj-mapping> ^source <src-obj> ^copy <copy-obj>)
-->
   (<copy-sub> ^<arg-name> <copy-arg>)
   (<copy-arg> ^arg-type object
               ^id <copy-obj>)
}

sp {retrospective-learning*composite-action*copy-subactions*copy*subaction*concept*arg
   (state <s> ^problem-space <ps>
              ^subaction-map.mapping <mapping>)
   (<ps> ^name retrospective-learning
         ^name composite-action)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<src-sub> ^<arg-name> <arg>)
   (<arg> ^arg-type concept
          ^id <concept>)
-->
   (<copy-sub> ^<arg-name> <copy-arg>)
   (<copy-arg> ^arg-type concept
               ^id <concept>)
}

sp {retrospective-learning*composite-action*copy-subactions*copy*subaction*predicate*arg
   (state <s> ^problem-space <ps>
              ^subaction-map.mapping <mapping>)
   (<ps> ^name retrospective-learning
         ^name composite-action
         ^state.object-map.mapping <obj-mapping>)
   (<mapping> ^source <src-sub> ^copy <copy-sub>)
   (<src-sub> ^<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^id <pred-id>
          ^2 <src-obj>)
   (<obj-mapping> ^source <src-obj> ^copy <copy-obj>)
-->
   (<copy-sub> ^<arg-name> <copy-arg>)
   (<copy-arg> ^arg-type predicate
               ^id <pred-id>
               ^2 <copy-obj>)
}

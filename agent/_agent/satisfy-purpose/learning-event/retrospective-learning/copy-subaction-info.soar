sp {retrospective-learning*propose*copy-subaction-info
   (state <s> ^name retrospective-learning
              ^subaction-episode <ep>)
-->
   (<s> ^operator <o> +)
   (<o> ^name copy-subaction-info
        ^subaction-episode <ep>)
}

sp {retrospective-learning*apply*copy-subaction-info
   (state <s> ^name retrospective-learning
              ^operator.name copy-subaction-info
              ^subactions <subs>
             -^subaction-info)
   (<subs> ^next <next>)
-->
   (<s> ^subaction-info <info>)
   (<info> ^action-type primitive
           ^next <next>)
   (<subs> ^next <next> -
           ^next <info>)
}

sp {retrospective-learning*apply*copy-subaction-info*copy*name
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^subaction-info <info>)
   (<o> ^name copy-subaction-info
        ^subaction-episode.current-action.name <action-name>)
-->
   (<info> ^name <action-name>)
}

sp {retropsective-learning*apply*copy-subaction-info*copy*object*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^subaction-info <info>
              ^world.objects.object <wmem-obj>)
   (<o> ^name copy-subaction-info
        ^subaction-episode.current-action.arguments.<arg-name> <arg>)
   (<arg> ^arg-type object
          ^id <epmem-obj>)
   (<epmem-obj> ^id <obj-id>)
   (<wmem-obj> ^id <obj-id>)
-->
   (<info> ^<arg-name> <arg-copy>)
   (<arg-copy> ^arg-type object
               ^id <wmem-obj>)
}

sp {retropsective-learning*apply*copy-subaction-info*copy*concept*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^subaction-info <info>)
   (<o> ^name copy-subaction-info
        ^subaction-episode.current-action.arguments.<arg-name> <arg>)
   (<arg> ^arg-type concept
          ^id <concept>)
-->
   (<info> ^<arg-name> <arg-copy>)
   (<arg-copy> ^arg-type concept
               ^id <concept>)
}

sp {retropsective-learning*apply*copy-subaction-info*copy*predicate*arg
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^subaction-info <info>
              ^world.objects.object <wmem-obj>)
   (<o> ^name copy-subaction-info
        ^subaction-episode.current-action.arguments.<arg-name> <arg>)
   (<arg> ^arg-type predicate
          ^id <pred-id>
          ^2 <epmem-obj>)
   (<epmem-obj> ^id <obj-id>)
   (<wmem-obj> ^id <obj-id>)
-->
   (<info> ^<arg-name> <arg-copy>)
   (<arg-copy> ^arg-type predicate
               ^id <pred-id>
               ^2 <wmem-obj>)
}

sp {retrospective-learning*apply*copy-subaction-info*cleanup
   (state <s> ^name retrospective-learning
              ^operator <o>
              ^subaction-episode <ep>
              ^subaction-info <info>)
   (<o> ^name copy-subaction-info
        ^subaction-episode <ep>)
-->
   (<s> ^subaction-episode <ep> -
        ^subaction-info <info> -)
}

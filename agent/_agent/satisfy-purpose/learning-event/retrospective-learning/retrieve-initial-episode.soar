sp {retrospective-learning*propose*retrieve-initial-episode
   (state <s> ^name retrospective-learning
             -^initial-episode)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-initial-episode)
}

sp {retrospective-learning*apply*retrieve-initial-episode
   (state <s> ^name retrospective-learning
              ^operator.name retrieve-initial-episode
              ^superstate.operator.action-context.action-handle <action-handle>
              ^epmem.command <cmd>)
-->
   (<cmd> ^query <q>)
   (<q> ^interaction.stack.segment.purpose <p>)
   (<p> ^type action
        ^parameters.action-operator <op>)
   (<op> ^action-handle <action-handle>
         ^first true)
}

sp {retrospective-learning*apply*retrieve-initial-episode*success
   (state <s> ^name retrospective-learning
              ^operator.name retrieve-initial-episode
              ^epmem <epmem>
              ^present-id <present-id>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>)
   (<cmd> ^query <q>)
-->
   (<s> ^initial-episode <episode>
        ^subactions <subs>)
   (<subs> ^max-episode-id <present-id>
           ^min-episode-id <ep-id>
           ^next none)
   (<cmd> ^query <q> -)
}
        
sp {retrospective-learning*apply*retrieve-initial-episode*failure
   (state <s> ^name retrospective-learning
              ^operator.name retrieve-initial-episode
              ^epmem <epmem>)
   (<epmem> ^result.failure
            ^command <cmd>)
   (<cmd> ^query <q>)
-->
   (<s> ^initial-episode none)
   (<cmd> ^query <q> -)
}

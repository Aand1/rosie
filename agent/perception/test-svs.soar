sp {propose*init-svs-tester
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> + >)
   (<o> ^name init-svs-tester)
}

sp {apply*init-svs-tester
   (state <s> ^operator.name init-svs-tester)
-->
   (<s> ^name svs-tester)
}

sp {svs-tester*propose*query-occlusion
   (state <s> ^name svs-tester
             -^svs.command.extract_once.type occlusion)
-->
   (<s> ^operator <o> + >)
   (<o> ^name query-occlusion)
}

sp {svs-tester*apply*query-occlusion
   (state <s> ^operator.name query-occlusion
              ^svs.command <cmd>)
-->
   (<cmd> ^extract_once <occlusion>)
   (<occlusion> ^type occlusion
              ^a <node2>)
   (<node2> ^type node
               ^id |2|)
}

sp {svs-tester*propose*copy-result
   (state <s> ^name svs-tester
              ^svs.command.extract_once <occlusion>)
   (<occlusion> ^type occlusion)
-->
   (<s> ^operator <o> + >)
   (<o> ^name copy-result)
}

sp {svs-tester*apply*copy-result*remove*command
   (state <s> ^operator.name copy-result
              ^svs.command <cmd>)
   (<cmd> ^extract_once <occlusion>)
   (<occlusion> ^type occlusion)
-->
   (<cmd> ^extract_once <occlusion> -)
}

sp {svs-tester*apply*copy-result
   (state <s> ^operator.name copy-result
              ^svs.command.extract_once <occlusion>
              ^io.output-link <out>)
   (<occlusion> ^type occlusion
                ^result.record.value <value>)
-->
   (<out> ^occlusion.value <value>)
}

sp {svs-tester*remove*completed*actions
   (state <s> ^operator <o>
              ^io.output-link <out>)
   (<out> ^<command> <c>)
   (<c> ^status success)
-->
   (<out> ^<command> <c> -)
}